<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Evoup`s Blog]]></title>
  <link href="http://evoupsight.com/atom.xml" rel="self"/>
  <link href="http://evoupsight.com/"/>
  <updated>2014-01-13T01:30:21+08:00</updated>
  <id>http://evoupsight.com/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[win7上搭建cocos2d-x2.2.2开发环境]]></title>
    <link href="http://evoupsight.com/blog/2014/01/13/win7-install-cocos2d-x2-dot-2-2/"/>
    <updated>2014-01-13T00:25:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/01/13/win7-install-cocos2d-x2-dot-2-2</id>
    <content type="html"><![CDATA[<p>在win7上搭建cocos2d-x的开发环境，主要用到的开发IDE为visual C++2010，为什么不再使用vc6？第一，cocos2d-x本身不支持。第二，支持C++0x的特性。对于现代游戏游戏引擎来说，这是必要的。安装vc
2010这里就不再讨论。</p>

<!-- more -->


<p>直接讲如何进行cocos2d-x的编译了。</p>

<h3>1）下载</h3>

<p>首先当然是要去下载，我这里是cocos2d-x2.2.2版本，下载cocos2d-x2.2.2.zip。这个版本和《cocos2d-x权威指南》有什么关联度的等等研究了就不得而知了。</p>

<h3>2）解压和编译cocos2d-x</h3>

<p>接下来是解压,注意不要解压到中文目录，否则接下来生成项目会报错。我解压到了D:\gamedev\cocos2d-x-2.2.2\cocos2d-x-2.2.2。随后进入cocos2d-x2.2.2文件夹下的cocos2d-x2.2.2文件夹。因为我们是使用vc2010，所以就双击cocos2d-win32.vc2010.sln。
进到IDE之后，选择解决方案资源管理器下的cocos2d-win32.vc2010,右击选择配置属性-配置，确保每个项目都为debug，可以看到共有17个项目。然后按下F7开始生成解决方案。
慢慢等，我是等来10来分钟。可以看到17个项目都生成成功了。</p>

<h3>3）创建工程</h3>

<p>编译完了就可以创建工程了。当然需要先安装好python，我这里是python2.6.2，有人说要装python2.7，看来并不是必须。然后我们生成工程，运行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd </span>D:<span class="se">\g</span>amedev<span class="se">\c</span>ocos2d-x-2.2.2<span class="se">\c</span>ocos2d-x-2.2.2<span class="se">\t</span>ools<span class="se">\p</span>roject-creator<span class="se">\</span>
</span><span class='line'>create_project.py -project HelloWorld -package com.cocos2d-x.org -language cpp
</span></code></pre></td></tr></table></div></figure>


<p>其中com.cocos2d-x.org是为android项目分配的包名称。运行完毕后，会在D:\gamedev\cocos2d-x-2.2.2\cocos2d-x-2.2.2\project目录下生成ios、android、win32、mac、linux等各种平台的项目。</p>

<h3>4）编译工程</h3>

<p>最后进入刚刚取名为HelloWorld的项目中</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd </span>D:<span class="se">\g</span>amedev<span class="se">\c</span>ocos2d-x-2.2.2<span class="se">\c</span>ocos2d-x-2.2.2<span class="se">\p</span>rojects/HelloWorld
</span></code></pre></td></tr></table></div></figure>


<p>双击proj.win32下的HelloWorld.sln文件，即可进入工程，没有什么问题的话，就可以按ctrl+F5开始就可以开始进行项目的调试了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[freebsd上手动编译boost的boost-regex库]]></title>
    <link href="http://evoupsight.com/blog/2014/01/09/freebsd-install-boost-for-regex/"/>
    <updated>2014-01-09T14:45:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/01/09/freebsd-install-boost-for-regex</id>
    <content type="html"><![CDATA[<p>Boost这玩意用起来容易，安装起来却很麻烦，如果按照默认安装很庞大臃肿，原因是bjam搞得太复杂了。对于只使用其中某几个模块而采用整体安装的方式时间和空间上都是划不来的。如果只需要连接其中的正则表达式模块regex的话，可以采取单独安装的方法。</p>

<!-- more -->


<h3>1.生成bjam编译器</h3>

<p>boost不同的版本可能会有bjam包的路径不同的情况，这里采用boost_1_38_0为例。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">pwd</span>
</span><span class='line'>/home/software
</span><span class='line'><span class="nv">$ </span>fetch http://sourceforge.net/projects/boost/files/boost/1.38.0/boost_1_38_0.tar.bz2
</span><span class='line'><span class="nv">$ </span>tar xjf boost_1_38_0.tar.bz2
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>tools/jam/src
</span><span class='line'><span class="nv">$ </span>./build.sh
</span></code></pre></td></tr></table></div></figure>


<p>编译后bjam程序存放于tools/jam/src/bin.freebsdx86_64/</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>vi ./tools/build/v2/user-config.jam
</span></code></pre></td></tr></table></div></figure>


<p>修改“#using gcc;”为&#8221;using gcc;&#8221;</p>

<h3>2.用bjam编译boost</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>./bjam clean <span class="c">#清理之前的安装</span>
</span><span class='line'><span class="nv">$ </span>./bjam --build-type<span class="o">=</span><span class="nb">complete</span> --with-regex workdir <span class="c">#只编译regex库，生成include和lib</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意bjam编译时，需要注意bjam只是把boost的include和lib的路径放在本地，一个是当前目录的子目录boost中，一个是在刚在指定workdir的lib中。
然后复制到freebsd的include目录(/usr/local/include)和lib目录(/usr/local/lib)。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> /home/software/boost_1_38_0
</span><span class='line'>sudo cp -r boost /usr/local/include/
</span><span class='line'>sudo cp -r workdir/lib /usr/local/
</span></code></pre></td></tr></table></div></figure>


<h3>3.编译使用boost-regex的程序</h3>

<p>简单的程序regex.cpp试一把</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &lt;boost/regex.hpp&gt;</span>
</span><span class='line'><span class="cp">#include &lt;iostream&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">s</span> <span class="o">=</span> <span class="s">&quot;&lt;html&gt;我是boost正则表达式匹配到的内容&lt;/html&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="n">boost</span><span class="o">::</span><span class="n">regex</span> <span class="n">reg</span><span class="p">(</span> <span class="s">&quot;&lt;html&gt;(.+?)&lt;/html&gt;&quot;</span> <span class="p">);</span>
</span><span class='line'>  <span class="n">boost</span><span class="o">::</span><span class="n">sregex_token_iterator</span> <span class="n">p</span><span class="p">(</span> <span class="n">s</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">s</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">reg</span><span class="p">,</span> <span class="mo">01</span> <span class="p">);</span>
</span><span class='line'>  <span class="n">boost</span><span class="o">::</span><span class="n">sregex_token_iterator</span> <span class="n">end</span><span class="p">;</span>
</span><span class='line'>  <span class="k">while</span> <span class="p">(</span> <span class="n">p</span> <span class="o">!=</span> <span class="n">end</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="o">*</span><span class="n">p</span><span class="o">++</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&mdash;&mdash;&mdash;&mdash;&mdash;-付测试方法&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</p>

<h3>编译方法</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>g++ -Wall regex.cpp -lboost_regex-gcc42-d-1_38 -I/usr/local/include -L/usr/local/lib -o regex
</span><span class='line'><span class="nv">$ </span>./regex
</span><span class='line'>我是boost正则表达式匹配到的内容
</span></code></pre></td></tr></table></div></figure>


<p>这样就妥妥的了，祝各位看官好运，收工:)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用expect脚本检测telnet瞬断]]></title>
    <link href="http://evoupsight.com/blog/2014/01/08/expect-check-telnet-losing-connection-immediately/"/>
    <updated>2014-01-08T18:17:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/01/08/expect-check-telnet-losing-connection-immediately</id>
    <content type="html"><![CDATA[<p>分享一个检查telnet瞬断的脚本，我用调用它来检测thrift的TCP9090端口一连上就断开连接的状态。</p>

<p>直接上代码了</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#!/usr/local/bin/expect</span>
</span><span class='line'>spawn telnet 127.0.0.1 9090
</span><span class='line'><span class="nb">set </span>timeout  1
</span><span class='line'>expect <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;*Escape character is*&quot;</span> <span class="o">{</span>
</span><span class='line'>                exp_continue
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="s2">&quot;*Connection closed by foreign host*&quot;</span> <span class="o">{</span>
</span><span class='line'>                send <span class="s2">&quot;note: 1) detect a unsafe connection&quot;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>expect <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;*Connection closed by foreign host*&quot;</span> <span class="o">{</span>
</span><span class='line'>                send <span class="s2">&quot;note: 2) detect a unsafe connection&quot;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        send <span class="s2">&quot;\\003&quot;</span>
</span><span class='line'>        <span class="nb">exit</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>expect <span class="s2">&quot;*Connection closed by foreign host*&quot;</span>
</span><span class='line'>send <span class="s2">&quot;note: 3) disconnect by client cause timeout or not immediately exit expect&quot;</span>
</span><span class='line'><span class="nb">exit</span>
</span><span class='line'>expect eof
</span><span class='line'>
</span><span class='line'><span class="nb">exit</span>
</span><span class='line'>expect eof
</span></code></pre></td></tr></table></div></figure>


<p>调用者程序可以根据expect输出的note: 3) disconnect by client cause timeout or not immediately exit expect得知telnet上去瞬间失去连接。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WIN7下安装VC++6.0的方法]]></title>
    <link href="http://evoupsight.com/blog/2014/01/08/win7-install-vc6/"/>
    <updated>2014-01-08T14:09:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/01/08/win7-install-vc6</id>
    <content type="html"><![CDATA[<p>今天打算研究snmp++的例子，要回来用一下vc6，WIN7上安装vc6还是会遇到一点点小问题，记录一下备查。</p>

<!-- more -->


<h3>步骤/方法</h3>

<p>1）在安装或使用Visual C++6.0时，如果出现兼容性问题提示对话框，都只要选择“不再显示此消息”，然后选择“运行程序”。根据网上资料和实践没有任何问题。</p>

<p>2）在安装Visual C++6.0过程中，选择“custom（自定义安装）”：其中visual source safe是不需安装的，这是微软的版本控制系统，咱就不装了。</p>

<p>3）最后最重要的一点，把windows7的UAC降到最低。然后打开vc6的时候需要以用管理员身份运行，这样就可以了。</p>

<h3>补充</h3>

<p>网上说还需要进到“工具”菜单的“选项”中，然后在“选项”窗口中选择“目录”选项卡。加入一些目录的路径。我实际试验下来可以不用这么做。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hbase连zookeeper瞬断]]></title>
    <link href="http://evoupsight.com/blog/2013/12/31/hbase-access-zookeeper-fail-too-many-connections-form-ip/"/>
    <updated>2013-12-31T11:48:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/12/31/hbase-access-zookeeper-fail-too-many-connections-form-ip</id>
    <content type="html"><![CDATA[<h3>问题</h3>

<p>今天修理hbase问题的时候发现，监控的60010端口的master.jsp就是无法显示，进入log查看发现zookeeper连上了之后马上就断开。</p>

<p><code>[NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn$Factory@247]</code>
<code>- Too many connections from /10.10.8.136 - max is 10</code></p>

<p>这种情况在telnet测试中被证实，一连上也是瞬间脱离与服务器的连接。</p>

<!-- more -->


<h3>解决</h3>

<p>其实需要在zoo.cfg中加入maxClientCnxns=300，加完以后需要重启。问题解决。</p>

<h3>原因</h3>

<p>我们线上有24台节点，但是这个参数竟然是使用默认的10，导致更多的客户端连上了zookeeper导致namenode的自带管理页无法连接到zookeeper，进而无法显示该页面。</p>

<p>如何监控zookeeper的其他指标，这里列出zoo.cfg的配置文件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dataDir = 数据存放路径
</span><span class='line'>
</span><span class='line'>dataLogDir = 日志存放路径
</span><span class='line'>
</span><span class='line'>clientPort = 客户端连接端口
</span><span class='line'>
</span><span class='line'>clientPortAddress
</span><span class='line'>
</span><span class='line'>tickTime= 整形 不能为0
</span><span class='line'>
</span><span class='line'>maxClientCnxns= 整形 最大客户端连接数
</span><span class='line'>
</span><span class='line'>minSessionTimeout= 整形
</span><span class='line'>
</span><span class='line'>maxSessionTimeout= 整形
</span><span class='line'>
</span><span class='line'>initLimit = 整形
</span><span class='line'>
</span><span class='line'>syncLimit = 整形
</span><span class='line'>
</span><span class='line'>electionAlg = 整形
</span><span class='line'>
</span><span class='line'>peerType = observer | participant
</span><span class='line'>
</span><span class='line'>server. sid= host:port | host:port:port  | host:port:port:type (type值 observer | participant)
</span><span class='line'>
</span><span class='line'>group.gid = sid:sid (一个ID， 值是多个sid, 中间以:分割， 一个sid只能属于一个gid)
</span><span class='line'>
</span><span class='line'>weight.sid=整形</span></code></pre></td></tr></table></div></figure>


<p>可以看出还有至少2个参数是需要考虑的minSessionTimeout和maxSessionTimeout需要调优，得用JMX监控一段时间得出结论了。</p>

<p>同样的发现thrift也存在类似一连就断开的问题，下篇博文再作分析。</p>

<h3>总结</h3>

<p>这个案例告诉我不要盲目认为按照默认参数配置就没问题了，那是给小批量测试用的，需要根据实际情况采取相应配置。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[centos安装erlang R16b03]]></title>
    <link href="http://evoupsight.com/blog/2013/12/12/centos-install-erlangr16b03/"/>
    <updated>2013-12-12T16:43:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/12/12/centos-install-erlangr16b03</id>
    <content type="html"><![CDATA[<h3>起因</h3>

<p>原本以为centos上简单敲几个yum install erlang就可以完成，结果事与愿违，没有package，那么只要乖乖下载源码编译，记录若干步骤备查。</p>

<!-- more -->


<h3>首先安装必要的依赖</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo yum groupinstall Base <span class="s2">&quot;Development Tools&quot;</span> <span class="s2">&quot;Perl Support&quot;</span>
</span><span class='line'><span class="nv">$ </span>sudo yum install gcc glibc-devel make ncurses-devel openssl-devel autoconf
</span><span class='line'><span class="nv">$ </span>sudo yum install unixODBC unixODBC-devel
</span><span class='line'><span class="nv">$ </span>wget http://www.erlang.org/download/otp_src_R16B03.tar.gz
</span></code></pre></td></tr></table></div></figure>


<h3>源码下载</h3>

<p>并且下载erlang的源码，我这里选择的是最新的R16B03</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>tar xzf otp_src_R16B03.tar.gz
</span></code></pre></td></tr></table></div></figure>


<h3>安装</h3>

<p>注意,如果没有先</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo ln -s /usr/bin/gcc /usr/local/bin/gcc44
</span></code></pre></td></tr></table></div></figure>


<p>会收到` checking for C compiler default output file name&hellip; configure: error: C compiler cannot create</p>

<p>的错误</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>otp_src_R16B03
</span><span class='line'><span class="nv">$ </span>./configure --prefix<span class="o">=</span>/home/erlang --without-javac //不用装java
</span><span class='line'>make
</span><span class='line'><span class="nv">$ </span>sudo make install
</span></code></pre></td></tr></table></div></figure>


<p>等待安装完成。</p>

<h3>设置环境变量</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>vim ~/.profile
</span></code></pre></td></tr></table></div></figure>


<p>或者</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo vim /etc/profiles
</span></code></pre></td></tr></table></div></figure>


<p>加入</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:/home/erlang/bin
</span></code></pre></td></tr></table></div></figure>


<p>加完如果要立即生效忘记去source /etc/profile和source ~/.bash_profile，否则要等到下次登录再可以。</p>

<p>(ps: bash是根据/etc/profile、~/.bash_profile、~/.bash_login或~/.profile的顺序进行读取的。)</p>

<p>(ADDED IN 2013-12-16,今日发现以上代码必须加到~/.bashrc中才行，否则重启后还是不予加载原因未明)</p>

<h3>测试</h3>

<p>接下来输入erl,应该就可以看见erlang的提示符了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Eshell V5.10.4  <span class="o">(</span>abort with ^G<span class="o">)</span>
</span><span class='line'>1&gt;
</span></code></pre></td></tr></table></div></figure>


<p>写一个test.erl测试</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">test</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">sayhello</span><span class="o">/</span><span class="mi">0</span><span class="p">]).</span>
</span><span class='line'><span class="nf">sayhello</span><span class="p">()</span><span class="o">-&gt;</span>
</span><span class='line'>  <span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;hello world</span><span class="si">~n</span><span class="s">&quot;</span><span class="p">).</span>
</span></code></pre></td></tr></table></div></figure>


<p>编译运行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>erlc test.erl
</span><span class='line'>erl -noshell -s <span class="nb">test </span>sayhello -s init stop
</span><span class='line'>hello world
</span></code></pre></td></tr></table></div></figure>


<p>ok，完成收工，还不算太复杂，比freebsd上安装顺利点:)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用php的snmp模块进行监控数据的获取]]></title>
    <link href="http://evoupsight.com/blog/2013/12/10/php-use-snmp-module-to-monitor/"/>
    <updated>2013-12-10T10:19:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/12/10/php-use-snmp-module-to-monitor</id>
    <content type="html"><![CDATA[<p>简单地根据经验归纳，snmp被叫做简单网络管理协议(Simple Network Management Protocol)，是监控业界标准的设备间通讯接口会话层协议，位于OSI的第五层。各类开源软件广泛采用了此协议进行数据的获取，目前已经从明文传输的v1发展到了具有较高安全性的v3版本。与snmp相关的知识有很多，<code>MIB</code>（管理信息数据库），<code>OID</code>（对象标识符），就目前而言，只需要记得有这2个名字就可以了。
通过源码安装php的snmp模块和安装一般php的模块没有本质区别。一共也就2种方式，&mdash;enable或者&mdash;with静态方式和phpize动态方式。共同点是都需要ext目录下面有snmp这个模块。
下面先论述如以&mdash;enable或者&mdash;with的方式来把snmp静态编译到php中去。
首先下载php软件包。</p>

<!-- more -->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>wget wget http://tw1.php.net/get/php-5.5.6.tar.bz2/from/this/mirror
</span><span class='line'><span class="nv">$ </span>tar xjf php-5.5.6.tar.bz2
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>php-5.5.6
</span><span class='line'><span class="nv">$ </span>ls ext/snmp/
</span><span class='line'>config.m4  config.w32  CREDITS  php_snmp.h  snmp.c  snmp.dsp  tests
</span><span class='line'><span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>可见snmp已经自带了，不需要到pecl下载然后放到ext目录。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo yum install libxml2 libxml2-devel
</span></code></pre></td></tr></table></div></figure>


<p>备注如果一意孤行，只装libxml2，呵呵，那么你将收到<code>configure: error: xml2-config not found. Please check your libxml2 installation.</code>的报错。同样，你要是不装net-snmp-devel，就可以收到<code>configure: error: Could not find net-snmp-config binary. Please check your net-snmp installation</code>的报错。</p>

<h3>静态编译</h3>

<p>查一下snmp的安装选项</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>./configure --help | grep snmp
</span><span class='line'>  --with-snmp<span class="o">=</span>DIR         Include SNMP support
</span></code></pre></td></tr></table></div></figure>


<p>是&mdash;with，了解后继续操作，这里直接使用默认snmp路径</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>./configure --prefix<span class="o">=</span>/usr/local/php55_static_snmp --with-snmp --ebable-sockets
</span><span class='line'><span class="nv">$ </span>make
</span><span class='line'><span class="nv">$ </span>sudo make install
</span></code></pre></td></tr></table></div></figure>


<p>这样静态编译就完成了。</p>

<h3>动态编译</h3>

<p>假设一开始把php安装在/usr/local/php55，现在要以编译出sockets.so和snmp.so</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>ext/snmp
</span><span class='line'><span class="nv">$ </span>/usr/local/php55/bin/phpize
</span><span class='line'><span class="nv">$ </span>./configure --with-php-config<span class="o">=</span>/usr/local/php55/bin/php-config
</span><span class='line'><span class="nv">$ </span>make
</span><span class='line'><span class="nv">$ </span>sudo make install
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> ../../ext/sockets
</span><span class='line'><span class="nv">$ </span>/usr/local/php55/bin/phpize
</span><span class='line'><span class="nv">$ </span>./configure --with-php-config<span class="o">=</span>/usr/local/php55/bin/php-config
</span><span class='line'><span class="nv">$ </span>make
</span><span class='line'><span class="nv">$ </span>sudo make install
</span></code></pre></td></tr></table></div></figure>


<p>然后复制刚才的编译好的so文件到扩展目录到etc目录</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>cp /usr/local/php55/lib/php/extensions/no-debug-non-zts-20121212/snmp.so /usr/local/php55/etc/
</span><span class='line'><span class="nv">$ </span>cp /usr/local/php55/lib/php/extensions/no-debug-non-zts-20121212/sockets.so /usr/local/php55/etc/
</span></code></pre></td></tr></table></div></figure>


<p>编辑php的配置文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>vi /usr/local/php55/etc/php.ini
</span></code></pre></td></tr></table></div></figure>


<p>加入2行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">extension</span><span class="o">=</span>sockets.so
</span><span class='line'><span class="nv">extension</span><span class="o">=</span>snmp.so
</span></code></pre></td></tr></table></div></figure>


<h3>撰写php版的snmp客户端测试程序</h3>

<p>开始写点测试程序，确认snmp已经在本机支持</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$nc</span> -uvz 127.0.0.1 161
</span><span class='line'>Connection to 127.0.0.1 161 port <span class="o">[</span>udp/snmp<span class="o">]</span> succeeded!
</span></code></pre></td></tr></table></div></figure>


<p>已经支持，那么来写程序吧</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * test.php</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="nv">$host</span><span class="o">=</span><span class="s2">&quot;127.0.0.1&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$community</span><span class="o">=</span><span class="s2">&quot;public&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$oid</span><span class="o">=</span><span class="s2">&quot;.1.3.6.1.4.1.2021.10.1.3.1&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$oid1</span><span class="o">=</span><span class="s2">&quot;.1.3.6.1.4.1.2021.10.1.3.2&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$oid2</span><span class="o">=</span><span class="s2">&quot;.1.3.6.1.4.1.2021.10.1.3.3&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$oid3</span><span class="o">=</span><span class="s2">&quot;.1.3.6.1.4.1.2021.4.3.0&quot;</span><span class="p">;</span>
</span><span class='line'><span class="c1">// 1 minute Load</span>
</span><span class='line'><span class="k">echo</span> <span class="p">(</span><span class="nb">snmpget</span><span class="p">(</span><span class="nv">$host</span><span class="p">,</span><span class="nv">$community</span><span class="p">,</span><span class="nv">$oid</span><span class="p">)</span><span class="o">.</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="c1">// 5 minute Load</span>
</span><span class='line'><span class="k">echo</span> <span class="p">(</span><span class="nb">snmpget</span><span class="p">(</span><span class="nv">$host</span><span class="p">,</span><span class="nv">$community</span><span class="p">,</span><span class="nv">$oid1</span><span class="p">)</span><span class="o">.</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="c1">// 15 minute Load</span>
</span><span class='line'><span class="k">echo</span> <span class="p">(</span><span class="nb">snmpget</span><span class="p">(</span><span class="nv">$host</span><span class="p">,</span><span class="nv">$community</span><span class="p">,</span><span class="nv">$oid2</span><span class="p">)</span><span class="o">.</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="c1">// Total Swap Size</span>
</span><span class='line'><span class="k">echo</span> <span class="p">(</span><span class="nb">snmpget</span><span class="p">(</span><span class="nv">$host</span><span class="p">,</span><span class="nv">$community</span><span class="p">,</span><span class="nv">$oid3</span><span class="p">)</span><span class="o">.</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>查看结果</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>/usr/local/php55/bin/php test.php
</span><span class='line'>STRING: 0.05
</span><span class='line'>STRING: 0.03
</span><span class='line'>STRING: 0.03
</span><span class='line'>INTEGER: 2064376 kB
</span></code></pre></td></tr></table></div></figure>


<h3>分析总结</h3>

<p>可以看出php的snmp接口还是非常简明优雅的，由此推断你只要学会rrdtool、php和snmp，自行打造一款类cacti的监控软件不会有太大的困难。但是这么做其实还有一点要注意，得装snmpd，我自己写公司监控平台2.0的时候，上级要求使用C api直接获取数据，不走snmp，其实通过对分析ganglia源代码的粗读，也能马上发现其也是采用了原生api调用获取主要监控数据的方式，所以号称比snmpd快和非常节省系统开销。但为了完成任务和系统的拓展性，果然另外支持snmp吧。</p>

<h3>扩展阅读</h3>

<p>请需要OID对照资料的兄弟自行互联网查询《linux常用OID》</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[centos6.4 install cacti0.8]]></title>
    <link href="http://evoupsight.com/blog/2013/12/04/centos6-dot-4-install-cacti0-dot-8/"/>
    <updated>2013-12-04T10:37:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/12/04/centos6-dot-4-install-cacti0-dot-8</id>
    <content type="html"><![CDATA[<h3>简介</h3>

<p>cacti号称一款完全采用rrdtool和snmp实现的监控软件，与同为自由软件的nagios相比，它能够呈现大量直观的监控图表，功能主要体现在了数据的量化上。该软件最初完全采用php写成，采用crontab调用poller.php脚本进行数据的定时收集，如今已经有c语言写成的改良版spine收集器进行数据的收集可供选择。</p>

<!-- more -->


<p>接下来开始安装，一开始还是一样先把可能妨碍安装成功的iptables和selinux关闭掉</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>service iptables stop
</span><span class='line'>chkconfig iptables off
</span><span class='line'>vim /etc/selinux/config
</span></code></pre></td></tr></table></div></figure>


<p>然后SELINUX=enforcing改成SELINUX=disabled
重启机器getenforce 为disable
正式开篇</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>yum -y install mysql mysql-server mysql-devel
</span><span class='line'>yum -y install httpd
</span><span class='line'>yum -y install php php-mysql
</span></code></pre></td></tr></table></div></figure>


<p>启动服务并加入到启动列表</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>service httpd start
</span><span class='line'>service mysqld start
</span><span class='line'>chkconfig httpd on
</span><span class='line'>chkconfig mysqld on
</span></code></pre></td></tr></table></div></figure>


<p>安装需要的库文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>yum -y install zlib
</span><span class='line'>yum -y install freetype
</span><span class='line'>yum -y install libjpeg
</span><span class='line'>yum -y install fontconfig
</span><span class='line'>yum -y install gd
</span><span class='line'>yum -y install libxml2
</span><span class='line'>yum -y install php-gd
</span></code></pre></td></tr></table></div></figure>


<p>安装rrdtool</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>yum -y install rrdtool
</span></code></pre></td></tr></table></div></figure>


<p>安装snmp支持工具</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>yum -y install net-snmp
</span><span class='line'>yum -y install net-snmp-utils
</span></code></pre></td></tr></table></div></figure>


<p>启动snmpd服务</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>service snmpd start
</span><span class='line'>chkconfig snmpd on
</span></code></pre></td></tr></table></div></figure>


<p>安装cacti
下载wget <a href="http://www.cacti.net/downloads/cacti-0.8.7e.tar.gz">http://www.cacti.net/downloads/cacti-0.8.7e.tar.gz</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>tar xzf cacti-0.8.7e.tar.gz
</span><span class='line'>mv cacti-0.8.7e /var/www/html/cacti
</span><span class='line'><span class="nb">cd</span> /var/www/html
</span><span class='line'>vim cacti/include/config.php
</span></code></pre></td></tr></table></div></figure>


<p>编辑为下面的配置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$database_type</span> <span class="o">=</span> <span class="s2">&quot;mysql&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$database_default</span> <span class="o">=</span> <span class="s2">&quot;cacti&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$database_hostname</span> <span class="o">=</span> <span class="s2">&quot;localhost&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$database_username</span> <span class="o">=</span> <span class="s2">&quot;cacti&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$database_password</span> <span class="o">=</span> <span class="s2">&quot;cacti&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$database_port</span> <span class="o">=</span> <span class="s2">&quot;3306&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>添加cacti用户
useradd cacti</p>

<p>添加计划任务
编辑/etc/crontab</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>* * * * * cacti /usr/bin/php /var/www/html/cacti/poller.php &gt;&gt; /dev/null 2&gt;&amp;1
</span></code></pre></td></tr></table></div></figure>


<p>更改属组
将web目录的所属组改为cacti</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#chgrp -R cacti /var/www/html/cacti</span>
</span><span class='line'><span class="c">#chown -R cacti /var/www/html/cacti/rra</span>
</span><span class='line'><span class="c">#chown -R cacti /var/www/html/cacti/log</span>
</span><span class='line'><span class="c">#chown -R cacti /var/www/html/cacti/poller.php</span>
</span></code></pre></td></tr></table></div></figure>


<p>创建cacti数据库</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mysql
</span><span class='line'>mysql&gt; create database cacti;
</span></code></pre></td></tr></table></div></figure>


<p>导入cacti.sql</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mysql -uroot -p cacti &lt; /var/www/html/cacti/cacti.sql
</span><span class='line'>mysql&gt; use cacti
</span><span class='line'>mysql&gt; grant all on cacti.* to cacti@localhost identified by <span class="s1">&#39;cacti&#39;</span>;
</span><span class='line'>mysql&gt; flush privileges;
</span><span class='line'>mysql&gt; <span class="nb">exit</span>
</span></code></pre></td></tr></table></div></figure>


<p>浏览器登录cacti
<a href="http://ip/cacti">http://ip/cacti</a>
new install后一路回车,安装完成。
默认登录密码为admin/admin</p>

<h3>疑难杂症之cacti不出图</h3>

<p>首先检查log文件权限</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> /var/www/html/cacti/log
</span><span class='line'>ll
</span><span class='line'>-rw-r--r-- 1 cacti cacti 438 Dec  3 02:14 cacti.log
</span></code></pre></td></tr></table></div></figure>


<p>校正时间</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#cp -f /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span>
</span><span class='line'><span class="c">#reboot</span>
</span></code></pre></td></tr></table></div></figure>


<p>确保/var/www/html/cacti/rra目录下有可写权限。
重启点击graph菜单观察发现已经出现图表了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[centos6.4下搭建zabbix2.0.6]]></title>
    <link href="http://evoupsight.com/blog/2013/12/03/centos6-dot-4-install-zabbix/"/>
    <updated>2013-12-03T13:37:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/12/03/centos6-dot-4-install-zabbix</id>
    <content type="html"><![CDATA[<p>最近开始研究各款监控系统，和自己的监控系统进行横向比较找差距，就从单位也在用的zabbix开始，先安装后再这里过一遍流程。</p>

<!-- more -->


<p>关闭iptables和selinux</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo service iptables stop
</span><span class='line'>sudo chkconfig iptables off
</span></code></pre></td></tr></table></div></figure>


<p>临时关闭selinux</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>setenfoce 0  <span class="c">##设置为permissive模式</span>
</span><span class='line'>             <span class="c">##setenforce 1设置SELunix为enforcing模式</span>
</span></code></pre></td></tr></table></div></figure>


<p>永久关闭
修改/etc/selinux/config 文件
将SELINUX=enforcing改为SELINUX=disabled
重启机器看到
getenforce返回Disabled说明已经关闭</p>

<p>再次进入centos6.4，先安装LAMP环境。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>yum install -y httpd mysql mysql-server mysql-devel php php-mysql php-common php-mbstring php-gd php-odbc php-xml php-pear
</span></code></pre></td></tr></table></div></figure>


<p>然后下载zabbix</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>wget http://sourceforge.net/projects/zabbix/files/ZABBIX%20Latest%20Stable/2.0.6/zabbix-2.0.6.tar.gz/download
</span></code></pre></td></tr></table></div></figure>


<p>继续安装需要的组件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>yum install -y curl curl-devel net-snmp net-snmp-devel perl-DBI
</span></code></pre></td></tr></table></div></figure>


<p>创建zabbix用户帐号</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo useradd zabbix
</span><span class='line'>sudo usermod -s /sbin/nologin zabbix
</span></code></pre></td></tr></table></div></figure>


<p>启动mysql</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo service mysqld start
</span></code></pre></td></tr></table></div></figure>


<p>登录mysql</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mysql -uroot -p123456
</span><span class='line'>mysql&gt; create database zabbix;
</span><span class='line'>mysql&gt; grant all on zabbix.* to zabbix@localhost identified by <span class="s1">&#39;123456&#39;</span>;
</span><span class='line'>mysql&gt; use zabbix;
</span><span class='line'>mysql&gt; <span class="nb">source</span> /home/evoup/Downloads/zabbix-2.0.6/database/mysql/schema.sql
</span><span class='line'>mysql&gt; <span class="nb">source</span> /home/evoup/Downloads/zabbix-2.0.6/database/mysql/images.sql
</span><span class='line'>mysql&gt; <span class="nb">source</span> /home/evoup/Downloads/zabbix-2.0.6/database/mysql/data.sql
</span><span class='line'>mysql&gt; <span class="nb">exit</span>
</span></code></pre></td></tr></table></div></figure>


<p>安装zabbix</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>./configure --enable-server --enable-agent --with-mysql --with-net-snmp --with-libcurl
</span><span class='line'>Configuration:
</span><span class='line'>
</span><span class='line'>  Detected OS:           linux-gnu
</span><span class='line'>  Install path:          /usr/local
</span><span class='line'>  Compilation arch:      linux
</span><span class='line'>
</span><span class='line'>  Compiler:              gcc
</span><span class='line'>  Compiler flags:        -g -O2  -I/usr/include/mysql  -g -pipe -Wp,-D_FORTIFY_SOURCE<span class="o">=</span>2 -fexceptions -fstack-protector --param<span class="o">=</span>ssp-buffer-size<span class="o">=</span>4 -m64 -D_GNU_SOURCE -D_FILE_OFFSET_BITS<span class="o">=</span>64 -D_LARGEFILE_SOURCE -fno-strict-aliasing -fwrapv -fPIC   -DUNIV_LINUX -DUNIV_LINUX       -I/usr/include/rpm -I/usr/local/include -I/usr/lib64/perl5/CORE -I. -I/usr/include
</span><span class='line'>
</span><span class='line'>  Enable server:         yes
</span><span class='line'>  Server details:
</span><span class='line'>    With database:         MySQL
</span><span class='line'>    WEB Monitoring via:    cURL
</span><span class='line'>    Native Jabber:         no
</span><span class='line'>    SNMP:                  net-snmp
</span><span class='line'>    IPMI:                  no
</span><span class='line'>    SSH:                   no
</span><span class='line'>    ODBC:                  no
</span><span class='line'>    Linker flags:          -rdynamic      -L/usr/lib64/mysql       -L/usr/lib64  -L/usr/lib64
</span><span class='line'>    Libraries:             -lm -lrt  -lresolv    -lmysqlclient       -lcurl  -lnetsnmp -lcrypto  -lnetsnmp -lcrypto
</span><span class='line'>
</span><span class='line'>  Enable proxy:          no
</span><span class='line'>
</span><span class='line'>  Enable agent:          yes
</span><span class='line'>  Agent details:
</span><span class='line'>    Linker flags:          -rdynamic
</span><span class='line'>    Libraries:             -lm -lrt  -lresolv    -lcurl
</span><span class='line'>
</span><span class='line'>  Enable Java gateway:   no
</span><span class='line'>
</span><span class='line'>  LDAP support:          no
</span><span class='line'>  IPv6 support:          no
</span><span class='line'>
</span><span class='line'>***********************************************************
</span><span class='line'>*            Now run <span class="s1">&#39;make install&#39;</span>                       *
</span><span class='line'>*                                                         *
</span><span class='line'>*            Thank you <span class="k">for </span>using Zabbix!                  *
</span><span class='line'>*              &lt;http://www.zabbix.com&gt;                    *
</span><span class='line'>***********************************************************
</span></code></pre></td></tr></table></div></figure>


<p>好了，我们正式安装</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo make install
</span></code></pre></td></tr></table></div></figure>


<p>接下来编辑配置文件
可以不用sudo，直接切换到root做</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> /usr/local/etc
</span><span class='line'>cat zabbix_server.conf
</span><span class='line'><span class="nv">LogFile</span><span class="o">=</span>/var/log/zabbix_server.log
</span><span class='line'><span class="nv">DBHost</span><span class="o">=</span>localhost
</span><span class='line'><span class="nv">DBName</span><span class="o">=</span>zabbix
</span><span class='line'><span class="nv">DBUser</span><span class="o">=</span>zabbix
</span><span class='line'><span class="nv">DBPassword</span><span class="o">=</span>123456
</span><span class='line'>
</span><span class='line'>cat zabbix_agent.conf
</span><span class='line'><span class="nv">LogFile</span><span class="o">=</span>/tmp/zabbix_agentd.log
</span><span class='line'><span class="nv">Server</span><span class="o">=</span>127.0.0.1
</span><span class='line'><span class="nv">UnsafeUserParameters</span><span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure>


<p>创建日志文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>touch /var/log/zabbix_server.log
</span><span class='line'>touch /var/log/zabbix_agent.log
</span><span class='line'>
</span><span class='line'><span class="nb">cd</span> -
</span><span class='line'>cp misc/init.d/tru64/zabbix_server /etc/init.d/
</span><span class='line'>cp misc/init.d/tru64/zabbix_agentd /etc/init.d/
</span></code></pre></td></tr></table></div></figure>


<p>2个文件的文件头改成如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'><span class="c">#chkconfig: 35 95 95</span>
</span><span class='line'><span class="c">#description:zabbix Agent server</span>
</span></code></pre></td></tr></table></div></figure>


<p>添加服务</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>chkconfig --add zabbix_server
</span><span class='line'>chkconfig --add zabbix_agentd
</span></code></pre></td></tr></table></div></figure>


<p>开机自动启动</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>chkconfig zabbix_server on
</span><span class='line'>chkconfig zabbix_agent on
</span></code></pre></td></tr></table></div></figure>


<p>文件执行权限</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>chmod +x zabbix_server
</span><span class='line'>chmod +x zabbix_agentd
</span></code></pre></td></tr></table></div></figure>


<p>启动</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo /etc/init.d/zabbix_server start
</span><span class='line'>sudo /etc/init.d/zabbix_agentd start
</span></code></pre></td></tr></table></div></figure>


<p>安装zabbix web</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>cp -r frontends/php/ /var/www/html/zabbix
</span></code></pre></td></tr></table></div></figure>


<p>访问<a href="http://ip/zabbix">http://ip/zabbix</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>vim /etc/php.ini
</span></code></pre></td></tr></table></div></figure>


<p>指定</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">timezone</span><span class="o">=</span><span class="nx">Asia</span><span class="o">/</span><span class="nx">Shanghai</span>
</span></code></pre></td></tr></table></div></figure>


<p>根据提示修改php配置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>yum install -y php-bcmath
</span></code></pre></td></tr></table></div></figure>


<p>然后再次重启httpd</p>

<p>最后登录前端界面密码为 admin/zabbix</p>

<p>告一段落，接下来学习操作zabbix。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[克隆你的octopress博客到win7]]></title>
    <link href="http://evoupsight.com/blog/2013/12/01/deploy-another-octopress-environment-in-win7/"/>
    <updated>2013-12-01T18:25:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/12/01/deploy-another-octopress-environment-in-win7</id>
    <content type="html"><![CDATA[<p>由于之前octopress博客是在公司的机器上搭的，想到在家里笔记本上的win7也搞一个环境，方便及时写写技术博客。参考网文《【像黑客一样写博客之五】博客克隆》进行摸索，终于实践成功。</p>

<p>但我的方法稍微有点区别,这里采用clone的方式比较快，主要省去一个remote add环节：）只要主要注意几个问题，就可以轻松搞定，顺序看就行。</p>

<!-- more -->


<h2>环境篇：</h2>

<p>这个可以参考大多数搭建octopress博客的文章了，这里一笔带过，之把出现的问题记一笔方便日后查阅。</p>

<h3>问题1（ruby的版本）</h3>

<p>当我装到bundle install的时候，出现了如下问题</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>An error occurred while installing rdiscount (2.0.7.3), and Bundler cannot
</span><span class='line'>continue.</span></code></pre></td></tr></table></div></figure>


<p>查阅README.markdown
<strong>Note</strong>: Octopress requires a minimum Ruby version of <code>1.9.3-p0</code>.
原来需要安装ruby1.9.3。</p>

<h3>问题2 （在装完devkit之前utf-8环境变量不要设置）</h3>

<p>而安装ruby1.9.3,相应需要安装DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe
直接解压到e:\devkit
然后再</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cd</span> <span class="ss">e</span><span class="p">:\</span><span class="n">devkit</span>
</span><span class='line'><span class="n">ruby</span> <span class="n">dk</span><span class="o">.</span><span class="n">rb</span> <span class="n">init</span>
</span><span class='line'><span class="ss">C</span><span class="p">:</span><span class="sr">/Ruby193/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">1</span><span class="o">/</span><span class="n">win32</span><span class="o">/</span><span class="n">registry</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span><span class="mi">173</span><span class="ss">:in</span> <span class="sb">`tr&#39;: invalid byte sequence in UTF-8 (ArgumentError)</span>
</span></code></pre></td></tr></table></div></figure>


<p>原来是环境变量不能先设置为UTF-8，这个是要特别注意的。</p>

<p>然后就可以执行devkit的安装了：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ruby</span> <span class="n">dk</span><span class="o">.</span><span class="n">rb</span> <span class="n">init</span>
</span><span class='line'><span class="n">ruby</span> <span class="n">dk</span><span class="o">.</span><span class="n">rb</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>


<p>接着设置环境变量（win7可以用开始搜索程序和文件，输入编辑系统环境变量）：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">LANG</span><span class="o">=</span>zh_CN.UTF-8
</span><span class='line'><span class="nv">LC_ALL</span><span class="o">=</span>zh_CN.UTF-8
</span></code></pre></td></tr></table></div></figure>


<p>继续安装2个必要的gem</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="n">install</span> <span class="n">rdoc</span> <span class="n">bundler</span>
</span><span class='line'><span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样开发环境就算和之前一致了，这里没有说git的安装，和网上说的没有特别之处，反正装完了需要把git/bin目录加到环境变量PATH中去。</p>

<h2>博客恢复篇</h2>

<p>签出自己的octopress项目,我的放在e:\octopress</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd </span>e:<span class="se">\o</span>ctopress<span class="se">\</span>
</span><span class='line'>git clone git@github.com:you/you.github.com.git
</span><span class='line'>git config --global user.email <span class="s2">&quot;you@example.com&quot;</span>
</span><span class='line'>git config --global user.name <span class="s2">&quot;Your Name&quot;</span>
</span><span class='line'><span class="nb">cd </span>you.github.com
</span><span class='line'>git checkout <span class="nb">source</span>
</span><span class='line'>rake setup_github_pages
</span><span class='line'><span class="nb">cd </span>_deploy
</span><span class='line'>git pull origin master
</span></code></pre></td></tr></table></div></figure>


<p>所有的资料都从远程origin仓库的master分支取回来了！
然后切记切换回source分支，因为master分支的是octopress通过rake部署自动提交进行维护的。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> ..
</span><span class='line'>git checkout <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure>


<p>再次rake generate和rake preview以及rake deploy发现已经可以发布了，最后还需要把相关的提交了，git add . 和git commit -a以及git push origin source</p>

<p>最后注意游走在不同的octopress博客环境处理博客之前，需要同步github仓库的数据</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd </span>e:<span class="se">\o</span>ctopress<span class="se">\y</span>ou.github.com
</span><span class='line'>git pull origin <span class="nb">source </span>
</span><span class='line'><span class="nb">cd </span>_deploy
</span><span class='line'>git pull origin master
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[完美解决phpmyadmin4.1.0访问缓慢]]></title>
    <link href="http://evoupsight.com/blog/2013/11/29/phpmyadmin4-dot-1-0-access-slow/"/>
    <updated>2013-11-29T10:52:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/29/phpmyadmin4-dot-1-0-access-slow</id>
    <content type="html"><![CDATA[<p>安装最新版phpmyadmin4.1.0出现了访问非常缓慢的问题，记录一下</p>

<!-- more -->


<h3>第一步</h3>

<p>文件名./libraries/Util.class.php文件
查找</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">return</span> <span class="nb">strftime</span><span class="p">(</span><span class="nv">$date</span><span class="p">,</span> <span class="nv">$timestamp</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>替换为</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">if</span><span class="p">(</span><span class="nb">extension_loaded</span><span class="p">(</span><span class="s1">&#39;gettext&#39;</span><span class="p">))</span>
</span><span class='line'>  <span class="k">return</span> <span class="nb">strftime</span><span class="p">(</span><span class="nv">$date</span><span class="p">,</span> <span class="nv">$timestamp</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>第二步</h3>

<p>文件名./version_check.php文件
注释掉以下代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$version</span> <span class="o">=</span> <span class="nx">PMA_Util</span><span class="o">::</span><span class="na">getLatestVersion</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="k">echo</span> <span class="nb">json_encode</span><span class="p">(</span>
</span><span class='line'>    <span class="k">array</span><span class="p">(</span>
</span><span class='line'>        <span class="s1">&#39;version&#39;</span> <span class="o">=&gt;</span> <span class="nv">$version</span><span class="o">-&gt;</span><span class="na">version</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;date&#39;</span> <span class="o">=&gt;</span> <span class="nv">$version</span><span class="o">-&gt;</span><span class="na">date</span><span class="p">,</span>
</span><span class='line'>        <span class="p">)</span>
</span><span class='line'>    <span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>第三步</h3>

<p>直接浏览器访问/setup路径，进行设置</p>

<h3>第四步</h3>

<p>应该可以登录了，如果不行清除cookie应该也可以访问了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[部分机器netstat运行结果缓慢的原因]]></title>
    <link href="http://evoupsight.com/blog/2013/11/26/netstat-resolv-dns/"/>
    <updated>2013-11-26T14:17:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/26/netstat-resolv-dns</id>
    <content type="html"><![CDATA[<p>今天看了下客户端运行状况，发现流量图断断续续的。直觉反应到可能是自己按照netstat源码修改的erlang的NIF扩展存在BUG，会奔溃。但查了下似乎没有这个问题。</p>

<p><img src="http://evoupsight.com/images/evoup/netstat1.png" alt="Alt text" /></p>

<!-- more -->


<p>该机器执行netstat本身就很慢，top看了下CPU占用也无异常，该机器基本OK，就是netstat执行起来很慢。
后来发现使用-n参数就快了。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> -n    Show network addresses and ports as numbers.  Normally netstat
</span><span class='line'>       attempts to resolve addresses and ports, and display them symboli‐
</span><span class='line'>       cally.</span></code></pre></td></tr></table></div></figure>


<p>这个参数是说netstat以数字的方式展现网络地址和端口。而不加该参数时netstat会尝试去解析地址和端口，然后采用象征方式呈现。至于究竟啥叫象征方式，其实就是如果你的hostname是localhost,它就会显示localhost，而不是127.0.0.1的方式。
最后判断应该是本机的出站通讯没有加上dns协议的53端口导致的，经过参数修改，netstat调用正常了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何正确地把带参数的C语言main程序改成so]]></title>
    <link href="http://evoupsight.com/blog/2013/11/19/change-c-program-to-so/"/>
    <updated>2013-11-19T18:17:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/19/change-c-program-to-so</id>
    <content type="html"><![CDATA[<p>首先有些标题党吧，不过个人体会修改程序的过程中遇到未知的坑还是比较阴险的，所以整理一下写个博客。</p>

<p>之前尝试把C语言的带参数执行的main程序改成动态链接库，发生了一个问题，主程序调用动态链接库最后获取的结果保持不变，跑了一会儿之后还是和第一次调用的一样。把几乎可能导致问题的static变量全部给改为非静态变量和重置后居然还是无效。最后在痛苦的查询资料之后，终于找到了问题所在。</p>

<p>话说回来，先看怎么把带参main程序改成动态链接库。</p>

<!-- more -->


<p>先看准备被改成动态库的原代码</p>

<figure class='code'><figcaption><span>test.c </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">ch</span><span class="p">;</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">opts</span><span class="o">=</span><span class="s">&quot;a:b::cd&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">while</span> <span class="p">((</span><span class="n">ch</span> <span class="o">=</span> <span class="n">getopt</span><span class="p">(</span><span class="n">argc</span><span class="p">,</span> <span class="n">argv</span><span class="p">,</span> <span class="n">opts</span><span class="p">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="p">(</span><span class="n">ch</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;a&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option a:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;b&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option b:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;c&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option c:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;d&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option d:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="nl">default:</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;other option:%c</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">ch</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='makefile'><span class='line'><span class="err">gcc</span> <span class="err">-Wall</span> <span class="err">test.c</span> <span class="err">-o</span> <span class="err">test</span>
</span></code></pre></td></tr></table></div></figure>


<p>测试：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>./test -a1 -b1 -c -d
</span><span class='line'>option a:<span class="s1">&#39;1&#39;</span>
</span><span class='line'>option b:<span class="s1">&#39;1&#39;</span>
</span><span class='line'>option c:<span class="s1">&#39;(null)&#39;</span>
</span><span class='line'>option d:<span class="s1">&#39;(null)&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>稍微讲下getopt的用法，这个命令是提供命令行执行可执行程序带不同参数的功能实现。以上程序根据所数入的参数，执行相应的操作。
其中opts的a:b::cd，“:”表示必须该选项带有额外的参数，全局变量optarg会指向此额外参数，“::”标识该额外的参数可选(有些Uinx可能不支持“::”）。</p>

<p>接下来把它给改成SO，然后再主调程序中直接指定参数进行调用。</p>

<figure class='code'><figcaption><span>plug.c </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">dlmain</span><span class="p">(</span><span class="kt">int</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="p">);</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">char</span> <span class="o">*</span><span class="n">cmdStr</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="s">&quot;&quot;</span><span class="p">,</span><span class="s">&quot;-a1&quot;</span><span class="p">,</span><span class="s">&quot;-b1&quot;</span><span class="p">,</span><span class="s">&quot;-c&quot;</span><span class="p">,</span><span class="s">&quot;-d</span><span class="se">\0</span><span class="s">&quot;</span><span class="p">};</span>
</span><span class='line'>    <span class="n">dlmain</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="n">cmdStr</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">dlmain</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">ch</span><span class="p">;</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">opts</span><span class="o">=</span><span class="s">&quot;a:b::cd&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">while</span> <span class="p">((</span><span class="n">ch</span> <span class="o">=</span> <span class="n">getopt</span><span class="p">(</span><span class="n">argc</span><span class="p">,</span> <span class="n">argv</span><span class="p">,</span> <span class="n">opts</span><span class="p">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="p">(</span><span class="n">ch</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;a&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option a:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;b&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option b:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;c&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option c:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;d&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option d:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="nl">default:</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;other option:%c</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">ch</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;in dll</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>测试一下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='makefile'><span class='line'><span class="err">gcc</span> <span class="err">-Wall</span> <span class="err">plug.c</span> <span class="err">-o</span> <span class="err">plug</span>
</span><span class='line'><span class="err">./plug</span>
</span><span class='line'><span class="nf">option a</span><span class="o">:</span><span class="m">&#39;1&#39;</span>
</span><span class='line'><span class="nf">option b</span><span class="o">:</span><span class="m">&#39;1&#39;</span>
</span><span class='line'><span class="nf">option c</span><span class="o">:</span><span class="m">&#39;(null)&#39;</span>
</span><span class='line'><span class="nf">option d</span><span class="o">:</span><span class="m">&#39;(null)&#39;</span>
</span><span class='line'><span class="err">in</span> <span class="err">dll</span>
</span></code></pre></td></tr></table></div></figure>


<p>ok，没有问题，直接转换成动态库</p>

<figure class='code'><figcaption><span>plug.c </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">d_plug</span> <span class="p">();</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">dlmain</span><span class="p">(</span><span class="kt">int</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="p">);</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">d_plug</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">char</span> <span class="o">*</span><span class="n">cmdStr</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="s">&quot;&quot;</span><span class="p">,</span><span class="s">&quot;-a1&quot;</span><span class="p">,</span><span class="s">&quot;-b1&quot;</span><span class="p">,</span><span class="s">&quot;-c&quot;</span><span class="p">,</span><span class="s">&quot;-d</span><span class="se">\0</span><span class="s">&quot;</span><span class="p">};</span>
</span><span class='line'>    <span class="n">dlmain</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="n">cmdStr</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">dlmain</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">ch</span><span class="p">;</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">opts</span><span class="o">=</span><span class="s">&quot;a:b::cd&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">while</span> <span class="p">((</span><span class="n">ch</span> <span class="o">=</span> <span class="n">getopt</span><span class="p">(</span><span class="n">argc</span><span class="p">,</span> <span class="n">argv</span><span class="p">,</span> <span class="n">opts</span><span class="p">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="p">(</span><span class="n">ch</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;a&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option a:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;b&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option b:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;c&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option c:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;d&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option d:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="nl">default:</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;other option:%c</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">ch</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;in dll</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>编译动态连接库</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='makefile'><span class='line'><span class="err">gcc</span> <span class="err">-shared</span> <span class="err">-o</span> <span class="err">plug.so</span> <span class="err">plug.c</span> <span class="err">-fpic</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样就得到了plug.so</p>

<p>接下来写主调程序，用它直接调用已经封装好的plug.so动态库。</p>

<figure class='code'><figcaption><span>main.c </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;dlfcn.h&gt;</span>
</span><span class='line'><span class="kt">int</span> <span class="p">(</span><span class="o">*</span><span class="n">d_plug</span><span class="p">)</span> <span class="p">();</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span><span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">void</span> <span class="o">*</span><span class="n">dp</span><span class="p">;</span>
</span><span class='line'>    <span class="n">dp</span><span class="o">=</span><span class="n">dlopen</span><span class="p">(</span><span class="s">&quot;./plug.so&quot;</span><span class="p">,</span><span class="n">RTLD_LAZY</span><span class="p">);</span>
</span><span class='line'>    <span class="n">d_plug</span><span class="o">=</span><span class="n">dlsym</span><span class="p">(</span><span class="n">dp</span><span class="p">,</span><span class="s">&quot;d_plug&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">d_plug</span><span class="p">();</span>
</span><span class='line'>    <span class="n">dlclose</span><span class="p">(</span><span class="n">dp</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>编译执行看结果</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='makefile'><span class='line'><span class="err">gcc</span> <span class="err">main.c</span> <span class="err">-lc</span> <span class="err">-fpic</span> <span class="err">-o</span> <span class="err">main</span>
</span><span class='line'><span class="err">./main</span>
</span><span class='line'><span class="nf">option a</span><span class="o">:</span><span class="m">&#39;1&#39;</span>
</span><span class='line'><span class="nf">option b</span><span class="o">:</span><span class="m">&#39;1&#39;</span>
</span><span class='line'><span class="nf">option c</span><span class="o">:</span><span class="m">&#39;(null)&#39;</span>
</span><span class='line'><span class="nf">option d</span><span class="o">:</span><span class="m">&#39;(null)&#39;</span>
</span><span class='line'><span class="err">in</span> <span class="err">dll</span>
</span></code></pre></td></tr></table></div></figure>


<h3>其他注意事项：</h3>

<p>其实除了optarg，还存在全局变量optind、opterror和optopt。三者的作用</p>

<p>optarg：非常明了，就是指程序的参数，是个字符串指针</p>

<p>optind：是下一次调用getopt的时，从optind存储的位置处重新开始检查选项</p>

<p>opterr：当opterr=0时，getopt不向stderr输出错误信息</p>

<p>optopt: 当命令行选项字符不包括在optstring中或者选项缺少必要的参数时，该选项存储在optopt 中，getopt返回&#8217;？’</p>

<h3>问题解决:</h3>

<p>写erlang的NIF扩展时optind需要重置为0，否则就导致了每次结果不变，因为就我所知erlang目前版本的NIF是没有unload功能的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gvim无法打开交换文件]]></title>
    <link href="http://evoupsight.com/blog/2013/11/12/gvim-unable-to-open-swap-file/"/>
    <updated>2013-11-12T12:21:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/12/gvim-unable-to-open-swap-file</id>
    <content type="html"><![CDATA[<p>最近在windows下使用gvim，直接按照之前在freebsd上的配置搬回来，发现问题多多。每次打开文件都会报错E303，非常碍事。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="p">:</span>help E303
</span><span class='line'>Unable <span class="k">to</span> open <span class="k">swap</span> <span class="k">file</span> <span class="k">for</span> <span class="s2">&quot;{filename}&quot;</span><span class="p">,</span> recovery impossible
</span><span class='line'>
</span><span class='line'>Vim was not able <span class="k">to</span> create <span class="k">a</span> <span class="k">swap</span> <span class="k">file</span>.  You can still edit the <span class="k">file</span><span class="p">,</span> but <span class="k">if</span>
</span><span class='line'>Vim unexpected exits the <span class="k">changes</span> will be lost.  And Vim may consume <span class="k">a</span> lot of
</span><span class='line'>memory when editing <span class="k">a</span> big <span class="k">file</span>.  You may want <span class="k">to</span> change the <span class="s1">&#39;directory&#39;</span> <span class="k">option</span>
</span><span class='line'><span class="k">to</span> avoid this error.  See <span class="p">|</span><span class="k">swap</span><span class="p">-</span><span class="k">file</span><span class="p">|</span>.
</span></code></pre></td></tr></table></div></figure>


<p>说是无法创建交换文件。
其实只要这么解决：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="p">:</span><span class="k">set</span> <span class="nb">directory</span><span class="p">=</span>.<span class="p">,</span>$TEMP
</span></code></pre></td></tr></table></div></figure>


<p>或者指定一个实际存在路径。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[centos下CVS服务器的配置]]></title>
    <link href="http://evoupsight.com/blog/2013/11/08/centos-install-cvs/"/>
    <updated>2013-11-08T13:20:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/08/centos-install-cvs</id>
    <content type="html"><![CDATA[<p>由于需要回顾以前在自己的cvs上建设的一些项目,把其中有用的项目直接放到github上方便调用，现在需要重拾cvs这个历史悠久的版本管理工具了。</p>

<!-- more -->


<p>在centos6上建设cvs服务器是比较方便的。大体分为几个步骤，xinetd->cvs->配置帐号->配置xinetd下pcvsserver文件->启动cvs服务端</p>

<h4>1.安装xinetd</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rpm -q xinetd
</span></code></pre></td></tr></table></div></figure>


<p>没有安装的话</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>yum install xinetd
</span></code></pre></td></tr></table></div></figure>


<h4>2.安装cvs</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rpm -q cvs
</span></code></pre></td></tr></table></div></figure>


<p>我的系统显示
cvs-1.11.23-15.el6.x86_64
如果没有安装的话可以</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>yum install cvs
</span></code></pre></td></tr></table></div></figure>


<h4>3.配置帐号</h4>

<p>切换到root，执行：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>groupadd cvs
</span><span class='line'>useradd -g cvs cvsroot
</span><span class='line'>passwd cvsroot
</span></code></pre></td></tr></table></div></figure>


<p>这样帐号就配置好了。</p>

<h4>4.修改cvs的配置文件/etc/xinetd.d/pcvsserver</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># default: off</span>
</span><span class='line'><span class="c"># description: The CVS service can record the history of your source \</span>
</span><span class='line'><span class="c">#              files. CVS stores all the versions of a file in a single \</span>
</span><span class='line'><span class="c">#              file in a clever way that only stores the differences \</span>
</span><span class='line'><span class="c">#              between versions.</span>
</span><span class='line'>service cvspserver
</span><span class='line'><span class="o">{</span>
</span><span class='line'>        <span class="nv">disable</span>                 <span class="o">=</span> no
</span><span class='line'>        <span class="nv">port</span>                    <span class="o">=</span> 2401
</span><span class='line'>        <span class="nv">socket_type</span>             <span class="o">=</span> stream
</span><span class='line'>        <span class="nv">protocol</span>                <span class="o">=</span> tcp
</span><span class='line'>        <span class="nb">wait</span>                    <span class="o">=</span> no
</span><span class='line'>        <span class="nv">user</span>                    <span class="o">=</span> root
</span><span class='line'>        <span class="nv">passenv</span>                 <span class="o">=</span> PATH
</span><span class='line'>        <span class="nv">server</span>                  <span class="o">=</span> /usr/bin/cvs
</span><span class='line'>        <span class="nv">env</span>                     <span class="o">=</span> <span class="nv">HOME</span><span class="o">=</span>/home/cvsroot
</span><span class='line'>        <span class="nv">server_args</span>             <span class="o">=</span> -f --allow-root<span class="o">=</span>/home/cvsroot pserver
</span><span class='line'><span class="c">#       bind                    = 127.0.0.1</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中env为cvs的环境变量地址，server_args指定你项目的源代码的保存路径和认证方式，这里pserver为基于密码的认证方式。</p>

<h4>5.初始化和启动</h4>

<p>初始化项目仓库的命令为</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cvs -d /home/cvsroot init
</span></code></pre></td></tr></table></div></figure>


<p>就是在刚才配置的env = HOME=/home/cvsroot目录长噢乖创建代码仓库</p>

<p>接下来重启xinetd</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/etc/rc.d/init.d/xinetd restart
</span></code></pre></td></tr></table></div></figure>


<p>测试cvs是否存在
lsof -p 2401
或者
netstat -l | grep csv
不能使用ps aux | grep cvs，因为这是在xinetd下！</p>

<p>安装就完成了。</p>

<p>接下来还要提一下客户端tortoise cvs使用的问题，需要把cvs.exe的路径加到环境变量PATH中方可使用或者把cvsnt这款软件的cvs.exe拷贝到tortoise cvs安装目录中，否则会报句柄错误。</p>

<h4>参考链接：</h4>

<p><a href="http://blog.csdn.net/lidongtang/article/details/8165574">http://blog.csdn.net/lidongtang/article/details/8165574</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rebar生成发布包后找不到noodtool]]></title>
    <link href="http://evoupsight.com/blog/2013/11/07/erlang-rebar-notool-not-found/"/>
    <updated>2013-11-07T15:08:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/07/erlang-rebar-notool-not-found</id>
    <content type="html"><![CDATA[<p>今天用rebar编译出目标文件准备直接部署到目标服务器上，结果报告</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">[</span><span class="n">evoup</span><span class="p">@</span><span class="n">host63i386</span> <span class="n">erlang</span><span class="p">]</span><span class="o">&gt;</span><span class="n">sudo</span> <span class="n">rel</span><span class="o">/</span><span class="n">madmonitor2</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">madmonitor2</span> <span class="n">start</span>
</span><span class='line'><span class="n">current</span> <span class="nb">node</span><span class="p">:</span> <span class="n">madmonitor2</span><span class="p">@</span><span class="mi">192</span><span class="p">.</span><span class="mi">168</span><span class="p">.</span><span class="mi">216</span><span class="p">.</span><span class="mi">165</span>
</span><span class='line'><span class="n">release</span> <span class="n">vm</span><span class="p">.</span><span class="n">args</span> <span class="n">file</span> <span class="n">empty</span><span class="p">,</span><span class="n">recopy</span>
</span><span class='line'><span class="nn">escript</span><span class="p">:</span> <span class="nv">Failed</span> <span class="n">to</span> <span class="n">open</span> <span class="nn">file</span><span class="p">:</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">evoup</span><span class="o">/</span><span class="n">project</span><span class="o">/</span><span class="n">madmonitor2</span><span class="o">/</span><span class="n">erlang</span><span class="o">/</span><span class="n">rel</span><span class="o">/</span><span class="n">madmonitor2</span><span class="o">/</span><span class="n">erts</span><span class="o">-</span>
</span><span class='line'>
</span><span class='line'><span class="mi">5</span><span class="p">.</span><span class="mi">9</span><span class="p">.</span><span class="mi">3</span><span class="p">.</span><span class="mi">1</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">nodetool</span>
</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<p>原来是少一个nodetool文件，进到目录一看发现有2个erts
一个是5.9.1，一个是5.9.3.1，分别代表R15B01和R15B03，想起之前系统装过2个版本的erlang，R15B03的没有删除干净就装了R15B01,看来是rebar自作主张读取了2个erlang运行时库。
删除之前的剩余文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="n">sudo</span> <span class="n">rm</span> <span class="o">-</span><span class="n">rf</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">erlang</span><span class="o">/</span><span class="n">erts</span><span class="o">-</span><span class="mi">5</span><span class="p">.</span><span class="mi">9</span><span class="p">.</span><span class="mi">3</span><span class="p">.</span><span class="mi">1</span><span class="o">/</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">rm</span> <span class="o">-</span><span class="n">rf</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">erlang</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">erts</span><span class="o">-</span><span class="mi">5</span><span class="p">.</span><span class="mi">9</span><span class="p">.</span><span class="mi">3</span><span class="p">.</span><span class="mi">1</span><span class="o">/</span>
</span></code></pre></td></tr></table></div></figure>


<p>仔细一看还有其他版本的erlang，rebar还没有这么傻:)
都给删除了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="n">sudo</span> <span class="n">rm</span> <span class="o">-</span><span class="n">rf</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">erlang</span><span class="o">/</span><span class="n">erts</span><span class="o">-</span><span class="mi">5</span><span class="p">.</span><span class="mi">5</span><span class="p">.</span><span class="mi">1</span><span class="o">/</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">rm</span> <span class="o">-</span><span class="n">rf</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">erlang</span><span class="o">/</span><span class="n">erts</span><span class="o">-</span><span class="mi">5</span><span class="p">.</span><span class="mi">6</span><span class="p">.</span><span class="mi">5</span><span class="o">/</span>
</span></code></pre></td></tr></table></div></figure>


<p>再次编译，问题解决,收工:)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用webtool查看erl_crash.dump]]></title>
    <link href="http://evoupsight.com/blog/2013/11/05/erl-crash-webtool-usage/"/>
    <updated>2013-11-05T14:17:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/05/erl-crash-webtool-usage</id>
    <content type="html"><![CDATA[<p>运行erlang程序崩溃，按照许多人推荐的webtool方式找问题，这里记录一下启动的过程。</p>

<!-- more -->


<p>首先开一个erl shell，然后按如下参数启动webtool
webtool:start(standard_path,[{port,8888},{bind_address,{192,168,216,145}},{server_name,&ldquo;monitorserver2&rdquo;}] ).</p>

<p>然后访问浏览器可以调试到erl.crash的具体信息。</p>

<p><img src="http://evoupsight.com/images/evoup/webtool_watch__erlcrash.png" alt="Alt text" /></p>

<p>最后发现虽然没有找到什么有价值的信息，总算不是竹篮打水，最后通过记录日志的方式解决了问题。在这里先记录一下了……</p>

<p>参考链接：</p>

<p><a href="http://www.erlang.org/doc/man/webtool.html#start-2">http://www.erlang.org/doc/man/webtool.html#start-2</a>
<a href="http://hi.baidu.com/ah__fu/item/86c65e8b88ecf453e73d1962">http://hi.baidu.com/ah__fu/item/86c65e8b88ecf453e73d1962</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[freebsd下安装vmware-tool]]></title>
    <link href="http://evoupsight.com/blog/2013/11/05/freebsd-install-vmware-tool/"/>
    <updated>2013-11-05T13:22:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/05/freebsd-install-vmware-tool</id>
    <content type="html"><![CDATA[<p>公司自建的vmware虚拟机，每当中餐回来后，由于系统处理待机状态莫名其妙地会比当前时间慢一段时间，导致server端保存数据的时间戳滞后。怎么解决呢？</p>

<!-- more -->


<h3>消极的方法</h3>

<p>首先可以尝试加上ntpdate自动来同步，不过这个方法比较死。</p>

<p>在crontab内加入</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>*/15  *   *   *   *   *   root   ntpdate 210.72.145.44
</span></code></pre></td></tr></table></div></figure>


<p>以及在/etc/rc.conf中</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">ntpdate_enable</span><span class="o">=</span><span class="s2">&quot;YES&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>积极的方法</h3>

<p>通过安装vmware-tool来一劳永逸的解决。那么我们如何在freebsd中安装vmware-tool呢？</br>
首先需要点击vmware的菜单VM &ndash;> Install VMware Tools</br>
vmware-tool是一个perl脚本，先要安装好perl。然后要准备好compat6x-amd64安装包才能继续。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /usr/port/dist
</span><span class='line'>sudo fetch ftp://ftp5.tw.freebsd.org/BSD/FreeBSD/ports/amd64/packages-8-current/Latest/compat6x-amd64.tbz
</span><span class='line'>sudo pkg_add compat6x-amd64.tbz
</span><span class='line'>*******************************************************************************
</span><span class='line'>*                                                                             *
</span><span class='line'>* Do not forget to add COMPAT_FREEBSD6 into                                   *
</span><span class='line'>* your kernel configuration <span class="o">(</span>enabled by default<span class="o">)</span>.                             *
</span><span class='line'>*                                                                             *
</span><span class='line'>* To configure and recompile your kernel see:                                 *
</span><span class='line'>* http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/kernelconfig.html *
</span><span class='line'>*                                                                             *
</span><span class='line'>*******************************************************************************
</span></code></pre></td></tr></table></div></figure>


<p>安装依赖库后，切换到root后，执行如下指令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mount /cdrom
</span><span class='line'><span class="nb">cd</span> /tmp
</span><span class='line'>tar xzpf /cdrom/vmware-freebsd-tools.tar.gz
</span><span class='line'><span class="nb">cd </span>vmware-tools-distrib
</span><span class='line'>./vmware-install.pl
</span></code></pre></td></tr></table></div></figure>


<p>这样vmware-tool就搞定了。
最后为了保险起先，关闭系统后，编辑.vmx文件
加上下面的时间同步的代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>tools.syncTime <span class="o">=</span> <span class="s2">&quot;TRUE&quot;</span>
</span><span class='line'>time.synchronize.continue <span class="o">=</span> <span class="s2">&quot;TRUE&quot;</span>
</span><span class='line'>time.synchronize.restore <span class="o">=</span> <span class="s2">&quot;TRUE&quot;</span>
</span><span class='line'>time.synchronize.resume.disk <span class="o">=</span> <span class="s2">&quot;TRUE&quot;</span>
</span><span class='line'>time.synchronize.shrink <span class="o">=</span> <span class="s2">&quot;TRUE&quot;</span>
</span><span class='line'>time.synchronize.tools.startup <span class="o">=</span> <span class="s2">&quot;TRUE&quot;</span>
</span><span class='line'>time.synchronize.tools.enable <span class="o">=</span> <span class="s2">&quot;TRUE&quot;</span>
</span><span class='line'>time.synchronize.resume.host <span class="o">=</span> <span class="s2">&quot;TRUE&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>参考链接</p>

<p><a href="http://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;cmd=displayKC&amp;externalId=1189">http://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;cmd=displayKC&amp;externalId=1189</a>
<a href="http://www.neko6.tk/archives/1067">http://www.neko6.tk/archives/1067</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HBASE完全分布式搭建(VMware版)]]></title>
    <link href="http://evoupsight.com/blog/2013/11/04/hbase-full-distributed-case/"/>
    <updated>2013-11-04T16:28:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/04/hbase-full-distributed-case</id>
    <content type="html"><![CDATA[<p>接上一篇<a href="http://evoupsight.com/blog/2013/11/04/hadoop-full-distributed-case/">《HADOOP完全分布式搭建(VMware版)》</a></p>

<p>参考 <a href="http://www.cnblogs.com/flyoung2008/archive/2011/12/02/2272761.html">http://www.cnblogs.com/flyoung2008/archive/2011/12/02/2272761.html</a></p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /u01/app
</span><span class='line'>tar xzf hbase-0.90.6.tgz
</span><span class='line'>ln -s hbase-0.90.6 hbase
</span><span class='line'><span class="nb">cd </span>hbase/conf
</span></code></pre></td></tr></table></div></figure>


<p>编辑hbase-env.sh</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">HBASE_OPTS</span><span class="o">=</span><span class="s2">&quot;-ea -XX:+UseConcMarkSweepGC -XX:+CMSIncrementalMode&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">JAVA_HOME</span><span class="o">=</span>/usr/java/jdk1.6.0_29
</span><span class='line'><span class="nb">export </span><span class="nv">HBASE_MANAGES_ZK</span><span class="o">=</span><span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意HADOOP_HOME和HBASE_HOME已经在~/.profile中指定，不需要再设置了。</p>

<p>编辑hbase-site.xml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="cp">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span>
</span><span class='line'><span class="c">&lt;!--</span>
</span><span class='line'><span class="c">/**</span>
</span><span class='line'><span class="c"> * Copyright 2010 The Apache Software Foundation</span>
</span><span class='line'><span class="c"> *</span>
</span><span class='line'><span class="c"> * Licensed to the Apache Software Foundation (ASF) under one</span>
</span><span class='line'><span class="c"> * or more contributor license agreements.  See the NOTICE file</span>
</span><span class='line'><span class="c"> * distributed with this work for additional information</span>
</span><span class='line'><span class="c"> * regarding copyright ownership.  The ASF licenses this file</span>
</span><span class='line'><span class="c"> * to you under the Apache License, Version 2.0 (the</span>
</span><span class='line'><span class="c"> * &quot;License&quot;); you may not use this file except in compliance</span>
</span><span class='line'><span class="c"> * with the License.  You may obtain a copy of the License at</span>
</span><span class='line'><span class="c"> *</span>
</span><span class='line'><span class="c"> *     http://www.apache.org/licenses/LICENSE-2.0</span>
</span><span class='line'><span class="c"> *</span>
</span><span class='line'><span class="c"> * Unless required by applicable law or agreed to in writing, software</span>
</span><span class='line'><span class="c"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span>
</span><span class='line'><span class="c"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
</span><span class='line'><span class="c"> * See the License for the specific language governing permissions and</span>
</span><span class='line'><span class="c"> * limitations under the License.</span>
</span><span class='line'><span class="c"> */</span>
</span><span class='line'><span class="c">--&gt;</span>
</span><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>hbase.rootdir<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>hdfs://mdn2.net:9024/hbase<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>hbase.cluster.distributed<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>true<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>hbase.master<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>mdn2.net:60000<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>hbase.zookeeper.quorum<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>mdn2.net,mdn2_datanode1.net,mdn2_datanode2.net<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意点：
 1.其中首先需要注意hdfs://mdn2.net:9024/hbase这里，必须与你的Hadoop集群的core-site.xml文件配置保持完全一致才行，如果你Hadoop的hdfs使用了其它端口，请在这里也修改。再者就是Hbase该项并不识别机器IP，只能使用机器hostname才可行，即若使用IP是会抛出java错误。
 2.hbase.zookeeper.quorum 的个数必须是奇数。</p>

<p>修改regionservers文件（同hadoop的slaves文件）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mdn2_datanode1.net
</span><span class='line'>mdn2_datanode2.net
</span></code></pre></td></tr></table></div></figure>


<p>然后分发到各点，就可以启动了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bin/start hbase
</span><span class='line'>bin/hbase shell
</span></code></pre></td></tr></table></div></figure>


<p>报错
ERROR: org.apache.hadoop.hbase.ZooKeeperConnectionException: HBase is able to connect to ZooKeeper but the connection closes immediately. This could be a sign that the server has too many connections (30 is the default). Consider inspecting your ZK server logs for that error and then make sure you are reusing HBaseConfiguration as often as you can. See HTable&rsquo;s javadoc for more information.
看来不要使用hbase托管的zookeeper转而再装一个试试。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wget http://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.4.4/zookeeper-3.4.4.tar.gz
</span></code></pre></td></tr></table></div></figure>


<p>编辑~/.profile,加入关于zk环境变量的设置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">ZOOKEEPER_HOME</span><span class="o">=</span><span class="s2">&quot;/u01/app/zookeeper/&quot;</span>
</span><span class='line'><span class="nv">PATH</span><span class="o">=</span><span class="nv">$ZOOKEEPER_HOME</span>/bin:<span class="nv">$PATH</span>
</span><span class='line'><span class="nb">export </span>PATH
</span><span class='line'><span class="nb">cd</span> /u01/app/zookeeper/conf
</span><span class='line'>cp zoo_sample.cfg zoo.cfg
</span><span class='line'><span class="nb">cd</span> ../bin
</span><span class='line'>./zkServer.sh start
</span></code></pre></td></tr></table></div></figure>


<p>最后重启整个hadoop/hbase搞定，jps看下跑的进程。收工。</p>

<p><img src="http://evoupsight.com/images/evoup/hbase_vmware.png" alt="Alt text" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HADOOP完全分布式搭建(VMware版)]]></title>
    <link href="http://evoupsight.com/blog/2013/11/04/hadoop-full-distributed-case/"/>
    <updated>2013-11-04T15:28:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/04/hadoop-full-distributed-case</id>
    <content type="html"><![CDATA[<p>vmware版本8.0.4 build-744019
首先准备3台虚拟机</p>

<p><img src="http://evoupsight.com/images/evoup/hadoop_vmware.png" alt="Alt text" /></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> ,''''''''''''':'''''''''''''''''':'''''''''''''''''''''''''''''''''''|
</span><span class='line'> |    usage    |        IP        |             Hostname              |
</span><span class='line'> |             |                  |                                   |
</span><span class='line'> |'''''''''''''|''''''''''''''''''|'''''''''''''''''''''''''''''''''''|
</span><span class='line'> | namenode    | 192.168.174.132  |           mdn2.net                |
</span><span class='line'> |             |                  |                                   |
</span><span class='line'> |'''''''''''''|''''''''''''''''''|'''''''''''''''''''''''''''''''''''|
</span><span class='line'> | datanode01  | 192.168.174.135  |        mdn2_datanode1.net         |
</span><span class='line'> |             |                  |                                   |
</span><span class='line'> |'''''''''''''|''''''''''''''''''|'''''''''''''''''''''''''''''''''''|
</span><span class='line'> | datanode02  | 192.168.174.136  |        mdn2_datanode2.net         |
</span><span class='line'> |             |                  |                                   |
</span><span class='line'>  '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</span></code></pre></td></tr></table></div></figure>


<p> <!-- more --></p>

<p>Ps:
为节省资源关闭点不必要的服务</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="k">for </span>SERVICES in abrtd acpid auditd avahi-daemon cpuspeed haldaemon mdmonitor messagebus udev-post;
</span><span class='line'><span class="k">do</span> /sbin/chkconfig <span class="k">${</span><span class="nv">SERVICES</span><span class="k">}</span> off;
</span><span class='line'><span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>


<h3>准备工作</h3>

<p>先安装JDK1.6
linux:先把已经安装的openjdk卸载,安装sun jdk1.6 （j2se就够了）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#rpm -qa | grep jdk</span>
</span><span class='line'>java-1.6.0-openjdk-1.6.0.0-1.28.1.10.9.el5_8
</span><span class='line'><span class="c">#rpm -e java-1.6.0-openjdk-1.6.0.0-1.28.1.10.9.el5_8</span>
</span><span class='line'><span class="c">#sudo chmod +x jdk-6u35-linux-x64-rpm.bin</span>
</span><span class='line'><span class="c">#./jdk-6u35-linux-x64-rpm.bin</span>
</span></code></pre></td></tr></table></div></figure>


<p>freebsd:直接在/usr/port/java/diablo-jdk16，不要装jdk16，打好几个补丁还编译通不过，浪费时间！）</p>

<p>hadoop所有操作都是用hadoop帐号，下面添加</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>linux:# groupadd hadoop
</span><span class='line'>freebsd:# pw groupadd hadoop
</span><span class='line'>linux:# useradd -r -g hadoop -d /home/hadoop -m -s /bin/bash hadoop
</span><span class='line'>freebsd:# pw adduser hadoop -g hadoop -d /home/hadoop -m -s /bin/bash
</span><span class='line'>
</span><span class='line'>all:# mkdir -p /u01/app
</span><span class='line'>all:# chgrp -R hadoop /u01/app
</span><span class='line'>all:# chown -R hadoop /u01/app
</span></code></pre></td></tr></table></div></figure>


<p>环境变量</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>all:<span class="nv">$ </span>vi ~/.profile
</span><span class='line'>all:export <span class="nv">HADOOP_HOME</span><span class="o">=</span>/u01/app/hadoop
</span><span class='line'>all:export <span class="nv">HBASE_HOME</span><span class="o">=</span>/u01/app/hbase
</span></code></pre></td></tr></table></div></figure>


<p>进行免密码的ssh登录设置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ssh-keygen -t dsa -P <span class="s1">&#39;&#39;</span> -f ~/.ssh/id_dsa
</span><span class='line'>cat ~/.ssh/id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys
</span><span class='line'>chmod 600 ~/.ssh/authorized_keys
</span></code></pre></td></tr></table></div></figure>


<p>到此准备工作完成</p>

<p>安装Hadoop</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>all:<span class="nv">$ </span><span class="nb">cd</span> /u01/app
</span><span class='line'>all:<span class="nv">$ </span>tar zxf hadoop-0.20.203.0rc1.tar.gz
</span><span class='line'>all:<span class="nv">$ </span>ln -s hadoop-0.20.203.0 hadoop
</span></code></pre></td></tr></table></div></figure>


<h3>正式开始</h3>

<p>编辑所有机器的/etc/hosts文件（host的centos下为/etc/sysconfig/network，bsd的要设置/etc/rc.conf）
(PS:也可以选择现在namenode上编辑好了，分发到其他机器上去)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Do not remove the following line, or various programs</span>
</span><span class='line'><span class="c"># that require network functionality will fail.</span>
</span><span class='line'>
</span><span class='line'>127.0.0.1       localhost.localdomain localhost
</span><span class='line'>::1             localhost6.localdomain6 localhost6
</span><span class='line'>192.168.174.132 mdn2.net
</span><span class='line'>192.168.174.135 mdn2_datanode1.net
</span><span class='line'>192.168.174.136 mdn2_datanode2.net
</span></code></pre></td></tr></table></div></figure>


<p>假定已经安装好了JAVA，编辑hadoop帐号的profile文件加入如下代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">HADOOP_HOME</span><span class="o">=</span>/u01/app/hadoop
</span><span class='line'><span class="nb">export </span><span class="nv">HBASE_HOME</span><span class="o">=</span>/u01/app/hbase
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">&quot;/usr/java/jdk1.6.0_37/bin/:$PATH&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">JAVA_HOME</span><span class="o">=</span><span class="s2">&quot;/usr/java/jdk1.6.0_37/bin/&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>下载hadoop解压之后，在hadoop-env.sh指定java的目录</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">JAVA_HOME</span><span class="o">=</span>/usr/java/jdk1.6.0_37/
</span></code></pre></td></tr></table></div></figure>


<p>再编辑core-site.xml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="cp">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- Put site-specific property overrides in this file. --&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>fs.default.name<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>hdfs://mdn2.net:9024<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>hadoop.tmp.dir<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>/u01/app/hadoopTmp<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意：hadoop.tmp.dir是hadoop文件系统依赖的基础配置，很多路径都依赖它。它默认的位置是在/tmp/{$user}下面，在local和hdfs都会建有相同的目录，但是在/tmp路径下的存储是不安全的，因为linux一次重启，文件就可能被删除。导致namenode启动不起来。</p>

<p>再编辑hdfs-site.xml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="cp">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- Put site-specific property overrides in this file. --&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>dfs.replication<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>1<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>dfs.data.dir<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>/u01/app/hdfsdata<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意：dfs.data.dir为hdfs实际存放数据的路径，这个配置只对本地有效，中间可以用,连接多个目录</p>

<p>master里</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mdn2.net
</span></code></pre></td></tr></table></div></figure>


<p>slaves里</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mdn2_datanode1.net
</span><span class='line'>mdn2_datanode2.net
</span></code></pre></td></tr></table></div></figure>


<p>注意点：
修改hadoop-0.20.203.0/bin下的hadoop.
vi  hadoop
查找 –jvm . vi 下的命令模式： :/-jvm
将-jvm server改成 –server .
因为JDK1.6已经废除了一个参数-jvm,如果不修改的话，无法启动数据节点。</p>

<p>到namenode上格式化hdfs</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/bin/hadoop namenode -format
</span></code></pre></td></tr></table></div></figure>


<p>注意9024为hdfs通讯端口，完全分布式环境下，可以直接将防火墙关闭</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo /etc/init.d/iptables stop
</span><span class='line'>sudo /sbin/chkconfig iptables off
</span></code></pre></td></tr></table></div></figure>


<p>启动：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bin/start-all.sh
</span></code></pre></td></tr></table></div></figure>


<p>或者只启动dfs和mapreduce</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bin/start-dfs.sh
</span><span class='line'>bin/start-mapred.sh
</span></code></pre></td></tr></table></div></figure>


<p>最后发一个jps的进程图</p>

<p><img src="http://evoupsight.com/images/evoup/hadoop_vmware01.png" alt="Alt text" /></p>
]]></content>
  </entry>
  
</feed>
