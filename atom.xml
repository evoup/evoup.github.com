<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Evoup`s Blog]]></title>
  <link href="http://evoupsight.com/atom.xml" rel="self"/>
  <link href="http://evoupsight.com/"/>
  <updated>2014-07-10T17:45:37+08:00</updated>
  <id>http://evoupsight.com/</id>
  <author>
    <name><![CDATA[Evoup`s Blog]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[rrdtool的socket通讯接口rrdsrv]]></title>
    <link href="http://evoupsight.com/blog/2014/07/10/rrdsrv-usage/"/>
    <updated>2014-07-10T17:28:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/07/10/rrdsrv-usage</id>
    <content type="html"><![CDATA[<p>原来以为rrdtool只是个本地数据库，这次写java程序看了几个rrdtool的java实现的源码,在其中一款中发现原来rrdtool居然还支持inetd超级服务器的用法，也就是rrdsrv。以下以freebsd下rrdsrv的配置为例，介绍使用方法：</p>

<!--more-->


<p>假设rrdtool的安装路径在/usr/local/bin/rrdtool，然后存放rrd数据库的路径为/services/rrds/</p>

<p>首先编辑/etc/inetd.conf，加入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rrdsrv  stream  tcp nowait  root    /usr/local/bin/rrdtool  rrdtool - /services/rrds/</span></code></pre></td></tr></table></div></figure>


<p>然后再编辑/etc/services，加入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rrdsrv 13900/tcp</span></code></pre></td></tr></table></div></figure>


<p>在/etc/rc.conf中</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>inetd_enable="YES"</span></code></pre></td></tr></table></div></figure>


<p>然后</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo /etc/rc.d/inetd start
</span></code></pre></td></tr></table></div></figure>


<p>这样13900端口就支持使用socket方式的rrdtool命令操作了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>yin@yin-arch rrds<span class="o">]</span>&gt;telnet 127.0.0.1 13900
</span><span class='line'>Trying 127.0.0.1...
</span><span class='line'>Connected to localhost.
</span><span class='line'>Escape character is <span class="s1">&#39;^]&#39;</span>.
</span><span class='line'>
</span><span class='line'>info load.rrd
</span><span class='line'><span class="nv">filename</span> <span class="o">=</span> <span class="s2">&quot;load.rrd&quot;</span>
</span><span class='line'><span class="nv">rrd_version</span> <span class="o">=</span> <span class="s2">&quot;0003&quot;</span>
</span><span class='line'><span class="nv">step</span> <span class="o">=</span> 15
</span><span class='line'><span class="nv">last_update</span> <span class="o">=</span> 1404984273
</span><span class='line'><span class="nv">header_size</span> <span class="o">=</span> 1000
</span><span class='line'>ds<span class="o">[</span>load<span class="o">]</span>.index <span class="o">=</span> 0
</span><span class='line'>ds<span class="o">[</span>load<span class="o">]</span>.type <span class="o">=</span> <span class="s2">&quot;GAUGE&quot;</span>
</span><span class='line'>ds<span class="o">[</span>load<span class="o">]</span>.minimal_heartbeat <span class="o">=</span> 120
</span><span class='line'>ds<span class="o">[</span>load<span class="o">]</span>.min <span class="o">=</span> NaN
</span><span class='line'>ds<span class="o">[</span>load<span class="o">]</span>.max <span class="o">=</span> NaN
</span><span class='line'>ds<span class="o">[</span>load<span class="o">]</span>.last_ds <span class="o">=</span> <span class="s2">&quot;5.73242000000000029303e-01&quot;</span>
</span><span class='line'>ds<span class="o">[</span>load<span class="o">]</span>.value <span class="o">=</span> 2.0151107237e+00
</span><span class='line'>ds<span class="o">[</span>load<span class="o">]</span>.unknown_sec <span class="o">=</span> 0
</span><span class='line'>rra<span class="o">[</span>0<span class="o">]</span>.cf <span class="o">=</span> <span class="s2">&quot;AVERAGE&quot;</span>
</span><span class='line'>rra<span class="o">[</span>0<span class="o">]</span>.rows <span class="o">=</span> 5856
</span><span class='line'>rra<span class="o">[</span>0<span class="o">]</span>.cur_row <span class="o">=</span> 5072
</span><span class='line'>rra<span class="o">[</span>0<span class="o">]</span>.pdp_per_row <span class="o">=</span> 1
</span><span class='line'>rra<span class="o">[</span>0<span class="o">]</span>.xff <span class="o">=</span> 5.0000000000e-01
</span><span class='line'>rra<span class="o">[</span>0<span class="o">]</span>.cdp_prep<span class="o">[</span>0<span class="o">]</span>.value <span class="o">=</span> NaN
</span><span class='line'>rra<span class="o">[</span>0<span class="o">]</span>.cdp_prep<span class="o">[</span>0<span class="o">]</span>.unknown_datapoints <span class="o">=</span> 0
</span><span class='line'>rra<span class="o">[</span>1<span class="o">]</span>.cf <span class="o">=</span> <span class="s2">&quot;AVERAGE&quot;</span>
</span><span class='line'>rra<span class="o">[</span>1<span class="o">]</span>.rows <span class="o">=</span> 20160
</span><span class='line'>rra<span class="o">[</span>1<span class="o">]</span>.cur_row <span class="o">=</span> 9119
</span><span class='line'>rra<span class="o">[</span>1<span class="o">]</span>.pdp_per_row <span class="o">=</span> 4
</span><span class='line'>rra<span class="o">[</span>1<span class="o">]</span>.xff <span class="o">=</span> 5.0000000000e-01
</span><span class='line'>rra<span class="o">[</span>1<span class="o">]</span>.cdp_prep<span class="o">[</span>0<span class="o">]</span>.value <span class="o">=</span> 1.1429347927e+00
</span><span class='line'>rra<span class="o">[</span>1<span class="o">]</span>.cdp_prep<span class="o">[</span>0<span class="o">]</span>.unknown_datapoints <span class="o">=</span> 0
</span><span class='line'>rra<span class="o">[</span>2<span class="o">]</span>.cf <span class="o">=</span> <span class="s2">&quot;AVERAGE&quot;</span>
</span><span class='line'>rra<span class="o">[</span>2<span class="o">]</span>.rows <span class="o">=</span> 52704
</span><span class='line'>rra<span class="o">[</span>2<span class="o">]</span>.cur_row <span class="o">=</span> 46249
</span><span class='line'>rra<span class="o">[</span>2<span class="o">]</span>.pdp_per_row <span class="o">=</span> 40
</span><span class='line'>rra<span class="o">[</span>2<span class="o">]</span>.xff <span class="o">=</span> 5.0000000000e-01
</span><span class='line'>rra<span class="o">[</span>2<span class="o">]</span>.cdp_prep<span class="o">[</span>0<span class="o">]</span>.value <span class="o">=</span> 9.7464362627e+00
</span><span class='line'>rra<span class="o">[</span>2<span class="o">]</span>.cdp_prep<span class="o">[</span>0<span class="o">]</span>.unknown_datapoints <span class="o">=</span> 0
</span><span class='line'>OK u:0.00 s:0.01 r:41.67
</span></code></pre></td></tr></table></div></figure>


<p>值得一提的是，除了支持rrdtool的info、create、update等内置命令，更可以调用系统指令cd、mkdir、ls等指令，非常强大。可以看出作者的编程思路非常奇特，居然还可以这样用。于是我借助这个特性，实现了网络rrdtool指令的操作，like memcache：）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mysql复制同步修复工具]]></title>
    <link href="http://evoupsight.com/blog/2014/07/10/mysql-double-master-repair/"/>
    <updated>2014-07-10T16:44:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/07/10/mysql-double-master-repair</id>
    <content type="html"><![CDATA[<p>采用mysql双主同步这种架构时要格外注意数据同步的问题，如果没有解决好不同步的问题，那就像《网站运维：保持数据实时的秘技》中提到的，简直就是期待数据不同步。所以对于实际使用过程中还是要紧密监控，对于数据不同步的状况，需要及时报警和处理，不然就等着数据异常吧！下文是主从同步的修复，主主的修复，只要把另外一个主看成从，互相修一下就可以了，见下文：</p>

<!--more-->


<h3>恢复主主的工具</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; wget http://www.percona.com/redir/downloads/percona-toolkit/2.2.6/percona-toolkit-2.2.6.tar.gz
</span><span class='line'>&gt; tar xzf percona-toolkit-2.2.6.tar.gz
</span><span class='line'>&gt; <span class="nb">cd </span>percona-toolkit-2.2.6
</span><span class='line'>&gt; perl Makefile.PL
</span><span class='line'>Warning: prerequisite DBD::mysql 3 not found.
</span><span class='line'>Warning: prerequisite DBI 1.46 not found.
</span><span class='line'>Writing Makefile <span class="k">for </span>percona-toolkit
</span><span class='line'>
</span><span class='line'>&gt; sudo cpan YAML
</span><span class='line'>&gt; sudo cpan DBD::mysql
</span></code></pre></td></tr></table></div></figure>


<p>出现询问是否yes，一路选择yes</p>

<p>遇到测试的时候出现
<code>FAILED--Further testing stopped: ERROR: Access denied for user 'root'@'localhost' (using password: NO)</code></p>

<p>进入mysql修改一下默认密码为空</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>GRANT ALL PRIVILEGES ON *.* TO root@<span class="s1">&#39;localhost&#39;</span> IDENTIFIED BY <span class="s1">&#39;&#39;</span>;
</span><span class='line'>flush privileges;
</span></code></pre></td></tr></table></div></figure>


<p>回来继续</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo cpan DBD::mysql
</span></code></pre></td></tr></table></div></figure>


<h3>检查完整性</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>yinjia@hm15hadoop01 percona-toolkit-2.2.6<span class="o">]</span>&gt;sudo pt-table-checksum  --recursion-method<span class="o">=</span>processlist
</span><span class='line'>Cannot connect to <span class="nv">h</span><span class="o">=</span>10.10.8.45
</span><span class='line'>Diffs cannot be detected because no slaves were found.  Please <span class="nb">read </span>the --recursion-method documentation <span class="k">for </span>information.
</span></code></pre></td></tr></table></div></figure>


<p>在主上运行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mysql&gt; show slave hosts;
</span><span class='line'>+-----------+------+------+-----------+
</span><span class='line'>| Server_id | Host | Port | Master_id |
</span><span class='line'>+-----------+------+------+-----------+
</span><span class='line'>|         2 |      | 3306 |         1 |
</span><span class='line'>+-----------+------+------+-----------+
</span><span class='line'>1 row in <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>发现是host没有所以导致脚本会报错</p>

<p>到slave上，my.cnf中添加report_host=10.10.8.45 #设置成本机IP，然后重启slave
回到主上</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mysql&gt; show slave hosts;
</span><span class='line'>+-----------+------------+------+-----------+
</span><span class='line'>| Server_id | Host       | Port | Master_id |
</span><span class='line'>+-----------+------------+------+-----------+
</span><span class='line'>|         2 | 10.10.8.45 | 3306 |         1 |
</span><span class='line'>+-----------+------------+------+-----------+
</span><span class='line'>1 row in <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>&gt;sudo pt-table-checksum --recursion-method<span class="o">=</span>processlist
</span><span class='line'>Password:
</span><span class='line'>Cannot connect to <span class="nv">h</span><span class="o">=</span>10.10.8.45
</span><span class='line'>Diffs cannot be detected because no slaves were found.  Please <span class="nb">read </span>the --recursion-method documentation <span class="k">for </span>information.
</span></code></pre></td></tr></table></div></figure>


<p>问题依旧,修改shell</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>yinjia@hm15hadoop01 percona-toolkit-2.2.6<span class="o">]</span>&gt;pt-table-checksum --recursion-method<span class="o">=</span>hosts --no-check-binlog-format --nocheck-replication-filters --replicate<span class="o">=</span>monitor1_db.checksums --databases<span class="o">=</span>monitor1_db --tables<span class="o">=</span>httplog_status <span class="nv">h</span><span class="o">=</span>10.10.8.45,u<span class="o">=</span>madcore,p<span class="o">=</span>madcore,P<span class="o">=</span>3306
</span><span class='line'>            TS ERRORS  DIFFS     ROWS  CHUNKS SKIPPED    TIME TABLE
</span><span class='line'>06-30T13:33:50      0      1     5415       4       0   0.377 monitor1_db.httplog_status
</span></code></pre></td></tr></table></div></figure>


<p>看到DIFFS1，即为有1行差异</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>yinjia@hm15hadoop02 ~/software<span class="o">]</span>&gt;pt-table-checksum --recursion-method<span class="o">=</span>hosts --no-check-binlog-format --nocheck-replication-filters --replicate<span class="o">=</span>monitor1_db.checksums --databases<span class="o">=</span>monitor1_db --tables<span class="o">=</span>httplog_status <span class="nv">h</span><span class="o">=</span>10.10.8.44,u<span class="o">=</span>madcore,p<span class="o">=</span>madcore,P<span class="o">=</span>3306
</span><span class='line'>            TS ERRORS  DIFFS     ROWS  CHUNKS SKIPPED    TIME TABLE
</span><span class='line'>06-30T13:34:58      0      1     5395       4       0   0.371 monitor1_db.httplog_status
</span></code></pre></td></tr></table></div></figure>


<p>可以看到现在DIFF是1，证明有差异。所以要同步，怎么同步，使用pt-table-sync进行修复</p>

<h3>修复同步</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>pt-table-sync --replicate<span class="o">=</span>monitor1_db.checksums <span class="nv">h</span><span class="o">=</span>10.10.8.44,u<span class="o">=</span>madcore,p<span class="o">=</span>madcore <span class="nv">h</span><span class="o">=</span>10.10.8.45,u<span class="o">=</span>madcore,p<span class="o">=</span>madcore --print --execute
</span></code></pre></td></tr></table></div></figure>


<p>分别是主的IP，从的IP。针对两边分别修复，最后再看一下pt-table-checksum 发现DIFF为0证明数据同步成功。</p>

<h3>注意事项</h3>

<p>同步修复后，记录可能发生乱序，比较好的做法是加timestamp字段，把写入的时间戳记载下来，然后select的时候采用ORDER BY进行排序，这样就不会乱序了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mysql主主配置]]></title>
    <link href="http://evoupsight.com/blog/2014/07/10/mysql-double-master/"/>
    <updated>2014-07-10T16:20:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/07/10/mysql-double-master</id>
    <content type="html"><![CDATA[<p>由于在项目中使用采用mysql的双master来实现关系型数据库的HA，以下配置的步骤记录一遍。</p>

<!--more-->


<h3>作业环境：</h3>

<p>serverA:  IP:192.168.216.210  OS:CentOs6.4 64bit  DB:MySQL5.5.37</p>

<p>serverB:  IP:192.168.216.211  OS:CentOs6.4 64bit  DB:MySQL5.5.37</p>

<h3>Step1:同步授权</h3>

<p>ServerA:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>GRANT REPLICATION SLAVE,FILE ON *.* TO repuser@<span class="s1">&#39;192.168.216.211&#39;</span> IDENTIFIED BY <span class="s1">&#39;reppass&#39;</span>;
</span><span class='line'>flush privileges;
</span><span class='line'><span class="nv">$ </span>sudo service mysql-server restart
</span></code></pre></td></tr></table></div></figure>


<p>ServerB:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>GRANT REPLICATION SLAVE,FILE ON *.* TO repuser@<span class="s1">&#39;192.168.216.210&#39;</span> IDENTIFIED BY <span class="s1">&#39;reppass&#39;</span>;
</span><span class='line'>flush privileges;
</span><span class='line'><span class="nv">$ </span>sudo service mysql-server restart
</span></code></pre></td></tr></table></div></figure>


<h3>Step2:配置参数</h3>

<p>先找一下my.cnf的位置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>mysql --verbose --help | grep -A 1 <span class="s1">&#39;Default options&#39;</span>
</span><span class='line'>/etc/my.cnf /etc/mysql/my.cnf /usr/local/etc/my.cnf /usr/local/etc/mysql/my.cnf ~/.my.cnf
</span><span class='line'><span class="nv">$ </span>ls /etc/my.cnf /etc/mysql/my.cnf /usr/local/etc/my.cnf /usr/local/etc/mysql/my.cnf ~/.my.cnf
</span><span class='line'>ls: /etc/my.cnf: No such file or directory
</span><span class='line'>ls: /etc/mysql/my.cnf: No such file or directory
</span><span class='line'>ls: /home/evoup/.my.cnf: No such file or directory
</span><span class='line'>ls: /usr/local/etc/my.cnf: No such file or directory
</span><span class='line'>ls: /usr/local/etc/mysql/my.cnf: No such file or directory
</span><span class='line'><span class="nv">$ </span>locate my-medium.cnf
</span><span class='line'>/usr/local/share/mysql/my-medium.cnf
</span><span class='line'><span class="nv">$ </span>sudo cp /usr/local/share/mysql/my-medium.cnf /etc/my.cnf
</span></code></pre></td></tr></table></div></figure>


<p>开启二进制日志
接下来需要在ServerA的/etc/my.cnf中添加配置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">user</span><span class="o">=</span>mysql
</span><span class='line'>binlog-do-db<span class="o">=</span>monitor1_db
</span><span class='line'>binlog-ignore-db<span class="o">=</span>mysql
</span><span class='line'>replicate-do-db<span class="o">=</span>monitor1_db
</span><span class='line'>replicate-ignore-db<span class="o">=</span>mysql
</span><span class='line'>log-slave-update
</span><span class='line'>slave-skip-errors<span class="o">=</span>all
</span><span class='line'>skip-name-resolve
</span><span class='line'><span class="nv">sync_binlog</span><span class="o">=</span>1
</span><span class='line'><span class="nv">auto_increment_increment</span><span class="o">=</span>2
</span><span class='line'><span class="nv">auto_increment_offset</span><span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure>


<p>而在ServerB的/etc/my.cnf中</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">user</span><span class="o">=</span>mysql
</span><span class='line'>binlog-do-db<span class="o">=</span>monitor1_db
</span><span class='line'>binlog-ignore-db<span class="o">=</span>mysql
</span><span class='line'>replicate-do-db<span class="o">=</span>monitor1_db
</span><span class='line'>replicate-ignore-db<span class="o">=</span>mysql
</span><span class='line'>log-slave-update
</span><span class='line'>slave-skip-errors<span class="o">=</span>all
</span><span class='line'>skip-name-resolve
</span><span class='line'><span class="nv">sync_binlog</span><span class="o">=</span>1
</span><span class='line'><span class="nv">auto_increment_increment</span><span class="o">=</span>2
</span><span class='line'><span class="nv">auto_increment_offset</span><span class="o">=</span>2
</span></code></pre></td></tr></table></div></figure>


<p>几点说明：
1) binlog-do-db和replicate-do-db是指出要同步的数据库，一般指定了数据库再其下创建的表就都能进行主主同步。<br>
2) auto_increment_offset一定要指定为1个奇数，1个偶数，为什么，估计是同步的机制，反正这官方的主主解决方案我感觉很奇葩,必须这么设置。<br>
3）同步的数据库要有上面指出的帐号（repuser）操作的权限。</p>

<h3>Step3:关联Master和Master</h3>

<p>首先ServerA和ServerB要锁表，还有关闭slave同步</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mysql&gt; flush tables with <span class="nb">read </span>lock;
</span><span class='line'>mysql&gt; stop slave;
</span></code></pre></td></tr></table></div></figure>


<p>然后先查看ServerB的master状况</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mysql&gt;show master status;
</span><span class='line'>+------------------+----------+--------------+------------------+
</span><span class='line'>| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |
</span><span class='line'>+------------------+----------+--------------+------------------+
</span><span class='line'>| mysql-bin.000019 |      107 | monitor1_db  | mysql            |
</span><span class='line'>+------------------+----------+--------------+------------------+
</span></code></pre></td></tr></table></div></figure>


<p>在ServerA绑定好到ServerB的同步关系</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mysql&gt; change master to <span class="nv">master_host</span><span class="o">=</span><span class="s1">&#39;192.168.216.211&#39;</span>,master_password<span class="o">=</span><span class="s1">&#39;madcore&#39;</span>,master_user<span class="o">=</span><span class="s1">&#39;madcore&#39;</span>,master_log_file<span class="o">=</span><span class="s1">&#39;mysql-bin.000019&#39;</span>,master_log_pos<span class="o">=</span>107;
</span></code></pre></td></tr></table></div></figure>


<p>同样的，再查看ServerA的master状况</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mysql&gt; show master status;
</span><span class='line'>+------------------+----------+--------------+------------------+
</span><span class='line'>| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |
</span><span class='line'>+------------------+----------+--------------+------------------+
</span><span class='line'>| mysql-bin.000018 |      23  | monitor1_db  | mysql            |
</span><span class='line'>+------------------+----------+--------------+------------------+
</span></code></pre></td></tr></table></div></figure>


<p>再ServerB绑定好到ServerA的同步关系</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mysql&gt; change master to <span class="nv">master_host</span><span class="o">=</span><span class="s1">&#39;192.168.216.210&#39;</span>,master_password<span class="o">=</span><span class="s1">&#39;madcore&#39;</span>,master_user<span class="o">=</span><span class="s1">&#39;madcore&#39;</span>,master_log_file<span class="o">=</span><span class="s1">&#39;mysql-bin.000018&#39;</span>,master_log_pos<span class="o">=</span>23;
</span></code></pre></td></tr></table></div></figure>


<p>在ServerA和ServerB打开slave和解锁表</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mysql&gt; slave start;
</span><span class='line'>mysql&gt; unlock tables;
</span></code></pre></td></tr></table></div></figure>


<p>然后查看slave的同步状态
···
show slave status\G;
···
观察几个指标
Slave_IO_Running: Yes
Slave_SQL_Running: Yes
Seconds_Behind_Master:0</p>

<p>再看一下进程描述</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mysql&gt; show processlist;
</span></code></pre></td></tr></table></div></figure>


<p>一般上面几个指标是YES和0的话，这个不看都可以。</p>

<h3>补充：</h3>

<p>在同步设置中遇到的问题，可以通过查看mysql日志的方法来解决。
查看mysql日志的位置的命令。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mysql&gt; show variables like <span class="s1">&#39;general_log_file&#39;</span>;
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hadoop2.0cdh4.6.0完全分布式安装]]></title>
    <link href="http://evoupsight.com/blog/2014/07/10/hadoop2-dot-0cdh4-dot-6-0-fullly-distrbute/"/>
    <updated>2014-07-10T15:57:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/07/10/hadoop2-dot-0cdh4-dot-6-0-fullly-distrbute</id>
    <content type="html"><![CDATA[<p>hadoop2.0 cdh4安装（完全分布式）</p>

<!-- more -->


<p>vmware版本8.0.4 build-744019</p>

<p>首先规划3台虚拟机</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> ,'''''''''''''''''''''':'''''''''''''''''':''''''''''''''''''''''''''''''''''''''''''''|
</span><span class='line'> |        usage         |        IP        |                  Hostname                  |
</span><span class='line'> |                      |                  |                                            |
</span><span class='line'> |''''''''''''''''''''''|''''''''''''''''''|''''''''''''''''''''''''''''''''''''''''''''|
</span><span class='line'> | namenode1,datanode1  | 192.168.216.183  |    mdn3namenode1.net,mdn3datanode1.net     |
</span><span class='line'> |                      |                  |                                            |
</span><span class='line'> |''''''''''''''''''''''|''''''''''''''''''|''''''''''''''''''''''''''''''''''''''''''''|
</span><span class='line'> | namenode2,datanode2  | 192.168.216.184  |    mdn3namenode2.net,mdn3datanode2.net     |
</span><span class='line'> |                      |                  |                                            |
</span><span class='line'> |''''''''''''''''''''''|''''''''''''''''''|''''''''''''''''''''''''''''''''''''''''''''|
</span><span class='line'> | datanode2,nfs server | 192.168.216.185  |    mdn3datanode3.net,mdn3nfsserver.net     |
</span><span class='line'> |                      |                  |                                            |
</span><span class='line'>  '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</span></code></pre></td></tr></table></div></figure>


<h3>准备工作</h3>

<p>先安装JDK1.6 linux:先把已经安装的openjdk卸载,安装sun jdk1.6,去oracle下载 （j2se就够了）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rpm -qa | grep jdk
</span><span class='line'>java-1.6.0-openjdk-1.6.0.0-1.28.1.10.9.el5_8
</span><span class='line'><span class="nv">$ </span>sudo rpm -e java-1.6.0-openjdk-1.6.0.0-1.28.1.10.9.el5_8
</span><span class='line'><span class="nv">$ </span>sudo chmod +x jdk-6u45-linux-x64-rpm.bin
</span><span class='line'><span class="nv">$ </span>sudo ./jdk-6u45-linux-x64-rpm.bin
</span></code></pre></td></tr></table></div></figure>


<p>hadoop所有操作都是用hadoop帐号，下面添加</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>groupadd hadoop
</span><span class='line'><span class="nv">$ </span>useradd -r -g hadoop -d /home/hadoop -m -s /bin/bash hadoop
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>mkdir -p /u01/app
</span><span class='line'><span class="nv">$ </span>chgrp -R hadoop /u01/app
</span><span class='line'><span class="nv">$ </span>chown -R hadoop /u01/app
</span></code></pre></td></tr></table></div></figure>


<p>环境变量(在centos里不管编辑~/.profile还是~/.bash_profile都不能加载环境变量，正确的应该是在~/.bashrc中，而如果是root用户，应该可以直接在/etc/profile中编辑)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vi ~/.bashrc
</span><span class='line'><span class="nb">export </span><span class="nv">HADOOP_HOME</span><span class="o">=</span><span class="s2">&quot;/usr/local/hadoop&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">JAVA_HOME</span><span class="o">=</span><span class="s2">&quot;/usr/java/jdk1.6.0_45&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:<span class="nv">$JAVA_HOME</span>/bin
</span><span class='line'><span class="nb">export </span><span class="nv">CLASSPATH</span><span class="o">=</span>.:<span class="nv">$JAVA_HOME</span>/lib/dt.jar:<span class="nv">$JAVA_HOME</span>/lib/tools.jar
</span></code></pre></td></tr></table></div></figure>


<p>切换到hadoop帐号，进行免密码的ssh登录设置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>su hadoop
</span><span class='line'><span class="nv">$ </span>ssh-keygen -t dsa -P <span class="s1">&#39;&#39;</span> -f ~/.ssh/id_dsa
</span><span class='line'><span class="nv">$ </span>cat ~/.ssh/id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys
</span><span class='line'><span class="nv">$ </span>chmod 600 ~/.ssh/authorized_keys
</span></code></pre></td></tr></table></div></figure>


<p>给出我的hadoop/hbase版本</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Name        : hadoop-hdfs-namenode
</span><span class='line'>Arch        : x86_64
</span><span class='line'>Version     : 2.0.0+1554
</span><span class='line'>Release     : 1.cdh4.6.0.p0.16.el6
</span><span class='line'>
</span><span class='line'>Name        : hbase-master
</span><span class='line'>Arch        : x86_64
</span><span class='line'>Version     : 0.94.15+86
</span><span class='line'>Release     : 1.cdh4.6.0.p0.14.el6
</span></code></pre></td></tr></table></div></figure>


<p>然后是cdh的软件下载url
<a href="http://archive.cloudera.com/cdh4">http://archive.cloudera.com/cdh4</a>
这个路径下有很多的软件。</p>

<p>下载cdh4.6的几个包安装</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /home/software/
</span><span class='line'><span class="nv">$ </span>wget http://archive.cloudera.com/cdh4/cdh/4/hadoop-2.0.0-cdh4.6.0.tar.gz
</span><span class='line'><span class="nv">$ </span>sudo mkdir /usr/local/hadoop/
</span><span class='line'><span class="nv">$ </span>tar xzf hadoop-2.0.0-cdh4.6.0.tar.gz
</span><span class='line'><span class="nv">$ </span>sudo mv hadoop-2.0.0-cdh4.6.0 /usr/local/
</span><span class='line'><span class="nv">$ </span>sudo mv /usr/local/hadoop-2.0.0-cdh4.6.0 /usr/local/hadoop
</span><span class='line'><span class="nv">$ </span>sudo chown -R hadoop:hadoop /usr/local/hadoop
</span></code></pre></td></tr></table></div></figure>


<p>创建存储临时文件temp、data和name节点数据的目录</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo mkdir /usr/local/hadoop/temp/ /usr/local/hadoop/data/ /usr/local/hadoop/name/
</span></code></pre></td></tr></table></div></figure>


<p>好了，准备工作终了</p>

<p>开始配置
配置/usr/local/hadoop/etc/hadoop/core-site.xml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property&gt;</span>
</span><span class='line'>                <span class="nt">&lt;name&gt;</span>fs.defaultFS<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>                <span class="nt">&lt;value&gt;</span>hdfs://mdn3namenode1.net:9000<span class="nt">&lt;/value&gt;</span> <span class="c">&lt;!-- master域名或者master的ip --&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property&gt;</span>
</span><span class='line'>                <span class="nt">&lt;name&gt;</span>io.file.buffer.size<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>                <span class="nt">&lt;value&gt;</span>131072<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property&gt;</span>
</span><span class='line'>                <span class="nt">&lt;name&gt;</span>hadoop.tmp.dir<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>                <span class="nt">&lt;value&gt;</span>file:/usr/local/hadoop/temp<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>                <span class="nt">&lt;description&gt;</span>Abase for other temporary directories.<span class="nt">&lt;/description&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property&gt;</span>
</span><span class='line'>                <span class="nt">&lt;name&gt;</span>hadoop.proxyuser.hduser.hosts<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>                <span class="nt">&lt;value&gt;</span>*<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property&gt;</span>
</span><span class='line'>                <span class="nt">&lt;name&gt;</span>hadoop.proxyuser.hduser.groups<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>                <span class="nt">&lt;value&gt;</span>*<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>配置/usr/local/hadoop/etc/hadoop/hdfs-site.xml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property&gt;</span>
</span><span class='line'>                <span class="nt">&lt;name&gt;</span>dfs.namenode.secondary.http-address<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>                <span class="nt">&lt;value&gt;</span>mdn3namenode1.net:9001<span class="nt">&lt;/value&gt;</span> <span class="c">&lt;!-- master域名或者master的ip --&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property&gt;</span>
</span><span class='line'>                <span class="nt">&lt;name&gt;</span>dfs.namenode.name.dir<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>file:/usr/local/hadoop/dfs/name<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property&gt;</span>
</span><span class='line'>                <span class="nt">&lt;name&gt;</span>dfs.datanode.data.dir<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>                <span class="nt">&lt;value&gt;</span>file:/usr/local/hadoop/dfs/data<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property&gt;</span>
</span><span class='line'>                <span class="nt">&lt;name&gt;</span>dfs.replication<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>                <span class="nt">&lt;value&gt;</span>3<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property&gt;</span>
</span><span class='line'>                <span class="nt">&lt;name&gt;</span>dfs.webhdfs.enabled<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>                <span class="nt">&lt;value&gt;</span>true<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>配置/usr/local/hadoop/etc/hadoop/madpred-site.xml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>cp mapred-site.xml.template mapred-site.xml
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property&gt;</span>
</span><span class='line'>                <span class="nt">&lt;name&gt;</span>mapreduce.framework.name<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>                <span class="nt">&lt;value&gt;</span>yarn<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property&gt;</span>
</span><span class='line'>                <span class="nt">&lt;name&gt;</span>mapreduce.jobhistory.address<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>                <span class="nt">&lt;value&gt;</span>mdn3namenode1.net:10020<span class="nt">&lt;/value&gt;</span> <span class="c">&lt;!-- master域名或者master的ip --&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property&gt;</span>
</span><span class='line'>                <span class="nt">&lt;name&gt;</span>mapreduce.jobhistory.webapp.address<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>                <span class="nt">&lt;value&gt;</span>mdn3namenode1.net:19888<span class="nt">&lt;/value&gt;</span> <span class="c">&lt;!-- master域名或者master的ip --&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>配置/usr/local/hadoop/etc/hadoop/yarn-site.xml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property&gt;</span>
</span><span class='line'>                <span class="nt">&lt;name&gt;</span>yarn.nodemanager.aux-services<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>                <span class="nt">&lt;value&gt;</span>mapreduce.shuffle<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property&gt;</span>
</span><span class='line'>                <span class="nt">&lt;name&gt;</span>yarn.nodemanager.aux-services.mapreduce.shuffle.class<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>                <span class="nt">&lt;value&gt;</span>org.apache.hadoop.mapred.ShuffleHandler<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property&gt;</span>
</span><span class='line'>                <span class="nt">&lt;name&gt;</span>yarn.resourcemanager.address<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>                <span class="nt">&lt;value&gt;</span>mdn3namenode1.net:8032<span class="nt">&lt;/value&gt;</span> <span class="c">&lt;!-- master域名或者master的ip --&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property&gt;</span>
</span><span class='line'>                <span class="nt">&lt;name&gt;</span>yarn.resourcemanager.scheduler.address<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>                <span class="nt">&lt;value&gt;</span>mdn3namenode1.net:8030<span class="nt">&lt;/value&gt;</span> <span class="c">&lt;!-- master域名或者master的ip --&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property&gt;</span>
</span><span class='line'>                <span class="nt">&lt;name&gt;</span>yarn.resourcemanager.resource-tracker.address<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>                <span class="nt">&lt;value&gt;</span>mdn3namenode1.net:8031<span class="nt">&lt;/value&gt;</span> <span class="c">&lt;!-- master域名或者master的ip --&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property&gt;</span>
</span><span class='line'>                <span class="nt">&lt;name&gt;</span>yarn.resourcemanager.admin.address<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>                <span class="nt">&lt;value&gt;</span>mdn3namenode1.net:8033<span class="nt">&lt;/value&gt;</span> <span class="c">&lt;!-- master域名或者master的ip --&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property&gt;</span>
</span><span class='line'>                <span class="nt">&lt;name&gt;</span>yarn.resourcemanager.webapp.address<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>                <span class="nt">&lt;value&gt;</span>mdn3namenode1.net:8088<span class="nt">&lt;/value&gt;</span> <span class="c">&lt;!-- master域名或者master的ip --&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>编辑slave的名字
直接讲slave的域名或者slave的ip按照一行一个的规则写进去</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>mdn3datanode2.net
</span><span class='line'>mdn3datanode3.net
</span></code></pre></td></tr></table></div></figure>


<p>复制到各台机器上</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /usr/local/
</span><span class='line'><span class="nv">$ </span>sudo scp -dr hadoop@192.168.216.183:/usr/local/hadoop .
</span><span class='line'><span class="nv">$ </span>sudo chown -R hadoop:hadoop hadoop/
</span></code></pre></td></tr></table></div></figure>


<p>格式化hdfs
在namenode上执行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>/usr/local/hadoop/bin/hadoop namenode -format
</span></code></pre></td></tr></table></div></figure>


<h3>hbase的安装配置</h3>

<p>hbase依赖zookeeper，需要先去下载</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /home/software/
</span><span class='line'><span class="nv">$ </span>wget http://archive.cloudera.com/cdh4/cdh/4/zookeeper-3.4.5-cdh4.6.0.tar.gz
</span><span class='line'><span class="nv">$ </span>tar xzf zookeeper-3.4.5-cdh4.6.0.tar.gz
</span><span class='line'><span class="nv">$ </span>sudo mv zookeeper-3.4.5-cdh4.6.0 /usr/local/
</span><span class='line'><span class="nv">$ </span>sudo mv /usr/local/zookeeper-3.4.5-cdh4.6.0 /usr/local/zookeeper
</span><span class='line'><span class="nv">$ </span>sudo chown -R hadoop:hadoop /usr/local/zookeeper
</span><span class='line'><span class="nv">$ </span>sudo cp /usr/local/zookeeper/conf/zoo_sample.cfg /usr/local/zookeeper/conf/zoo.cfg
</span></code></pre></td></tr></table></div></figure>


<p>zookeeper准备完毕，可以继续安装hbase</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /home/software/
</span><span class='line'><span class="nv">$ </span>wget http://archive.cloudera.com/cdh4/cdh/4/hbase-0.94.15-cdh4.6.0.tar.gz
</span><span class='line'><span class="nv">$ </span>sudo mkdir /usr/local/hbase/
</span><span class='line'><span class="nv">$ </span>tar xzf hbase-0.94.15-cdh4.6.0.tar.gz
</span><span class='line'><span class="nv">$ </span>sudo mv hbase-0.94.15-cdh4.6.0 /usr/local/
</span><span class='line'><span class="nv">$ </span>sudo mv /usr/local/hbase-0.94.15-cdh4.6.0 /usr/local/hbase
</span><span class='line'><span class="nv">$ </span>sudo chown -R hadoop:hadoop /usr/local/hbase
</span></code></pre></td></tr></table></div></figure>


<p>若干配置步骤
配置hbase-site.xml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>hbase.rootdir<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>hdfs://mdn3namenode1.net:9000/hbase<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>hbase.cluster.distributed<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>true<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>hbase.master<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>mdn3datanode1.net:60000<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>hbase.zookeeper.quorum<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>mdn3datanode1.net<span class="nt">&lt;/value&gt;</span>    <span class="c">&lt;!-- 这里配置若干个zookeeper的服务器地址，需要是奇数个 --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>配置hbase-env.sh</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>export HBASE_MANAGES_ZK=false
</span></code></pre></td></tr></table></div></figure>


<p>不要hbase托管zookeeper</p>

<p>配置regionservers</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>mdn3datanode2.net
</span><span class='line'>mdn3datanode3.net
</span></code></pre></td></tr></table></div></figure>


<p>启动hbase</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>/usr/local/hbase/bin/start-hbase.sh
</span><span class='line'>/usr/local/hbase/bin/hbase-daemons.sh start thrift
</span></code></pre></td></tr></table></div></figure>


<p>hbase启动完成.</p>

<h3>配置hbase可能碰到几个问题的说明：</h3>

<p>1) 报错
<code>ERROR client.HConnectionManager$HConnectionImplementation: Check the value configured in 'zookeeper.znode.parent'</code></p>

<p>是需要把/etc/hosts中的127.0.0.1注释掉，否则zookeeper还会出现</p>

<p>2) 在运行/usr/local/hbase/bin/hbase shell的时候出现了
<code>WARN conf.Configuration: hadoop.native.lib is deprecated. Instead, use io.native.lib.available</code></p>

<p>3) <code>java.net.ConnectException: Connection refused</code>
这是要求hadoop中的slaves配置和hbase的regionservers要一致。</p>

<h3>hive的安装</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> /home/software
</span><span class='line'>wget http://archive.cloudera.com/cdh4/cdh/4/hive-0.10.0-cdh4.6.0.tar.gz
</span><span class='line'>tar xzf hive-0.10.0-cdh4.6.0.tar.gz
</span><span class='line'>sudo mv hive-0.10.0-cdh4.6.0 /usr/local/
</span><span class='line'>sudo mv /usr/local/hive-0.10.0-cdh4.6.0 /usr/local/hive
</span><span class='line'>chown -R hadoop:hadoop /usr/local/hive
</span></code></pre></td></tr></table></div></figure>


<h3>hive的配置</h3>

<p>在~/.bashrc中加入</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">HIVE_HOME</span><span class="o">=</span>/usr/local/hive
</span><span class='line'><span class="nb">export </span><span class="nv">HIVE_CONF_DIR</span><span class="o">=</span><span class="nv">$HIVE_HOME</span>/conf
</span><span class='line'><span class="nb">export </span><span class="nv">HIVE_LIB</span><span class="o">=</span><span class="nv">$HIVE_HOME</span>/lib
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:<span class="nv">$JAVA_HOME</span>/bin:<span class="nv">$ZOOKEEPER_HOME</span>:<span class="nv">$HIVE_HOME</span>
</span></code></pre></td></tr></table></div></figure>


<p>在conf/hive-site.xml中</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> <span class="nv">version</span><span class="o">=</span><span class="s2">&quot;1.0&quot;</span>?&gt;
</span><span class='line'>&lt;?xml-stylesheet <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/xsl&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;configuration.xsl&quot;</span>?&gt;
</span><span class='line'>
</span><span class='line'>&lt;configuration&gt;
</span><span class='line'>&lt;property&gt;
</span><span class='line'>  &lt;name&gt;hive.metastore.local&lt;/name&gt;
</span><span class='line'>  &lt;value&gt;true&lt;/value&gt;
</span><span class='line'>&lt;/property&gt;
</span><span class='line'>
</span><span class='line'>&lt;property&gt;
</span><span class='line'>  &lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt;
</span><span class='line'>  &lt;value&gt;jdbc:mysql://localhost:3306/hive&lt;/value&gt;
</span><span class='line'>&lt;/property&gt;
</span><span class='line'>
</span><span class='line'>&lt;property&gt;
</span><span class='line'>  &lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt;
</span><span class='line'>  &lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt;
</span><span class='line'>&lt;/property&gt;
</span><span class='line'>
</span><span class='line'>&lt;property&gt;
</span><span class='line'>  &lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt;
</span><span class='line'>  &lt;value&gt;hive&lt;/value&gt;
</span><span class='line'>&lt;/property&gt;
</span><span class='line'>
</span><span class='line'>&lt;property&gt;
</span><span class='line'>  &lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt;
</span><span class='line'>  &lt;value&gt;hive&lt;/value&gt;
</span><span class='line'>&lt;/property&gt;
</span><span class='line'>&lt;property&gt;
</span><span class='line'>  &lt;name&gt;datanucleus.fixedDatastore&lt;/name&gt;
</span><span class='line'>  &lt;value&gt;false&lt;/value&gt;
</span><span class='line'>&lt;/property&gt;
</span><span class='line'>
</span><span class='line'>&lt;/configuration&gt;
</span></code></pre></td></tr></table></div></figure>


<p>然后/bin/hive后，成功进入shell</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; create table <span class="nb">test</span> <span class="o">(</span>key string<span class="o">)</span>;
</span></code></pre></td></tr></table></div></figure>


<p>如果遇到下面的报错
<code>FAILED: Error in metadata: java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.metastore.HiveMetaStoreClient</code></p>

<p><code>FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.DDLTask</code>
建表错误
开始以为hive没有访问mysql的权限,以root用户登录mysql然后赋予hive用户权限：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>grant all privileges on *.* to hive@localhost identified by <span class="s1">&#39;hive&#39;</span>;
</span><span class='line'>grant all privileges on *.* to hive@192.168.216.183 identified by <span class="s1">&#39;hive&#39;</span>;
</span></code></pre></td></tr></table></div></figure>


<p>发现问题依旧</p>

<p>其实是要在hive-site.xml中把</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;property&gt;
</span><span class='line'>  &lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt;
</span><span class='line'>  &lt;value&gt;jdbc:mysql://localhost:3306/hive&lt;/value&gt;
</span><span class='line'>&lt;/property&gt;
</span></code></pre></td></tr></table></div></figure>


<p>改成</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;property&gt;
</span><span class='line'>  &lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt;
</span><span class='line'>  &lt;value&gt;jdbc:mysql://192.168.216.183:3306/hive&lt;/value&gt;
</span><span class='line'>&lt;/property&gt;
</span></code></pre></td></tr></table></div></figure>


<p>问题依旧，打开hive的调试模式</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bin/hive -hiveconf hive.root.logger<span class="o">=</span>DEBUG,console
</span></code></pre></td></tr></table></div></figure>


<p><code>14/05/08 17:35:53 WARN conf.HiveConf: DEPRECATED: Configuration property hive.metastore.local no longer has any effect.</code>
<code>Make sure to provide a valid value for hive.metastore.uris if you are connecting to a remote metastore</code></p>

<p>在配置文件里删除hive.metastore.local属性。</p>

<p>最后查得原因是没有安装mysql驱动，只要把mysql-connector-java-5.1.22-bin.jar放到lib下就可以了</p>

<p>然后</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>hive&gt; create table <span class="nb">test</span> <span class="o">(</span>key string<span class="o">)</span>;
</span><span class='line'>OK
</span><span class='line'>Time taken: 42.259 seconds
</span><span class='line'>
</span><span class='line'>hive&gt; show tables;
</span><span class='line'>OK
</span><span class='line'><span class="nb">test</span>
</span><span class='line'>Time taken: 0.279 seconds
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[freebsd和linux上安装中文字体]]></title>
    <link href="http://evoupsight.com/blog/2014/06/13/simplely-install-chinese-fonts-on-freebsd-and-linux/"/>
    <updated>2014-06-13T17:45:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/06/13/simplely-install-chinese-fonts-on-freebsd-and-linux</id>
    <content type="html"><![CDATA[<h3>使用中文字体及其安装</h3>

<p>首先说明，因为需要在不同的平台下让rrdtool显示的图片看起来舒服点，考虑安装中文字体。这里搜罗下方法。（这种方式仅仅是为了程序工作正常，需要使自己的KDE或者GNOME系统中文显示正常可以不用看本文了。）</p>

<!-- more -->


<h3>freebsd下</h3>

<p>直接把字体文件放到/usr/local/share/fonts下，然后刷新字体缓存</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo cp ukai.ttf /usr/local/share/fonts/
</span><span class='line'>sudo <span class="nb">fc</span>-cache -f -v
</span></code></pre></td></tr></table></div></figure>


<h3>centos下</h3>

<p>把字体放到/usr/share/fonts/msfonts下，然后执行几个命令</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo mkdir /use/share/fonts/msfonts
</span><span class='line'>sudo cp ukai.ttf /usr/share/fonts/msfonts/
</span><span class='line'><span class="nb">cd</span> /usr/share/fonts/msfonts/
</span><span class='line'>sudo mkfontscale
</span><span class='line'>sudo mkfontdir
</span><span class='line'>sudo <span class="nb">fc</span>-cache -fv
</span></code></pre></td></tr></table></div></figure>


<p>更EZ的方式有</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo yum  –y  install  fonts-chinese
</span></code></pre></td></tr></table></div></figure>


<p>于是就可以在rrdtool里指定字体为ukai.ttf了，是不是各种简单:)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[apache common configure依赖注意]]></title>
    <link href="http://evoupsight.com/blog/2014/06/13/apache-common-configure/"/>
    <updated>2014-06-13T15:35:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/06/13/apache-common-configure</id>
    <content type="html"><![CDATA[<p>基于maven使用apache的common-configuration的过程中，遇到一个依赖小问题，记录下</p>

<!-- more -->


<p>关于这个包commons-configuration-1.6.jar,注意一定要有三个包才能使用，见下pom片段</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;dependencies&gt;
</span><span class='line'>
</span><span class='line'>    &lt;dependency&gt;
</span><span class='line'>
</span><span class='line'>        &lt;groupId&gt;commons-configuration&lt;/groupId&gt;
</span><span class='line'>
</span><span class='line'>        &lt;artifactId&gt;commons-configuration&lt;/artifactId&gt;
</span><span class='line'>
</span><span class='line'>        &lt;version&gt;1.8&lt;/version&gt;
</span><span class='line'>
</span><span class='line'>    &lt;/dependency&gt;
</span><span class='line'>
</span><span class='line'>    &lt;dependency&gt;
</span><span class='line'>
</span><span class='line'>        &lt;groupId&gt;commons-beanutils&lt;/groupId&gt;
</span><span class='line'>
</span><span class='line'>        &lt;artifactId&gt;commons-beanutils&lt;/artifactId&gt;
</span><span class='line'>
</span><span class='line'>        &lt;version&gt;1.8.0&lt;/version&gt;
</span><span class='line'>
</span><span class='line'>    &lt;/dependency&gt;
</span><span class='line'>
</span><span class='line'>    &lt;dependency&gt;
</span><span class='line'>
</span><span class='line'>        &lt;groupId&gt;commons-jxpath&lt;/groupId&gt;
</span><span class='line'>
</span><span class='line'>        &lt;artifactId&gt;commons-jxpath&lt;/artifactId&gt;
</span><span class='line'>
</span><span class='line'>        &lt;version&gt;1.3&lt;/version&gt;
</span><span class='line'>
</span><span class='line'>    &lt;/dependency&gt;
</span><span class='line'>
</span><span class='line'>&lt;/dependencies&gt;</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[maven使用小计]]></title>
    <link href="http://evoupsight.com/blog/2014/06/12/maven-relative-note/"/>
    <updated>2014-06-12T14:41:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/06/12/maven-relative-note</id>
    <content type="html"><![CDATA[<h3>介绍</h3>

<p>maven是java的一个比较有名的项目构建工具，类似的工具还有ant、gradle等，采用vim+maven构建java项目需要了解maven的基本操作，以下是项目收集到的一些使用套路和细节注意点。</p>

<!-- more -->


<h3>安装(其实无需安装)</h3>

<p>由于可能地址被强，在国内maven下载依赖比较慢，最好在编辑/etc/hosts，并在其中加上依赖服务器的IP地址，如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>199.27.77.129 repo.maven.apache.org</span></code></pre></td></tr></table></div></figure>


<p>下载和解压安装包</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir /home/software/
</span><span class='line'>fetch http://down1.chinaunix.net/distfiles/apache-maven-3.0.4-bin.tar.gz
</span><span class='line'>tar xzf apache-maven-3.0.4-bin.tar.gz</span></code></pre></td></tr></table></div></figure>


<p>然后在~/.cshrc中指定(我这里是使用tcsh作为shell环境)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>setenv M2_HOME "/usr/home/software/apache-maven-3.0.4"
</span><span class='line'>setenv MAVEN_OPTS "-Xms128m -Xmx512m"
</span><span class='line'>set path=( $path $M2_HOME/bin )</span></code></pre></td></tr></table></div></figure>


<p>接着</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>source ~/.cshrc</span></code></pre></td></tr></table></div></figure>


<p>就可以使用mvn命令了</p>

<h3>基本测试构建</h3>

<p>生成测试</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mvn clean test</span></code></pre></td></tr></table></div></figure>


<p>以上命令能直接生成class文件，并且支持自动测试（需要引入Junt并编写测试代码）</p>

<p>生成测试和打包</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mvn clean package</span></code></pre></td></tr></table></div></figure>


<p>以上命令能直接生成最终的jar包文件，同时实现mvn clean test的所有功能</p>

<h3>mvn常用命令</h3>

<p>编译</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mvn compile</span></code></pre></td></tr></table></div></figure>


<p>清理（删除所有test，package，compile等生成的文件）</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mvn clean</span></code></pre></td></tr></table></div></figure>


<p>mvn获取所有依赖并且打包</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mvn dependency:copy-dependencies -DoutputDirectory=lib package</span></code></pre></td></tr></table></div></figure>


<p>maven不经过测试直接打包</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mvn -DskipTests clean package</span></code></pre></td></tr></table></div></figure>


<h3>mvn找依赖的方法</h3>

<p>以下两个网站任意一个直接在搜索框中给出java根类即可，第一个网站还可以在线查看jar包里的方法，可以当在线手册查阅：</p>

<p><a href="https://repository.sonatype.org/">https://repository.sonatype.org/</a></p>

<p><a href="http://mvnrepository.com/">http://mvnrepository.com/</a></p>

<p>参考：
《Maven实战》</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git分支学习]]></title>
    <link href="http://evoupsight.com/blog/2014/05/10/git-branch-learning/"/>
    <updated>2014-05-10T14:17:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/05/10/git-branch-learning</id>
    <content type="html"><![CDATA[<p>主要学习的内容：git默认分支是什么，如何创建分支，如何查看所有分支，如何查看当前分支，如何提交分支，如何切换到分支,以下简单给出答案：</p>

<!-- more -->


<p>git的默认分支是master</p>

<p>创建分支</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git branch branchname </span></code></pre></td></tr></table></div></figure>


<p>显示所有分支</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git show-branch</span></code></pre></td></tr></table></div></figure>


<p>查看当前分支</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git status</span></code></pre></td></tr></table></div></figure>


<p>提交分支</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git push origin branchname</span></code></pre></td></tr></table></div></figure>


<p>切换到名字为branchname的分支</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git checkout branchname</span></code></pre></td></tr></table></div></figure>


<p>创建一个分支，然后把这个分支同步到远程仓库</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git branch branchname
</span><span class='line'>git checkout branchname
</span><span class='line'>git push origin branchname
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[golang使用syslog日志系统和安装使用第三方包log4go]]></title>
    <link href="http://evoupsight.com/blog/2014/04/22/golang-with-syslog-and-log4go/"/>
    <updated>2014-04-22T11:25:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/04/22/golang-with-syslog-and-log4go</id>
    <content type="html"><![CDATA[<h3>使用syslog</h3>

<p>首先介绍下golang的syslog的用法，因为这个其实也很好用，只不过比log4go缺点在于要用syslog那一套（如newsyslog）来手工设置syslog.conf来轮询日志。接下来是一个基本的用法，只有serverity的场景:</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// syslog init</span>
</span><span class='line'><span class="kd">func</span> <span class="nx">LogInit</span><span class="p">()</span> <span class="o">*</span><span class="nx">log</span><span class="p">.</span><span class="nx">Logger</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">Log</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">syslog</span><span class="p">.</span><span class="nx">NewLogger</span><span class="p">(</span><span class="nx">syslog</span><span class="p">.</span><span class="nx">LOG_DEBUG</span><span class="p">,</span> <span class="nx">log</span><span class="p">.</span><span class="nx">Lmicroseconds</span><span class="p">)</span> <span class="c1">//设置log facility为LOG_DEBUG</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">Log</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">//然后打印日志的时候可以调用对应的log level</span>
</span></code></pre></td></tr></table></div></figure>


<p>或者使用shell调用的方式，理论上效率会低一点:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">/// using logger</span>
</span><span class='line'><span class="nx">cmd</span> <span class="o">:=</span> <span class="nx">exec</span><span class="p">.</span><span class="nx">Command</span><span class="p">(</span><span class="s">&quot;logger&quot;</span><span class="p">,</span> <span class="s">&quot;-p&quot;</span><span class="p">,</span> <span class="s">&quot;local0.err&quot;</span><span class="p">,</span> <span class="s">&quot;-t&quot;</span><span class="p">,</span> <span class="s">&quot;bash&quot;</span><span class="p">,</span> <span class="s">&quot;hello bash&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nx">err</span> <span class="p">=</span> <span class="nx">cmd</span><span class="p">.</span><span class="nx">Run</span><span class="p">()</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="s">&quot;error running cmd!&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后是一个可以log serverity和log facility都可以用上的例子:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'><span class="kn">import</span><span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;log/syslog&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="nx">testLogger</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">syslog</span><span class="p">.</span><span class="nx">New</span><span class="p">(</span><span class="nx">syslog</span><span class="p">.</span><span class="nx">LOG_WARNING</span><span class="p">|</span><span class="nx">syslog</span><span class="p">.</span><span class="nx">LOG_LOCAL0</span><span class="p">,</span> <span class="s">&quot;mytag&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">defer</span> <span class="nx">testLogger</span><span class="p">.</span><span class="nx">Close</span><span class="p">()</span>
</span><span class='line'><span class="k">if</span> <span class="nx">err</span><span class="o">!=</span><span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;New() failed: %v\n&quot;</span><span class="p">,</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;logger ok&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">test</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">Write</span><span class="p">([]</span><span class="nb">byte</span><span class="p">(</span><span class="s">&quot;test go syslog&quot;</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>log4go的安装</h3>

<p>言归正传讲安装，不要被log4go的README搞晕了</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="nx">Please</span> <span class="nx">see</span> <span class="nx">http</span><span class="p">:</span><span class="c1">//log4go.googlecode.com/</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Installation</span><span class="p">:</span>
</span><span class='line'><span class="o">-</span> <span class="nx">Run</span> <span class="s">`goinstall log4go.googlecode.com/hg`</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Usage</span><span class="p">:</span>
</span><span class='line'><span class="o">-</span> <span class="nx">Add</span> <span class="nx">the</span> <span class="nx">following</span> <span class="kn">import</span><span class="p">:</span>
</span><span class='line'><span class="kn">import</span> <span class="nx">l4g</span> <span class="s">&quot;log4go.googlecode.com/hg&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Acknowledgements</span><span class="p">:</span>
</span><span class='line'><span class="o">-</span> <span class="nx">pomack</span>
</span><span class='line'>  <span class="nx">For</span> <span class="nx">providing</span> <span class="nx">awesome</span> <span class="nx">patches</span> <span class="nx">to</span> <span class="nx">bring</span> <span class="nx">log4go</span> <span class="nx">up</span> <span class="nx">to</span> <span class="nx">the</span> <span class="nx">latest</span> <span class="nx">Go</span> <span class="nx">spec</span>
</span></code></pre></td></tr></table></div></figure>


<p>其实正确的安装方法如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>go get code.google.com/p/log4go
</span></code></pre></td></tr></table></div></figure>


<p>安装完成后默认路径位于</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>/usr/local/go/src/pkg/code.google.com/p/log4go
</span></code></pre></td></tr></table></div></figure>


<h3>使用log4go</h3>

<p>打开文档看怎么用，有2种方法：</p>

<h4>第一种</h4>

<p>在安装好log4go的机器上运行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>godoc -http<span class="o">=</span>:6060
</span></code></pre></td></tr></table></div></figure>


<p>然后用浏览器查看
<a href="http://host:6060/src/pkg/code.google.com/p/log4go/examples/">http://host:6060/src/pkg/code.google.com/p/log4go/examples/</a></p>

<h4>第二种</h4>

<p>直接查看该目录下的例子
/usr/local/go/src/pkg/code.google.com/p/log4go/examples</p>

<p>主要来看一个日志轮询的怎么做</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;bufio&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;io&quot;</span>
</span><span class='line'>  <span class="s">&quot;os&quot;</span>
</span><span class='line'>  <span class="s">&quot;time&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nx">l4g</span> <span class="s">&quot;code.google.com/p/log4go&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">const</span> <span class="p">(</span>
</span><span class='line'>  <span class="nx">filename</span> <span class="p">=</span> <span class="s">&quot;flw.log&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// Get a new logger instance</span>
</span><span class='line'>  <span class="nx">log</span> <span class="o">:=</span> <span class="nx">l4g</span><span class="p">.</span><span class="nx">NewLogger</span><span class="p">()</span> <span class="c1">//实例化日志对象</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Create a default logger that is logging messages of FINE or higher</span>
</span><span class='line'>  <span class="nx">log</span><span class="p">.</span><span class="nx">AddFilter</span><span class="p">(</span><span class="s">&quot;file&quot;</span><span class="p">,</span> <span class="nx">l4g</span><span class="p">.</span><span class="nx">FINE</span><span class="p">,</span> <span class="nx">l4g</span><span class="p">.</span><span class="nx">NewFileLogWriter</span><span class="p">(</span><span class="nx">filename</span><span class="p">,</span> <span class="kc">false</span><span class="p">))</span>
</span><span class='line'>  <span class="nx">log</span><span class="p">.</span><span class="nx">Close</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Can also specify manually via the following: (these are the defaults) */</span>
</span><span class='line'>  <span class="nx">flw</span> <span class="o">:=</span> <span class="nx">l4g</span><span class="p">.</span><span class="nx">NewFileLogWriter</span><span class="p">(</span><span class="nx">filename</span><span class="p">,</span> <span class="kc">false</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">flw</span><span class="p">.</span><span class="nx">SetFormat</span><span class="p">(</span><span class="s">&quot;[%D %T] [%L] (%S) %M&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">flw</span><span class="p">.</span><span class="nx">SetRotate</span><span class="p">(</span><span class="kc">false</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">flw</span><span class="p">.</span><span class="nx">SetRotateSize</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">flw</span><span class="p">.</span><span class="nx">SetRotateLines</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">flw</span><span class="p">.</span><span class="nx">SetRotateDaily</span><span class="p">(</span><span class="kc">false</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">log</span><span class="p">.</span><span class="nx">AddFilter</span><span class="p">(</span><span class="s">&quot;file&quot;</span><span class="p">,</span> <span class="nx">l4g</span><span class="p">.</span><span class="nx">FINE</span><span class="p">,</span> <span class="nx">flw</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Log some experimental messages</span>
</span><span class='line'>  <span class="nx">log</span><span class="p">.</span><span class="nx">Finest</span><span class="p">(</span><span class="s">&quot;Everything is created now (notice that I will not be printing to the file)&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">log</span><span class="p">.</span><span class="nx">Info</span><span class="p">(</span><span class="s">&quot;The time is now: %s&quot;</span><span class="p">,</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Now</span><span class="p">().</span><span class="nx">Format</span><span class="p">(</span><span class="s">&quot;15:04:05 MST 2006/01/02&quot;</span><span class="p">))</span>
</span><span class='line'>  <span class="nx">log</span><span class="p">.</span><span class="nx">Critical</span><span class="p">(</span><span class="s">&quot;Time to close out!&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Close the log</span>
</span><span class='line'>  <span class="nx">log</span><span class="p">.</span><span class="nx">Close</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Print what was logged to the file (yes, I know I&#39;m skipping error checking)</span>
</span><span class='line'>  <span class="nx">fd</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">os</span><span class="p">.</span><span class="nx">Open</span><span class="p">(</span><span class="nx">filename</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">in</span> <span class="o">:=</span> <span class="nx">bufio</span><span class="p">.</span><span class="nx">NewReader</span><span class="p">(</span><span class="nx">fd</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Print</span><span class="p">(</span><span class="s">&quot;Messages logged to file were: (line numbers not included)\n&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">lineno</span> <span class="o">:=</span> <span class="mi">1</span><span class="p">;</span> <span class="p">;</span> <span class="nx">lineno</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">line</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">in</span><span class="p">.</span><span class="nx">ReadString</span><span class="p">(</span><span class="sc">&#39;\n&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">err</span> <span class="o">==</span> <span class="nx">io</span><span class="p">.</span><span class="nx">EOF</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">break</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;%3d:\t%s&quot;</span><span class="p">,</span> <span class="nx">lineno</span><span class="p">,</span> <span class="nx">line</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">fd</span><span class="p">.</span><span class="nx">Close</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Remove the file so it&#39;s not lying around</span>
</span><span class='line'>  <span class="nx">os</span><span class="p">.</span><span class="nx">Remove</span><span class="p">(</span><span class="nx">filename</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>代码就不多说了，唯一值得注意的是log4go貌似达到指定的日志数上限了之后就不会再去掉旧的文件，更新新的文件了，也就是再也无法记录日志，这个是需要程序考虑的，完。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[win7下cocos2d-js3.0 alpha生成android项目]]></title>
    <link href="http://evoupsight.com/blog/2014/03/25/win7-cocos-2djs-3-dot-0-alpha-with-android/"/>
    <updated>2014-03-25T19:37:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/03/25/win7-cocos-2djs-3-dot-0-alpha-with-android</id>
    <content type="html"><![CDATA[<p>折腾了比较长的时间，主要是从cocos2d-html5入门开始做demo，然后到jsb的部分，发现走不通，于是又去研究了cocos2d-x3.0 v3.0 rc0如何生成android项目，发现发布是可以的，但是安装到模拟器又是闪退。花了两三天时间（间断）终于完成，放这里共享下。</p>

<!-- more -->


<h3>需要的软件</h3>

<p>首先当然是下载好cocos2d-js了，放到c:\cocos2d-jsb中：<br>
<img src="http://evoupsight.com/images/evoup/cocos2d-js_android/01.png" alt="Alt text" /></p>

<p>然后请安装好这些工具NDK（r9b）, android SDK（20131030）, ANT（1.9.3），Python（2.7.6）<br>
下图中红色框住的部分为实际使用到的软件</p>

<p><img src="http://evoupsight.com/images/evoup/cocos2d-js_android/02.png" alt="Alt text" /></p>

<p><img src="http://evoupsight.com/images/evoup/cocos2d-js_android/03.png" alt="Alt text" /></p>

<p>python要配置好环境变量，在cmd命令调出python，可以看到版本号:<br></p>

<p><img src="http://evoupsight.com/images/evoup/cocos2d-js_android/04.png" alt="Alt text" /></p>

<h3>安装</h3>

<p>万事俱备，到了见证奇迹的时刻,在这之前，请先安装好命令行，其实就是写入几个环境变量<br>
方法是：开始-运行-cmd，进入控制台，然后定位到C:\cocos2d-jsb\Cocos2d-JS-v3.0-alpha,接下来输入:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>python setup.py
</span></code></pre></td></tr></table></div></figure>


<p>然后在对应的NDK_ROOT环境变量中输入c:\android\android-ndk-r9b-windows-x86_64\android-ndk-r9b,<br>
在ANDROID_SDK_ROOT环境变量中输入c:\android\adt-bundle-windows-x86_64-20131030\sdk<br>
在ANT_ROOT中环境变量中输入c:\ant\apache-ant-1.9.3\bin<br>
<img src="http://evoupsight.com/images/evoup/cocos2d-js_android/05.png" alt="Alt text" /></p>

<p>这些操作完成后，你会发现win7好像并没有加载出这些环境变量，我的方法是重启（嗯！你没看错，反正我是重启才能加载，晕）。<br></p>

<p>重启完成之后,我们试一下这些环境变量是否OK，注意windows下批处理程序变量的命名方式为%变量名%<br></p>

<p><img src="http://evoupsight.com/images/evoup/cocos2d-js_android/06.png" alt="Alt text" /></p>

<h3>产生项目</h3>

<p>比如说要在c:/projects下创建一个有native编译支持的，名为projectFirst的项目，需要在控制台输入</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>%COCOS_CONSOLE_ROOT%/cocos new projectFirst -l js -d c:/projects
</span></code></pre></td></tr></table></div></figure>


<p>等一会儿就创建完毕<br>
<img src="http://evoupsight.com/images/evoup/cocos2d-js_android/07.png" alt="Alt text" /></p>

<h3>编译项目</h3>

<p>如果要编译成android项目，只要执行如下指令即可：<br></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&gt; <span class="nb">cd </span>c:<span class="se">\p</span>rojects<span class="se">\p</span>rojectFirst
</span><span class='line'>&gt; %COCOS_CONSOLE_ROOT%/cocos compile -p android
</span></code></pre></td></tr></table></div></figure>


<p>之后要耐心等待项目编译完成，顺便说一句，没有vc2012是不能够编译cocos2d-js3.0的，因为现在引擎支持C++11了。<br>
<img src="http://evoupsight.com/images/evoup/cocos2d-js_android/08.png" alt="Alt text" /></p>

<p>等待编译完成<br>
<img src="http://evoupsight.com/images/evoup/cocos2d-js_android/09.png" alt="Alt text" /></p>

<p>这样就在runtime\android\下生成了projectFirst-debug-unaligned.apk</p>

<h3>在android模拟器测试</h3>

<p>这个只要注意如果是2d-js的项目，在模拟器里面是需要打开use host gpu<br>
<img src="http://evoupsight.com/images/evoup/cocos2d-js_android/10.png" alt="Alt text" /></p>

<p>启动模拟器后，用adb安装软件进去<br></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>%ANDROID_SDK_ROOT%/platform-tools/adb install c:<span class="se">\p</span>rojects<span class="se">\p</span>rojectFirst<span class="se">\r</span>untime<span class="se">\a</span>ndroid<span class="se">\p</span>rojectFirst-debug-unaligned.apk
</span></code></pre></td></tr></table></div></figure>


<p>安装完成后运行程序<br>
<img src="http://evoupsight.com/images/evoup/cocos2d-js_android/10.png" alt="Alt text" /></p>

<p>告一段落。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用CocoStudio创建骨骼动画（二）]]></title>
    <link href="http://evoupsight.com/blog/2014/03/18/use-cocostudio-create-bone-animation2/"/>
    <updated>2014-03-18T22:17:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/03/18/use-cocostudio-create-bone-animation2</id>
    <content type="html"><![CDATA[<p>上次的《使用CocoStudio创建骨骼动画》讨论到了如何创建骨骼和绑定骨骼关系，这节开始谈怎么创建帧动画。</p>

<p>我把上次的每个图层命名成每个骨骼后，更新后的：<a href="http://pan.baidu.com/s/1mg0UXJi" target=_blank>工作cocostudio源文件下载</a></p>

<!-- more -->


<p><img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation2/01.png" alt="Alt text" /></p>

<p>点击形体模式之后切换到动画模式<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation2/02.png" alt="Alt text" /></p>

<p>开始第一个帧动画的制作，右键点击动作列表Animation1<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation2/03.png" alt="Alt text" /></p>

<p>改名为stand,注意不要改成中文，否则以后写代码调用的时候可能会出现问题<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation2/04.png" alt="Alt text" /></p>

<p>用鼠标框选全部的帧<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation2/05.png" alt="Alt text" /></p>

<p>选择复制帧<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation2/06.png" alt="Alt text" /></p>

<p>在60帧处右键，然后点击粘帖帧<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation2/07.png" alt="Alt text" /></p>

<p>同样的方法，在30帧处右键点击粘帖帧<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation2/08.png" alt="Alt text" /></p>

<p>然后把时间轴移到到30帧<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation2/09.png" alt="Alt text" /></p>

<p>接下来编辑造型了，轻微旋转各个关节<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation2/10.png" alt="Alt text" /></p>

<p>点击隐藏骨骼，可以展现整体角色<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation2/11.png" alt="Alt text" /></p>

<p>看效果<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation2/animation.gif" alt="Alt text" /></p>

<p>然后再创建一个run的动作，如法炮制，未完待续&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Win7 Android开发环境搭建之二(NDK+CDT)]]></title>
    <link href="http://evoupsight.com/blog/2014/03/18/android-install-ndk-cdt/"/>
    <updated>2014-03-18T15:08:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/03/18/android-install-ndk-cdt</id>
    <content type="html"><![CDATA[<p>由于cocos2d-js用到了android的一些生产软件，比如android sdk、adt、cdt和ndk，前面两个已经在之前的《Win7 Android开发环境搭建之一(SDK+ADT)》说过了，这次主要介绍下怎么安装cdt和ndk。</p>

<!-- more -->


<h3>什么是NDK</h3>

<blockquote><p>NDK 提供了一系列的工具，帮助开发者快速开发C（或C++）的动态库，并能自动将so 和java 应用一起打包成apk。这些工具对开发者的帮助是巨大的。</p></blockquote>

<h3>NDK的安装</h3>

<p>这个安装其实就是解压（环境变量的添加要等装好了cygwin再添加，这是后话），下载android NDK。<a href="http://developer.android.com/tools/sdk/ndk/index.html">http://developer.android.com/tools/sdk/ndk/index.html</a></p>

<p>我下载的版本是android-ndk-r9d-windows-x86_64.zip<br>
下载后解压到例如：c:\android\android-ndk-r9d-windows-x86_64.zip，结果如下图：<br>
<img src="http://evoupsight.com/images/evoup/android_cdt_ndk/01.png" alt="Alt text" /></p>

<h3>安装cygwin与ndk编译</h3>

<p>（插一句：cygwin安装后与octopress的环境可能冲突，建议先安装octopress)</p>

<h4>安装cygwin</h4>

<p>ndk开发需要gcc环境，在windows下可以用是cygwin模拟linux编译环境。</p>

<p>Cygwin的下载地址：<a href="http://www.cygwin.com/">http://www.cygwin.com/</a></p>

<p>这个直接一路装，选择163的镜像<br>
<img src="http://evoupsight.com/images/evoup/android_cdt_ndk/02.png" alt="Alt text" /></p>

<p>选择Devel-Default，然后点击变成Devel-Install，然后持续点击下一步，耐心等待安装完成，时间是比较长的<br>
或者可以选择像网上许多教程说的那样只下载12个包，这个我就不这么做了<br>
<img src="http://evoupsight.com/images/evoup/android_cdt_ndk/03.png" alt="Alt text" /></p>

<h4>加入环境变量(可选，这样可以直接在cmd里进行cygwin.bat的操作)</h4>

<p>完成之后，需要把cygwin加入环境变量,我这里是安装在了c:/cygwin64,把c:/cygwin64/bin加入环境变量PATH<br>
<img src="http://evoupsight.com/images/evoup/android_cdt_ndk/04.png" alt="Alt text" /></p>

<h4>测试cygwin环境</h4>

<p>运行c:/cygwin64/Cygwin.bat,输入</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>cygcheck -c cygwin
</span><span class='line'>make -v
</span><span class='line'>gcc -v
</span></code></pre></td></tr></table></div></figure>


<p>如果显示ok就可以了，之前的报错cygheap base mismatch detected可以先忽略。<br>
<img src="http://evoupsight.com/images/evoup/android_cdt_ndk/05.png" alt="Alt text" /></p>

<h4>设置NDK路径：</h4>

<p>接下来在windows系统环境变量ndk中添加NDK的路径,刚刚我把NDK解压到C:\android\android-ndk-r9d-windows-x86_64\android-ndk-r9d<br>
然后在环境变量ndk加上它在cygwin shell里的对应路径/cygdrive/c/android/android-ndk-r9d-windows-x86_64/android-ndk-r9d<br>
<img src="http://evoupsight.com/images/evoup/android_cdt_ndk/06.png" alt="Alt text" /></p>

<p>编辑完成后，进入cygwin.bat输入<br></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> <span class="nv">$ndk</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以看到如下结果<br>
<img src="http://evoupsight.com/images/evoup/android_cdt_ndk/07.png" alt="Alt text" /></p>

<h4>测试NDK，编译一个例子</h4>

<p>例子可以在$ndk/sample/hello-jni中找到<br>
进入cygwin.bat中输入编译指令</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> <span class="nv">$ndk</span>/sample/hello-jni
</span><span class='line'><span class="nv">$ndk</span>/ndk-build
</span></code></pre></td></tr></table></div></figure>


<p>一会儿就能编译完成，见下<br>
<img src="http://evoupsight.com/images/evoup/android_cdt_ndk/08.png" alt="Alt text" /></p>

<p>进入libs目录查看结果,观察是否生成了so文件，如果生成则说明你的NDK已经运行正常了。<br></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>libs/armeabi/
</span><span class='line'><span class="nv">$ </span>ls
</span><span class='line'>gdb.setup  gdbserver  libhello-jni.so
</span></code></pre></td></tr></table></div></figure>


<h4>在Eclipse中完成代码调用</h4>

<p>接下来进入Eclipse，测试该项目,创建项目路径为C:\android\project\HelloJni<br>
在Create Android Project时勾选“Create project from existing source”，Root Directory中填C:\android\android-ndk-r9d-windows-x86_64\android-ndk-r9d\samples\hello-jni,如下<br>
<img src="http://evoupsight.com/images/evoup/android_cdt_ndk/09.png" alt="Alt text" /><br>
<img src="http://evoupsight.com/images/evoup/android_cdt_ndk/10.png" alt="Alt text" /><br>
<img src="http://evoupsight.com/images/evoup/android_cdt_ndk/11.png" alt="Alt text" /><br></p>

<p>看到如下字符串就代表NDK的例子运行成功了<br>
<img src="http://evoupsight.com/images/evoup/android_cdt_ndk/12.png" alt="Alt text" /></p>

<p>分析一下调用代码</p>

<figure class='code'><figcaption><span>HelloJni.java </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Copyright (C) 2009 The Android Open Source Project</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span>
</span><span class='line'><span class="cm"> * you may not use this file except in compliance with the License.</span>
</span><span class='line'><span class="cm"> * You may obtain a copy of the License at</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> *      http://www.apache.org/licenses/LICENSE-2.0</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * Unless required by applicable law or agreed to in writing, software</span>
</span><span class='line'><span class="cm"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span>
</span><span class='line'><span class="cm"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
</span><span class='line'><span class="cm"> * See the License for the specific language governing permissions and</span>
</span><span class='line'><span class="cm"> * limitations under the License.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">hellojni</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.app.Activity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.TextView</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.Bundle</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloJni</span> <span class="kd">extends</span> <span class="n">Activity</span> <span class="c1">//HelloJni继承自活动对象事件调度类</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="cm">/** Called when the activity is first created. */</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="c1">//重写onCreate方法</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="cm">/* Create a TextView and set its content.</span>
</span><span class='line'><span class="cm">         * the text is retrieved by calling a native</span>
</span><span class='line'><span class="cm">         * function.</span>
</span><span class='line'><span class="cm">         */</span>
</span><span class='line'>        <span class="n">TextView</span>  <span class="n">tv</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TextView</span><span class="o">(</span><span class="k">this</span><span class="o">);</span> <span class="c1">//创建一个文字view</span>
</span><span class='line'>        <span class="n">tv</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span> <span class="n">stringFromJNI</span><span class="o">()</span> <span class="o">);</span> <span class="c1">//调用自定义方法stringFromJNI</span>
</span><span class='line'>        <span class="n">setContentView</span><span class="o">(</span><span class="n">tv</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* A native method that is implemented by the</span>
</span><span class='line'><span class="cm">     * &#39;hello-jni&#39; native library, which is packaged</span>
</span><span class='line'><span class="cm">     * with this application.</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">native</span> <span class="n">String</span>  <span class="nf">stringFromJNI</span><span class="o">();</span> <span class="c1">//有native代表是c++的代码，这里仅仅是声明</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* This is another native method declaration that is *not*</span>
</span><span class='line'><span class="cm">     * implemented by &#39;hello-jni&#39;. This is simply to show that</span>
</span><span class='line'><span class="cm">     * you can declare as many native methods in your Java code</span>
</span><span class='line'><span class="cm">     * as you want, their implementation is searched in the</span>
</span><span class='line'><span class="cm">     * currently loaded native libraries only the first time</span>
</span><span class='line'><span class="cm">     * you call them.</span>
</span><span class='line'><span class="cm">     *</span>
</span><span class='line'><span class="cm">     * Trying to call this function will result in a</span>
</span><span class='line'><span class="cm">     * java.lang.UnsatisfiedLinkError exception !</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">native</span> <span class="n">String</span>  <span class="nf">unimplementedStringFromJNI</span><span class="o">();</span> <span class="c1">//同样是C++的代码</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* this is used to load the &#39;hello-jni&#39; library on application</span>
</span><span class='line'><span class="cm">     * startup. The library has already been unpacked into</span>
</span><span class='line'><span class="cm">     * /data/data/com.example.hellojni/lib/libhello-jni.so at</span>
</span><span class='line'><span class="cm">     * installation time by the package manager.</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">static</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">loadLibrary</span><span class="o">(</span><span class="s">&quot;hello-jni&quot;</span><span class="o">);</span> <span class="c1">//调用刚才ndk生成的hello-jni.so</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>C++的代码暂时就不看了，一步一步来，我们还没装cdt，不急着搞清楚，有兴趣的到文章最后去看链接</p>

<h3>什么是CDT</h3>

<blockquote><p>Eclipse CDT是 Eclipse 插件，它将把 Eclipse 转换为功能强大的 C/C++ IDE。它被设计为将 Java 开发人员喜爱的许多 Eclipse 优秀功能提供给 C/C++ 开发人员，例如项目管理、集成调试、类向导、自动构建、语法着色和代码完成。当 Eclipse 被用作 Java IDE 时，它将利用 JDK 并与之集成。同样地，CDT 将利用标准的 C/C++ 工具并与之集成，例如 g++、make 和 GDB。这使得 CDT 在 Linux 中变得非常流行，这些工具都可在 Linux 中使用并用于大多数 C++ 开发。可以在 Windows 上设置 CDT 以使用相同的工具。目前还在努力将 CDT 与 Microsoft 的 C++ 工具结合使用，以使 CDT 对 Windows C++ 开发人员更有吸引力。总之有了cdt，可以在一个工程里，同时开发C/C++的native代码的java外壳，并且2种代码能够同时编译。</p></blockquote>

<h3>在Eclipse编辑器中集成CDT</h3>

<p>首先在此下载<a href="http://www.eclipse.org/cdt/downloads.php">http://www.eclipse.org/cdt/downloads.php</a><br>
直接下载cdt-master-x.x.x.zip的就可以了，我的是Eclipse版本为Kepler，可以下载以下版本<br>
<a href="http://www.eclipse.org/downloads/download.php?file=/tools/cdt/releases/kepler/sr2/cdt-master-8.3.0.zip">http://www.eclipse.org/downloads/download.php?file=/tools/cdt/releases/kepler/sr2/cdt-master-8.3.0.zip</a></p>

<p><img src="http://evoupsight.com/images/evoup/android_cdt_ndk/13.png" alt="Alt text" /></p>

<p>然后通过Eclipse &ndash;> Help &ndash;> Install New Software &ndash;> add &ndash;> Achive,选择下载的zip文件</p>

<p><img src="http://evoupsight.com/images/evoup/android_cdt_ndk/14.png" alt="Alt text" /></p>

<p>等待安装完成<br>
<img src="http://evoupsight.com/images/evoup/android_cdt_ndk/15.png" alt="Alt text" /></p>

<p>安装完成后如果在Eclipse中可以创建C++项目证明安装完成<br>
<img src="http://evoupsight.com/images/evoup/android_cdt_ndk/16.png" alt="Alt text" /></p>

<h3>安装Sequoyah插件（事实证明，kepler+ndk9已经无须这个插件了）</h3>

<p><del> 官网地址 </del> <br>
<del> <a href="https://projects.eclipse.org/projects/tools.sequoyah">https://projects.eclipse.org/projects/tools.sequoyah</a> </del></p>

<p><del> 这个地址其实已经作废了,正确的连接如下 </del> <br>
<del> <a href="http://www.mirrorservice.org/sites/download.eclipse.org/eclipseMirror/sequoyah/updates/2.0/">http://www.mirrorservice.org/sites/download.eclipse.org/eclipseMirror/sequoyah/updates/2.0/</a> </del> <br>
<del> Eclipse-Help-Install New Software-Add,在Location里输入上面的地址，name就指定为sequoyah</del> <br>
<img src="http://evoupsight.com/images/evoup/android_cdt_ndk/17.png" alt="Alt text" />
<img src="http://evoupsight.com/images/evoup/android_cdt_ndk/18.png" alt="Alt text" /></p>

<p><del> 然后取消下面的Group By Item，之后选择Select All，按下Next安装（没有研究下去，发现这个要求的eclipse版本为3.7以下，我的kepler为4.3，不得以暂时放弃） </del></p>

<h3>JNI编译环境配置</h3>

<p>还是打开HelloJni这个项目，现在转换为C/C++的native的代码<br>
&ldquo;Eclipse->File->New->Other&rdquo;,选择&#8221;C/C++&ldquo;下的&#8221;Convert to a c/C++ Project(Add C/C++ Nature)&rdquo;,然后点击&#8221;Next&#8221;<br>
<img src="http://evoupsight.com/images/evoup/android_cdt_ndk/19.png" alt="Alt text" /></p>

<p>然后在Makefile project中选择Cygwin GCC,点击Finish<br>
<img src="http://evoupsight.com/images/evoup/android_cdt_ndk/20.png" alt="Alt text" /></p>

<p>右键项目的Properties，在&#8221;C/C++ Build&#8221;中取消默认的&#8221; Use default build command &ldquo;的打勾，在Build Command中输入对应bash加空格加ndk-build的路径，我这里是C:\android\android-ndk-r9d-windows-x86_64\android-ndk-r9d\ndk-build<br></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bash C:<span class="se">\a</span>ndroid<span class="se">\a</span>ndroid-ndk-r9d-windows-x86_64<span class="se">\a</span>ndroid-ndk-r9d<span class="se">\n</span>dk-build
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://evoupsight.com/images/evoup/android_cdt_ndk/21.png" alt="Alt text" /></p>

<p>在&#8221;C/C++ General&#8221;的Paths and Symbols中：在Includes下add新的GNU C依赖路径,根据自己的avd（andriod virtual device）的版本设置对应的头文件，我这里是android17的，则C:\android\android-ndk-r9d-windows-x86_64\android-ndk-r9d\platforms\android-17\arch-arm\usr\include,其他项目可以安装实际环境酌情调整依赖头文件的版本<br>
<img src="http://evoupsight.com/images/evoup/android_cdt_ndk/22.png" alt="Alt text" /></p>

<p>验证：
将“/HelloJni/jni/hello-jni.c”中的字符串“Hello from JNI !”如改为“Hello JNI from test!”，运行后在模拟器上输出的字符串改变即说明配置成功。<br>
<img src="http://evoupsight.com/images/evoup/android_cdt_ndk/23.png" alt="Alt text" /></p>

<hr />

<h3>参考文章</h3>

<p>《Android NDK 安装与配置》
<a href="http://my.oschina.net/owen123456/blog/85658">http://my.oschina.net/owen123456/blog/85658</a></p>

<p>《Android: NDK编程入门笔记》
<a href="http://www.cnblogs.com/hibraincol/archive/2011/05/30/2063847.html">http://www.cnblogs.com/hibraincol/archive/2011/05/30/2063847.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用CocoStudio创建骨骼动画（一）]]></title>
    <link href="http://evoupsight.com/blog/2014/03/16/use-cocostudio-create-bone-animation1/"/>
    <updated>2014-03-16T00:28:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/03/16/use-cocostudio-create-bone-animation1</id>
    <content type="html"><![CDATA[<p>需要给哥么介绍怎么倒腾美术使用的美术创作工具CocoStudio（版本1.3）的Animation Editor，所以得先打个头阵研究一番，备忘一下。</p>

<!-- more -->


<p>打开之前我的另一篇《设计2D游戏玩家角色》博客里面提供的PSD源文件，然后开工。明确要怎么分割的部分：<br></p>

<h3>从PSD文件导出部件</h3>

<p>下面给出导出图层的规则，有+的代表有2个图层，复制的时候均采用ctrl+shift+c合并拷贝，再用ctrl+n创建新文件，最后ctrl+c粘帖到新文件上，然后导出为透明png24的方式：</p>

<p>左脚+左脚轮廓线=>左脚<br>
左腿+左腿轮廓线=>左腿<br>
左大腿+左大腿轮廓线=>左大腿<br>
右脚+右脚轮廓线=>右脚<br>
右小腿+右小腿轮廓线=>右小腿<br>
右大腿+右大腿轮廓线=>右大腿<br>
左手整手臂+左手整手臂轮廓线=>左手整手臂<br>
兜裆布=>兜裆布<br>
身体+身体轮廓线=>身体<br>
右手臂+右手臂轮廓线=>右手臂<br>
右手下臂+右手下臂轮廓线=>右手下臂<br>
胸衣=>胸衣<br>
围巾=>围巾<br>
头部+头部轮廓线=头部<br>
眼睛<br>
马尾+马尾轮廓线=>马尾<br>
头发+头发轮廓线=>头发<br>
发箍+发箍轮廓线=》发箍<br></p>

<p>最后得到这些图素<a href="http://pan.baidu.com/s/1bnzlv9X" target=_BLANK>cuted_player.zip</a></p>

<h3>打开CocoStudio操作</h3>

<p>接下来让我们打开CocoStudio开始编辑动画，首先进入Animation Editor<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/01.png" alt="Alt text" /></p>

<p>然后创建新项目，名为player_swordgirl<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/02.png" alt="Alt text" /></p>

<p>在界面右侧的资源窗口右键-“导入”-&ldquo;导入文件&rdquo;<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/03.png" alt="Alt text" /></p>

<p>完成导入<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/04.png" alt="Alt text" /></p>

<p>在主界面上点击创建骨骼，如果再次点击停止创建回到pose mode。我们先创建躯干部份的骨骼。<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/05.png" alt="Alt text" /></p>

<p><img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/06.png" alt="Alt text" /></p>

<p>创建完成之后，把身体的图片赋到该骨骼上，需要注意这里有个bug，就是直接点击骨骼然后把图片拖到右面XX的话，保存项目后，再次打开会发现图片消失了（没想到这个bug1.3还是没修好啊）。
规避这个问题的方法很简单，就是把图片先拖到骨骼旁边，然后右键选择绑定到骨头，这样就不会再消失了。<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/07.png" alt="Alt text" /></p>

<p><img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/08.png" alt="Alt text" /></p>

<p><img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/09.png" alt="Alt text" /></p>

<p>使用平移工具把身体放到骨骼外围，骨骼嘛自然要待在组织里啊
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/10.png" alt="Alt text" /></p>

<p>同样的方法创建出围巾
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/11.png" alt="Alt text" /></p>

<p>下面介绍一下骨骼的父关系，这个很好理解的，比如说身体和头，某种程度上说身体就是主躯干，外围设施（比如四肢、头、尾巴等）都是根据身体来依附上去的，这种依附关系的产生，导致移动身体其他外围设施是会跟着发生位移的，那么就可以称这些外围设施和身体有父关系，它的父关系是身体这块骨骼。
右击围巾选择绑定父关系到前一骨骼（身体所在的那块骨骼）<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/12.png" alt="Alt text" /></p>

<p>然后试着移动身体，你会发现围巾跟着移动了，很神奇不是吗？：）</p>

<p>接下来如法炮制了，我只讲下哪个绑定哪个<br>
头部绑定父关系到围巾<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/13.png" alt="Alt text" /></p>

<p>眼睛绑定父关系到头部，胸衣绑定父关系到头部<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/14.png" alt="Alt text" /></p>

<p>头发绑定父关系到头部<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/15.png" alt="Alt text" /></p>

<p>发箍绑定父关系到头部<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/16.png" alt="Alt text" /></p>

<p>马尾绑定父关系到发箍<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/17.png" alt="Alt text" /></p>

<p>右手臂绑定父关系到身体<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/18.png" alt="Alt text" /></p>

<p>右手下臂绑定父关系到右手臂<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/19.png" alt="Alt text" /></p>

<p>左手臂绑定父关系到身体<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/20.png" alt="Alt text" /></p>

<p>兜裆布绑定父关系到身体<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/21.png" alt="Alt text" /></p>

<p>左大腿绑定父关系到身体<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/22.png" alt="Alt text" /></p>

<p>右大腿绑定父关系到身体<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/23.png" alt="Alt text" /></p>

<p>左小腿绑定父关系到左大腿<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/24.png" alt="Alt text" /></p>

<p>右小腿绑定父关系到右大腿<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/25.png" alt="Alt text" /></p>

<p>左脚绑定父关系到左小腿<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/26.png" alt="Alt text" /></p>

<p>右脚绑定父关系到右小腿<br>
<img src="http://evoupsight.com/images/evoup/cocostudio_bone_animation/27.png" alt="Alt text" /></p>

<p><a href="http://pan.baidu.com/s/1dDIKi1V" target=_BLANK>CocoStudio项目源文件下载</a></p>

<p>下一篇将怎么做骨骼动画</p>

<p>思考：眨眼动画要怎么处理呢？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[设计2D游戏玩家角色]]></title>
    <link href="http://evoupsight.com/blog/2014/03/14/2d-player-charactor-pratice/"/>
    <updated>2014-03-14T23:47:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/03/14/2d-player-charactor-pratice</id>
    <content type="html"><![CDATA[<p>目的，为cocos2d-x的编辑器制作好一个角色，为以后的demo做准备。<br>
最终稿（完成时间2小时+修正1小时，初次尝试，PS）</p>

<!-- more -->


<p><img src="http://evoupsight.com/images/evoup/2dcharactor_cg/01.png" alt="Alt text" /></p>

<p>1.用2b铅笔绘制头部轮廓线，然后用柔边圆压力大小上次，这里的技巧是可以先用魔棒工具选择头部轮廓线图层内部，然后转到头部图层用alt + del填充，接着使用锁定透明色的方法继续用柔边圆压力大小上色，这样叠上去的颜色就不会画到轮廓线外面了。</p>

<p><img src="http://evoupsight.com/images/evoup/2dcharactor_cg/02.png" alt="Alt text" /></p>

<p>2.继续在头部曾上画一层头发轮廓线，然后在后面加一层，按照上面的填充方法如法炮制画出头发</p>

<p><img src="http://evoupsight.com/images/evoup/2dcharactor_cg/03.png" alt="Alt text" /></p>

<p>3.继续画出发箍</p>

<p><img src="http://evoupsight.com/images/evoup/2dcharactor_cg/04.png" alt="Alt text" /></p>

<p>4.马尾，层位于头部以下</p>

<p><img src="http://evoupsight.com/images/evoup/2dcharactor_cg/05.png" alt="Alt text" /></p>

<ol>
<li>围巾</li>
</ol>


<p><img src="http://evoupsight.com/images/evoup/2dcharactor_cg/06.png" alt="Alt text" /></p>

<p>6.身体</p>

<p><img src="http://evoupsight.com/images/evoup/2dcharactor_cg/07.png" alt="Alt text" /></p>

<p>7.胸衣</p>

<p><img src="http://evoupsight.com/images/evoup/2dcharactor_cg/08.png" alt="Alt text" /></p>

<p>8.右手臂，画在最顶层</p>

<p><img src="http://evoupsight.com/images/evoup/2dcharactor_cg/09.png" alt="Alt text" /></p>

<p>9.右手下臂</p>

<p><img src="http://evoupsight.com/images/evoup/2dcharactor_cg/10.png" alt="Alt text" /></p>

<p>10.右大腿，身体后的一层</p>

<p><img src="http://evoupsight.com/images/evoup/2dcharactor_cg/11.png" alt="Alt text" /></p>

<p>11.右小腿</p>

<p><img src="http://evoupsight.com/images/evoup/2dcharactor_cg/12.png" alt="Alt text" /></p>

<p>12.左大腿，放到右大腿下层</p>

<p><img src="http://evoupsight.com/images/evoup/2dcharactor_cg/13.png" alt="Alt text" /></p>

<p>13.右下腿</p>

<p><img src="http://evoupsight.com/images/evoup/2dcharactor_cg/14.png" alt="Alt text" /></p>

<p>14.兜裆布</p>

<p><img src="http://evoupsight.com/images/evoup/2dcharactor_cg/15.png" alt="Alt text" /></p>

<p>15.左手整手臂</p>

<p><img src="http://evoupsight.com/images/evoup/2dcharactor_cg/16.png" alt="Alt text" /></p>

<p>16.到最后还不是最后(哈哈，孙艺真的《共犯》台词嘛)，其实下面才是重要的活啊，线稿太粗了，我们要用钢笔来修正。方法是用钢笔工具去照描，可以用ctrl点一下旁边来起新的路径，全部描绘好后，用以下设置</p>

<p><img src="http://evoupsight.com/images/evoup/2dcharactor_cg/18.png" alt="Alt text" /></p>

<p>然后点击右键->描边路径，可以选压力（我这里没有选），见下：</p>

<p><img src="http://evoupsight.com/images/evoup/2dcharactor_cg/17.png" alt="Alt text" /></p>

<p>就可以得到下面的结果了</p>

<p><img src="http://evoupsight.com/images/evoup/2dcharactor_cg/01.png" alt="Alt text" /></p>

<p>如果觉得路径碍事，可以用ctrl+shift+h来关闭显示，或者点击视图->显示->目标路径。</p>

<p>总结不足：下脚轮廓线其实可以去掉，像素外框线可以在圆润点，我只处理了头发那个图层，可以用第16步骤来修正。</p>

<p><a href="http://pan.baidu.com/s/1hqKFQ1e" target=_BLANK>PS源文件</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[导入nginx日志并采用hive进行统计]]></title>
    <link href="http://evoupsight.com/blog/2014/03/10/import-nginx-log-and-use-hive-to-caculate/"/>
    <updated>2014-03-10T16:07:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/03/10/import-nginx-log-and-use-hive-to-caculate</id>
    <content type="html"><![CDATA[<p>公司的日志本来是存成gzip或bz2格式直接导入到hdfs里去然后用程序直接mr的，速度是比较慢的。领导要求采用hive来计算，而在hive里建textfile表的这种方式，textfile是无法进行并行计算的，而且gzip和bz2做mr的速度是很慢的。所以准备采取先导入hdfs和textfile表，然后再转换为rcfile格式的表的策略。实际试验下来，如果一开始转换为文本或者是lzo格式，而不是采用gzip或bz2的格式的textfile的表，再转换为rcfile的方式会快很多，mr的速度也是比较快的。</p>

<p>下面描述一下过程</p>

<!-- more -->


<p>把全部日志上通过scp等方式传到服务器之后，要做的是先建一个textfile的表</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>create external table nginxlog <span class="o">(</span>ipaddress string, ...更多字段省略<span class="o">)</span> COMMENT <span class="s1">&#39;nginx log&#39;</span> ROW FORMAT DELIMITED FIELDS TERMINATED BY <span class="s1">&#39;,&#39;</span> stored as textfile    location <span class="s1">&#39;/data/log&#39;</span>;
</span></code></pre></td></tr></table></div></figure>


<p>把得到所有nginx日志，然后用lzop先压缩好，然后传到hdfs上去。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>tar xjf server01-20140131.txt.bz2
</span><span class='line'><span class="nv">$ </span>tar xjf server02-20140131.txt.bz2
</span><span class='line'><span class="nv">$ </span>lzop server01-20140131.txt
</span><span class='line'><span class="nv">$ </span>lzop server02-20140131.txt
</span><span class='line'><span class="nv">$ </span>server01-20140131.txt.lzo server02-20140131.txt.lzo
</span><span class='line'><span class="nv">$ </span>/u01/app/hadoop fs -put server01-20140131.txt.lzo /data/log/server01-20140131.txt.lzo
</span><span class='line'><span class="nv">$ </span>/u01/app/hadoop fs -put server01-20140131.txt.lzo /data/log/server02-20140131.txt.lzo
</span><span class='line'><span class="nv">$/</span>u01/app/hadoop/bin/hadoop fs -ls /data/log/
</span><span class='line'>Found 2 items
</span><span class='line'>-rw-r--r--   1 hadoop supergroup  364459530 2014-03-07 18:10 /data/log/server01-20140131.txt.lzo
</span><span class='line'>-rw-r--r--   1 hadoop supergroup  364459530 2014-03-10 13:31 /data/log/server02-20140201.txt.lzo
</span></code></pre></td></tr></table></div></figure>


<p>然后马上就可以查询了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>hive&gt; <span class="k">select </span>count<span class="o">(</span>*<span class="o">)</span> from nginxlog;
</span><span class='line'>Total MapReduce <span class="nb">jobs</span> <span class="o">=</span> 1
</span><span class='line'>Launching Job 1 out of 1
</span><span class='line'>Number of reduce tasks determined at compile <span class="nb">time</span>: 1
</span><span class='line'>In order to change the average load <span class="k">for </span>a reducer <span class="o">(</span>in bytes<span class="o">)</span>:
</span><span class='line'>  <span class="nb">set </span>hive.exec.reducers.bytes.per.reducer<span class="o">=</span>&lt;number&gt;
</span><span class='line'>In order to limit the maximum number of reducers:
</span><span class='line'>  <span class="nb">set </span>hive.exec.reducers.max<span class="o">=</span>&lt;number&gt;
</span><span class='line'>In order to <span class="nb">set </span>a constant number of reducers:
</span><span class='line'>  <span class="nb">set </span>mapred.reduce.tasks<span class="o">=</span>&lt;number&gt;
</span><span class='line'>Starting <span class="nv">Job</span> <span class="o">=</span> job_201403101051_0004, Tracking <span class="nv">URL</span> <span class="o">=</span> http://mdn2.net:50030/jobdetails.jsp?jobid<span class="o">=</span>job_201403101051_0004
</span><span class='line'>Kill <span class="nv">Command</span> <span class="o">=</span> /u01/app/hadoop/bin/../bin/hadoop job  -Dmapred.job.tracker<span class="o">=</span>mdn2.net:9025 -kill job_201403101051_0004
</span><span class='line'>2014-03-10 14:17:41,179 Stage-1 <span class="nv">map</span> <span class="o">=</span> 0%,  <span class="nv">reduce</span> <span class="o">=</span> 0%
</span><span class='line'>2014-03-10 14:18:20,815 Stage-1 <span class="nv">map</span> <span class="o">=</span> 50%,  <span class="nv">reduce</span> <span class="o">=</span> 0%
</span><span class='line'>2014-03-10 14:18:32,927 Stage-1 <span class="nv">map</span> <span class="o">=</span> 100%,  <span class="nv">reduce</span> <span class="o">=</span> 0%
</span><span class='line'>2014-03-10 14:18:38,971 Stage-1 <span class="nv">map</span> <span class="o">=</span> 100%,  <span class="nv">reduce</span> <span class="o">=</span> 17%
</span><span class='line'>2014-03-10 14:18:41,991 Stage-1 <span class="nv">map</span> <span class="o">=</span> 100%,  <span class="nv">reduce</span> <span class="o">=</span> 100%
</span><span class='line'>Ended <span class="nv">Job</span> <span class="o">=</span> job_201403101051_0004
</span><span class='line'>OK
</span><span class='line'>2492916
</span><span class='line'>Time taken: 75.321 seconds
</span></code></pre></td></tr></table></div></figure>


<p>这么做也是可以使用hive的，但是速度还是比较慢。于是可以再创建一个rcfile格式的表，然后再查询</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bin/hive&gt; create external table nginxlog2 <span class="o">(</span>ipaddress string, ...,更多字段<span class="o">)</span> COMMENT <span class="s1">&#39;nginx log rcfile format&#39;</span> ROW FORMAT DELIMITED FIELDS TERMINATED BY <span class="s1">&#39;,&#39;</span> stored as RCFile    location <span class="s1">&#39;/data/log2&#39;</span>;
</span></code></pre></td></tr></table></div></figure>


<p>然后用</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>hive&gt; SET hive.exec.compress.output<span class="o">=</span><span class="nb">true</span>;
</span><span class='line'>hive&gt; SET io.rcfile.compression.type<span class="o">=</span>BLOCK;
</span><span class='line'>hive&gt; insert overwrite table nginxlog2 <span class="k">select</span> * from nginxlog;
</span><span class='line'>Total MapReduce <span class="nb">jobs</span> <span class="o">=</span> 2
</span><span class='line'>Launching Job 1 out of 2
</span><span class='line'>Number of reduce tasks is <span class="nb">set </span>to 0 since there<span class="err">&#39;</span>s no reduce operator
</span><span class='line'>Starting <span class="nv">Job</span> <span class="o">=</span> job_201403101051_0007, Tracking <span class="nv">URL</span> <span class="o">=</span> http://mdn2.net:50030/jobdetails.jsp?jobid<span class="o">=</span>job_201403101051_0007
</span><span class='line'>Kill <span class="nv">Command</span> <span class="o">=</span> /u01/app/hadoop/bin/../bin/hadoop job  -Dmapred.job.tracker<span class="o">=</span>mdn2.net:9025 -kill job_201403101051_0007
</span><span class='line'>2014-03-10 15:20:20,959 Stage-1 <span class="nv">map</span> <span class="o">=</span> 0%,  <span class="nv">reduce</span> <span class="o">=</span> 0%
</span><span class='line'>2014-03-10 15:21:21,267 Stage-1 <span class="nv">map</span> <span class="o">=</span> 0%,  <span class="nv">reduce</span> <span class="o">=</span> 0%
</span><span class='line'>2014-03-10 15:22:21,627 Stage-1 <span class="nv">map</span> <span class="o">=</span> 0%,  <span class="nv">reduce</span> <span class="o">=</span> 0%
</span><span class='line'>2014-03-10 15:23:22,320 Stage-1 <span class="nv">map</span> <span class="o">=</span> 0%,  <span class="nv">reduce</span> <span class="o">=</span> 0%
</span><span class='line'>2014-03-10 15:23:36,542 Stage-1 <span class="nv">map</span> <span class="o">=</span> 100%,  <span class="nv">reduce</span> <span class="o">=</span> 0%
</span><span class='line'>2014-03-10 15:23:42,665 Stage-1 <span class="nv">map</span> <span class="o">=</span> 100%,  <span class="nv">reduce</span> <span class="o">=</span> 100%
</span><span class='line'>Ended <span class="nv">Job</span> <span class="o">=</span> job_201403101051_0007
</span><span class='line'>Ended <span class="nv">Job</span> <span class="o">=</span> -1308159129, job is filtered out <span class="o">(</span>removed at runtime<span class="o">)</span>.
</span><span class='line'>Moving data to: hdfs://mdn2.net:9024/tmp/hive-hadoop/hive_2014-03-10_15-20-15_076_2561493179927538497/-ext-10000
</span><span class='line'>Loading data to table default.nginxlog2
</span><span class='line'>Deleted hdfs://mdn2.net:9024/data/log2
</span><span class='line'>Table default.nginxlog2 stats: <span class="o">[</span>num_partitions: 0, num_files: 0, num_rows: 0, total_size: 0<span class="o">]</span>
</span><span class='line'>2492916 Rows loaded to nginxlog2
</span><span class='line'>OK
</span><span class='line'>Time taken: 209.088 seconds
</span></code></pre></td></tr></table></div></figure>


<p>然后再次select，对比一下时间</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>hive&gt; <span class="k">select </span>count<span class="o">(</span>*<span class="o">)</span> from nginxlog2;
</span><span class='line'>Total MapReduce <span class="nb">jobs</span> <span class="o">=</span> 1
</span><span class='line'>Launching Job 1 out of 1
</span><span class='line'>Number of reduce tasks determined at compile <span class="nb">time</span>: 1
</span><span class='line'>In order to change the average load <span class="k">for </span>a reducer <span class="o">(</span>in bytes<span class="o">)</span>:
</span><span class='line'>  <span class="nb">set </span>hive.exec.reducers.bytes.per.reducer<span class="o">=</span>&lt;number&gt;
</span><span class='line'>In order to limit the maximum number of reducers:
</span><span class='line'>  <span class="nb">set </span>hive.exec.reducers.max<span class="o">=</span>&lt;number&gt;
</span><span class='line'>In order to <span class="nb">set </span>a constant number of reducers:
</span><span class='line'>  <span class="nb">set </span>mapred.reduce.tasks<span class="o">=</span>&lt;number&gt;
</span><span class='line'>Starting <span class="nv">Job</span> <span class="o">=</span> job_201403101051_0008, Tracking <span class="nv">URL</span> <span class="o">=</span> http://mdn2.net:50030/jobdetails.jsp?jobid<span class="o">=</span>job_201403101051_0008
</span><span class='line'>Kill <span class="nv">Command</span> <span class="o">=</span> /u01/app/hadoop/bin/../bin/hadoop job  -Dmapred.job.tracker<span class="o">=</span>mdn2.net:9025 -kill job_201403101051_0008
</span><span class='line'>2014-03-10 15:26:21,984 Stage-1 <span class="nv">map</span> <span class="o">=</span> 0%,  <span class="nv">reduce</span> <span class="o">=</span> 0%
</span><span class='line'>2014-03-10 15:26:31,031 Stage-1 <span class="nv">map</span> <span class="o">=</span> 33%,  <span class="nv">reduce</span> <span class="o">=</span> 0%
</span><span class='line'>2014-03-10 15:26:43,107 Stage-1 <span class="nv">map</span> <span class="o">=</span> 67%,  <span class="nv">reduce</span> <span class="o">=</span> 0%
</span><span class='line'>2014-03-10 15:26:49,140 Stage-1 <span class="nv">map</span> <span class="o">=</span> 67%,  <span class="nv">reduce</span> <span class="o">=</span> 17%
</span><span class='line'>2014-03-10 15:26:52,153 Stage-1 <span class="nv">map</span> <span class="o">=</span> 100%,  <span class="nv">reduce</span> <span class="o">=</span> 22%
</span><span class='line'>2014-03-10 15:27:04,225 Stage-1 <span class="nv">map</span> <span class="o">=</span> 100%,  <span class="nv">reduce</span> <span class="o">=</span> 100%
</span><span class='line'>Ended <span class="nv">Job</span> <span class="o">=</span> job_201403101051_0008
</span><span class='line'>OK
</span><span class='line'>2492916
</span><span class='line'>Time taken: 55.656 seconds
</span></code></pre></td></tr></table></div></figure>


<p>我这里是2个节点， 55.656s，相比textfile的75.321s，rcfile的有20秒的优势，当然并行计算的节点越多，时间就越省。</p>

<p>这里要补充一下：不通过本地导入的方式直接导入rcfile的原因，是因为textfile格式才支持从本地导入，sequencefile和rcfile均不支持，所以只能先搞一个表再复制。如果用textfile加gzip或bz2的表再复制到rcfile的表，时间会很长；而用textfile+lzo的表再复制到rcfile的表，时间比较短。lzo相对gzip或bz2压缩速度快但是相对压缩比没有优势，然而再转为rcfile格式mr会很快，这样hive查询就很快。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[centos下hadoop0.20的LZO压缩支持]]></title>
    <link href="http://evoupsight.com/blog/2014/03/07/centos-hadoop0-dot-20-lzo-support/"/>
    <updated>2014-03-07T11:00:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/03/07/centos-hadoop0-dot-20-lzo-support</id>
    <content type="html"><![CDATA[<h3>首先安装lzo库</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>wget http://www.oberhumer.com/opensource/lzo/download/lzo-2.04.tar.gz
</span><span class='line'>tar xzf lzo-2.04.tar.gz
</span><span class='line'><span class="nb">cd </span>lzo-2.04
</span><span class='line'>./configure --enable-shared
</span><span class='line'>make
</span><span class='line'>sudo make install
</span></code></pre></td></tr></table></div></figure>


<p>安装完成后拷贝/usr/local/lib目录下的lzo库文件到/usr/lib(32位平台)或者/usr/lib64(64位平台)</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo cp /usr/local/lib/liblzo2* /usr/lib
</span></code></pre></td></tr></table></div></figure>


<p>ps：应该是这些文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>liblzo2.a
</span><span class='line'>liblzo2.la
</span><span class='line'>liblzo2.so
</span><span class='line'>liblzo2.so.2
</span><span class='line'>liblzo2.so.2.0.0
</span></code></pre></td></tr></table></div></figure>


<p>在/etc/ld.so.conf.d/目录下新建lzo.conf文件，写入lzo库文件的路径/usr/local/lib，然后运行/sbin/ldconfig -v，使配置生效。</p>

<h3>然后安装hadoop-LZO</h3>

<p>我这里是hadoop0.20版本，就下kevinweil的版本
git clone <a href="https://github.com/kevinweil/hadoop-lzo">https://github.com/kevinweil/hadoop-lzo</a></p>

<p>然后安装ant
/etc/profile中</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">ANT_HOME</span><span class="o">=</span>/home/hadoop/apache-ant-1.9.3
</span><span class='line'><span class="nv">PATH</span><span class="o">=</span><span class="nv">$ANT_HOME</span>/bin:<span class="nv">$PATH</span>
</span><span class='line'><span class="nb">export </span>PATH
</span></code></pre></td></tr></table></div></figure>


<p>然后source /etc/profile</p>

<p>然后指定好CFLAGS和CXXFLAGS开始编译</p>

<h4>32位os</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">CFLAGS</span><span class="o">=</span>-m32
</span><span class='line'><span class="nb">export </span><span class="nv">CXXFLAGS</span><span class="o">=</span>-m32
</span><span class='line'>ant compile-native tar
</span></code></pre></td></tr></table></div></figure>


<h4>64位os</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">CFLAGS</span><span class="o">=</span>-m64
</span><span class='line'><span class="nb">export </span><span class="nv">CXXFLAGS</span><span class="o">=</span>-m64
</span><span class='line'>ant compile-native tar
</span></code></pre></td></tr></table></div></figure>


<p>等待编译完成</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>tar:
</span><span class='line'>      <span class="o">[</span>tar<span class="o">]</span> Building tar: /home/hadoop/project/hadoop-lzo/build/hadoop-lzo-0.4.15.tar.gz
</span><span class='line'>
</span><span class='line'>BUILD SUCCESSFUL
</span><span class='line'>Total <span class="nb">time</span>: 23 seconds
</span></code></pre></td></tr></table></div></figure>


<p>然后把本地库和jar包拷贝到hadoop的目录下，并分发到各节点</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd </span>build
</span><span class='line'>cp hadoop-lzo-0.4.15.jar /u01/app/hadoop/lib
</span><span class='line'>cp -r native/Linux-i386-32/* /u01/app/hadoop/lib/native/Linux-i386-32/
</span><span class='line'><span class="c">#如果是64位应该是Linux-amd64-64</span>
</span></code></pre></td></tr></table></div></figure>


<h3>安装shell工具lzop</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wget http://www.lzop.org/download/lzop-1.03.tar.gz
</span><span class='line'>./configure
</span><span class='line'>make
</span><span class='line'>sudo make install
</span></code></pre></td></tr></table></div></figure>


<p>使用</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#压缩</span>
</span><span class='line'>lzop test.log
</span><span class='line'><span class="c">#查看解压内容</span>
</span><span class='line'>lzop -cd test.log.lzo | less
</span><span class='line'><span class="c">#解压</span>
</span><span class='line'>lzop -x test.log.lzo
</span></code></pre></td></tr></table></div></figure>


<h3>配置hadoop的core-site.xml和mapred-site.xml</h3>

<p>core-site.xml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;property&gt;
</span><span class='line'>        &lt;name&gt;io.compression.codecs&lt;/name&gt; &lt;value&gt;org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.BZip2Codec,com.hadoop.compression.lzo.LzoCodec,com.hadoop.compression.lzo.LzopCodec&lt;/value&gt;
</span><span class='line'>        &lt;!-- 配置 Hadoop 压缩包 --&gt;
</span><span class='line'>&lt;/property&gt;
</span><span class='line'>&lt;property&gt;
</span><span class='line'>        &lt;name&gt;io.compression.codec.lzo.class&lt;/name&gt;
</span><span class='line'>        &lt;value&gt;com.hadoop.compression.lzo.LzoCodec&lt;/value&gt;
</span><span class='line'>&lt;/property&gt;
</span></code></pre></td></tr></table></div></figure>


<p>mapred-site.xml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;property&gt;
</span><span class='line'>      &lt;name&gt;mapred.compress.map.output&lt;/name&gt;
</span><span class='line'>      &lt;value&gt;true&lt;/value&gt;
</span><span class='line'>      &lt;!-- map 和 reduce 输出中间文件默认开启压缩 --&gt;
</span><span class='line'>  &lt;/property&gt;
</span><span class='line'>  &lt;property&gt;
</span><span class='line'>         &lt;name&gt;mapred.map.output.compression.codec&lt;/name&gt;
</span><span class='line'>         &lt;value&gt;com.hadoop.compression.lzo.LzoCodec&lt;/value&gt;
</span><span class='line'>  &lt;/property&gt;
</span><span class='line'>  &lt;property&gt;
</span><span class='line'>         &lt;name&gt;mapred.child.env&lt;/name&gt;
</span><span class='line'>         &lt;value&gt;LD_LIBRARY_PATH<span class="o">=</span>/u01/app/hadoop/lib/native/Linux-i386-32&lt;/value&gt;
</span><span class='line'> &lt;/property&gt;
</span></code></pre></td></tr></table></div></figure>


<h3>启动hadoop并测试lzo</h3>

<p>用lzop压缩一个文件，然后上传到hdfs</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bin/start-all.sh
</span><span class='line'>lzop test.txt
</span><span class='line'>/u01/app/hadoop/bin/hadoop -put test.txt.lzo /testlzo/test.txt.lzo
</span></code></pre></td></tr></table></div></figure>


<p>然后通过创建lzo索引来测试lzo是否已经支持</p>

<p>在hadoop的conf的hadoop-env.sh中指定好HADOOP_CLASSPATH,然后就不用再</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bin/hadoop jar lib/hadoop-lzo-0.4.15.jar com.hadoop.compression.lzo.LzoIndexer /testlzo/test.txt.lzo
</span></code></pre></td></tr></table></div></figure>


<p>而直接使用</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bin/hadoop com.hadoop.compression.lzo.LzoIndexer /testlzo/test.log.lzo
</span></code></pre></td></tr></table></div></figure>


<p>也可以使用分布式版本</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bin/hadoop com.hadoop.compression.lzo.DistributedLzoIndexer /testlzo/test.log.lzo
</span></code></pre></td></tr></table></div></figure>


<p>报错</p>

<blockquote><p>14/03/06 18:37:14 ERROR lzo.GPLNativeCodeLoader: Could not load native gpl library
java.lang.UnsatisfiedLinkError: no gplcompression in java.library.path</p>

<pre><code>   at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1738)
   at java.lang.Runtime.loadLibrary0(Runtime.java:823)
   at java.lang.System.loadLibrary(System.java:1028)
   at com.hadoop.compression.lzo.GPLNativeCodeLoader.&lt;clinit&gt;(GPLNativeCodeLoader.java:32)
   at com.hadoop.compression.lzo.LzoCodec.&lt;clinit&gt;(LzoCodec.java:71)
   at com.hadoop.compression.lzo.LzoIndexer.&lt;init&gt;(LzoIndexer.java:36)
   at com.hadoop.compression.lzo.LzoIndexer.main(LzoIndexer.java:134)
</code></pre>

<p>14/03/06 18:37:14 ERROR lzo.LzoCodec: Cannot load native-lzo without native-hadoop
14/03/06 18:37:14 INFO lzo.LzoIndexer: [INDEX] LZO Indexing file /testlzo/x.log.lzo, size 0.00 GB&hellip;
Exception in thread &ldquo;main&rdquo; java.lang.RuntimeException: native-lzo library not available</p>

<pre><code>   at com.hadoop.compression.lzo.LzopCodec.createDecompressor(LzopCodec.java:104)
   at com.hadoop.compression.lzo.LzoIndex.createIndex(LzoIndex.java:229)
   at com.hadoop.compression.lzo.LzoIndexer.indexSingleFile(LzoIndexer.java:117)
   at com.hadoop.compression.lzo.LzoIndexer.indexInternal(LzoIndexer.java:98)
   at com.hadoop.compression.lzo.LzoIndexer.index(LzoIndexer.java:52)
   at com.hadoop.compression.lzo.LzoIndexer.main(LzoIndexer.java:137)
</code></pre></blockquote>

<p>看似是GPLNativeCodeLoader没有装，其实是路径不对</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="o">[</span>hadoop@mdn2 lib<span class="o">]</span><span class="nv">$ls</span> -la /u01/app/hadoop/lib/native/Linux-i386-32/lib
</span><span class='line'>total 184
</span><span class='line'>drwxrwxr-x 2 hadoop hadoop  4096 Mar  6 14:10 .
</span><span class='line'>drwxrwxrwx 5 hadoop hadoop  4096 Mar  7 10:52 ..
</span><span class='line'>-rw-r--r-- 1 hadoop hadoop 76502 Mar  6 14:10 libgplcompression.a
</span><span class='line'>-rw-rw-r-- 1 hadoop hadoop  1128 Mar  6 14:10 libgplcompression.la
</span><span class='line'>lrwxrwxrwx 1 hadoop hadoop    26 Mar  6 14:10 libgplcompression.so -&gt; libgplcompression.so.0.0.0
</span><span class='line'>lrwxrwxrwx 1 hadoop hadoop    26 Mar  6 14:10 libgplcompression.so.0 -&gt; libgplcompression.so.0.0.0
</span><span class='line'>-rwxrwxr-x 1 hadoop hadoop 59281 Mar  6 14:10 libgplcompression.so.0.0.0
</span></code></pre></td></tr></table></div></figure>


<p>其实只要把这几个库复制到上级目录即可</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>cp /u01/app/hadoop/lib/native/Linux-i386-32/lib/* /u01/app/hadoop/lib/native/Linux-i386-32/
</span></code></pre></td></tr></table></div></figure>


<p>然后</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="o">[</span>hadoop@mdn2 hadoop<span class="o">]</span><span class="nv">$bin</span>/hadoop com.hadoop.compression.lzo.LzoIndexer /testlzo/x.log.lzo
</span><span class='line'>14/03/07 10:52:33 INFO lzo.GPLNativeCodeLoader: Loaded native gpl library
</span><span class='line'>14/03/07 10:52:33 INFO lzo.LzoCodec: Successfully loaded &amp; initialized native-lzo library <span class="o">[</span>hadoop-lzo rev 6bb1b7f8b9044d8df9b4d2b6641db7658aab3cf8<span class="o">]</span>
</span><span class='line'>14/03/07 10:52:34 INFO lzo.LzoIndexer: <span class="o">[</span>INDEX<span class="o">]</span> LZO Indexing file /testlzo/x.log.lzo, size 0.00 GB...
</span><span class='line'>14/03/07 10:52:34 INFO lzo.LzoIndexer: Completed LZO Indexing in 0.15 seconds <span class="o">(</span>0.00 MB/s<span class="o">)</span>.  Index size is 0.01 KB.
</span></code></pre></td></tr></table></div></figure>


<p>终于成功。</p>

<p>参考：</p>

<p>《hadoop安装lzo》
<a href="http://blog.csdn.net/wanglinzi/article/details/12318743">http://blog.csdn.net/wanglinzi/article/details/12318743</a></p>

<p>《lzo安装说明(2)》
<a href="http://www.350351.com/jiagoucunchu/Hadoop/83863_2.html">http://www.350351.com/jiagoucunchu/Hadoop/83863_2.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hadoop报错：Incompatible namespaceIDs]]></title>
    <link href="http://evoupsight.com/blog/2014/02/24/hadoop-error-incompatible-namespaceids/"/>
    <updated>2014-02-24T17:08:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/02/24/hadoop-error-incompatible-namespaceids</id>
    <content type="html"><![CDATA[<p>今天在修改hadoop主机名重新格式化namenode之后，重新启动hadoop，发现datanode无法启动起来。</p>

<p>报错：HADOOP报错<code>Incompatible namespaceIDs</code></p>

<p>查看报告发现没有启动一个datanode</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$/</span>u01/app/hadoop/bin/hadoop dfsadmin -report
</span><span class='line'>Configured Capacity: 0 <span class="o">(</span>0 KB<span class="o">)</span>
</span><span class='line'>Present Capacity: 0 <span class="o">(</span>0 KB<span class="o">)</span>
</span><span class='line'>DFS Remaining: 0 <span class="o">(</span>0 KB<span class="o">)</span>
</span><span class='line'>DFS Used: 0 <span class="o">(</span>0 KB<span class="o">)</span>
</span><span class='line'>DFS Used%: �%
</span><span class='line'>Under replicated blocks: 0
</span><span class='line'>Blocks with corrupt replicas: 0
</span><span class='line'>Missing blocks: 0
</span><span class='line'>
</span><span class='line'>-------------------------------------------------
</span><span class='line'>Datanodes available: 0 <span class="o">(</span>0 total, 0 dead<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>原来是要求datanode的VERSION文件和namenode的要一致</p>

<p>于是到namenode上看文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="o">[</span>hadoop@mdn2 current<span class="o">]</span><span class="nv">$more</span> /u01/app/hadoopTmp/dfs/name/current/VERSION
</span><span class='line'><span class="c">#Mon Feb 24 16:48:12 CST 2014</span>
</span><span class='line'><span class="nv">namespaceID</span><span class="o">=</span>1235115105
</span><span class='line'><span class="nv">cTime</span><span class="o">=</span>0
</span><span class='line'><span class="nv">storageType</span><span class="o">=</span>NAME_NODE
</span><span class='line'><span class="nv">layoutVersion</span><span class="o">=</span>-31
</span></code></pre></td></tr></table></div></figure>


<p>namespaceID为1235115105</p>

<p>到datanode里查看发现不存在</p>

<h3>解决方法两种任选其一：</h3>

<p>1）在datanode的&lt;dfs.data.dir>/current/VERSION中指定一个一模一样的namespaceID=1235115105，然后重启datanode</p>

<p>2）在格式化namenode的时候要清空/tmp目录下所有有关hadoop的目录，不论是namenode还是datanode所在的机器</p>

<h4>参考文章</h4>

<p><a href="http://blog.csdn.net/wanghai__/article/details/5752199">http://blog.csdn.net/wanghai__/article/details/5752199</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hive初试--导入数据和查询]]></title>
    <link href="http://evoupsight.com/blog/2014/02/20/hive-import-data/"/>
    <updated>2014-02-20T10:50:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/02/20/hive-import-data</id>
    <content type="html"><![CDATA[<p>hive虽然是基于hadoop的map/reduce进行云计算，但是自身需要依赖一个元数据表，要么是derby，要么是mysql，相同点总归是要先导入数据，然后才能进行处理。其原理是把结构化的数据文件映射为一张数据库表，然后将SQL语句转化为MapReduce任务进行运行，以绕过专门开发MapReduce这样一个逆向思维的产物。</p>

<p>Hive不可以改写、插入和删除数据，换句话说hive完全就是用来进行计算的。</p>

<p>Hive的数据是存在hdfs上的,所以数据导入之后除了元数据之外，还有另一份本体数据（通常比较大的）存在hdfs上。</p>

<p>有了基础概念之后，开始正题了。</p>

<!-- more -->


<h3>环境描述</h3>

<p>hadoop0.20.203+hive0.7</p>

<h3>任务描述</h3>

<p>本次目的，是把一张二维表导入到hive中后，然后根据编号查询对应的单词。</p>

<h3>过程描述</h3>

<p>假设有这样一个文件test.txt</p>

<p><img src="http://evoupsight.com/images/evoup/hive_test_txt.png" alt="Alt text" /></p>

<p>(vim党注意：如果你已经把tab键映射为4个空格，那么请进入插入模式后在数字后ctrl+v,然后按下<tab>键，再输入单词，否则无法完成制表符的键入，数据导入失败。)</p>

<p>启动hive建表:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>hive&gt;  CREATE EXTERNAL TABLE MYTEST<span class="o">(</span>id INT, name STRING<span class="o">)</span>
</span><span class='line'>&gt; COMMENT <span class="s1">&#39;this is a test&#39;</span>
</span><span class='line'>&gt; ROW FORMAT DELIMITED FIELDS TERMINATED BY <span class="s1">&#39;\t&#39;</span>
</span><span class='line'>&gt; STORED AS TEXTFILE
</span><span class='line'>&gt;LOCATION <span class="s1">&#39;/data/test&#39;</span>;
</span><span class='line'>OK
</span></code></pre></td></tr></table></div></figure>


<p>注意这一步要求原本的hdfs目录下没有/data/test文件夹，如果有的话，hive是要报错的。
还有存储格式有三种textfile、rcfile和sequencefile。其中多数情况用textfile就可以了，如果要压缩，可以考虑后两者。</p>

<p>进入hadoop，开始导入</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>/bin/hadoop fs -put test.txt /data/test
</span></code></pre></td></tr></table></div></figure>


<p>回到hive，用简单的HQL查询语句查询id为4的记录</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>hive&gt; <span class="k">select</span> * from mytest where <span class="nv">id</span> <span class="o">=</span> 4;
</span><span class='line'>Total MapReduce <span class="nb">jobs</span> <span class="o">=</span> 1
</span><span class='line'>Launching Job 1 out of 1
</span><span class='line'>Number of reduce tasks is <span class="nb">set </span>to 0 since there<span class="err">&#39;</span>s no reduce operator
</span><span class='line'>Starting <span class="nv">Job</span> <span class="o">=</span> job_201402191826_0007, Tracking <span class="nv">URL</span> <span class="o">=</span> http://mdn2.net:50030/jobdetails.jsp?jobid<span class="o">=</span>job_201402191826_0007
</span><span class='line'>Kill <span class="nv">Command</span> <span class="o">=</span> /u01/app/hadoop/bin/../bin/hadoop job  -Dmapred.job.tracker<span class="o">=</span>mdn2.net:9025 -kill job_201402191826_0007
</span><span class='line'>2014-02-20 00:16:34,842 Stage-1 <span class="nv">map</span> <span class="o">=</span> 0%,  <span class="nv">reduce</span> <span class="o">=</span> 0%
</span><span class='line'>2014-02-20 00:16:40,889 Stage-1 <span class="nv">map</span> <span class="o">=</span> 100%,  <span class="nv">reduce</span> <span class="o">=</span> 0%
</span><span class='line'>2014-02-20 00:16:46,936 Stage-1 <span class="nv">map</span> <span class="o">=</span> 100%,  <span class="nv">reduce</span> <span class="o">=</span> 100%
</span><span class='line'>Ended <span class="nv">Job</span> <span class="o">=</span> job_201402191826_0007
</span><span class='line'>OK
</span><span class='line'>4       <span class="k">case</span>
</span><span class='line'>Time taken: 21.36 seconds
</span></code></pre></td></tr></table></div></figure>


<p>hive查询一次需要21秒?没错，这就是MapReduce查询的特点了，换做mysql的话这样查询一次应该是&lt;1秒的。好啦，收工。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[centos5.8下基于hadoop0.20.203的hive0.7安装]]></title>
    <link href="http://evoupsight.com/blog/2014/02/17/hadoop0-dot-20-dot-2-plus-hive0-dot-7/"/>
    <updated>2014-02-17T15:38:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/02/17/hadoop0-dot-20-dot-2-plus-hive0-dot-7</id>
    <content type="html"><![CDATA[<h3>什么是hive</h3>

<blockquote><p>hive是基于Hadoop的一个数据仓库工具，可以将结构化的数据文件映射为一张数据库表，并提供简单的sql查询功能，可以将sql语句转换为MapReduce任务进行运行。 其优点是学习成本低，可以通过类SQL语句快速实现简单的MapReduce统计，不必开发专门的MapReduce应用，十分适合数据仓库的统计分析。</p></blockquote>

<h3>hive使用场景</h3>

<blockquote><p>HIVE 不适合用于联机(online)事务处理,也不提供实时查询功能。它最适合应用在基于大量不可变数据的批处理作业。</p></blockquote>

<!-- more -->


<h3>hive的安装</h3>

<p>先提一下，之前我的hadoop安装在/u01/app/hadoop目录下，同样的我们下载到改目录下，然后开始安装
注意我的hadoop版本为hadooop-0.20.203.0.tgz，与此匹配的版本为hive0.7.0</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> /u01/app
</span><span class='line'>wget http://archive.apache.org/dist/hive/hive-0.7.1/hive-0.7.1-bin.tar.gz
</span><span class='line'>tar xzf hive-0.7.1-bin.tar.gz
</span><span class='line'>ln -s hive-0.7.1-bin.tar.gz hive
</span></code></pre></td></tr></table></div></figure>


<h4>环境变量设置</h4>

<p>在~/.profile中加入</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">export </span><span class="nv">HIVE_HOME</span><span class="o">=</span>/u01/app/hive
</span><span class='line'><span class="nb">export </span><span class="nv">HIVE_CONF_DIR</span><span class="o">=</span>/u01/app/hive/conf
</span></code></pre></td></tr></table></div></figure>


<p>在系统中指出hive的配置文件所在</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$HIVE_HOME</span>/bin:PATH
</span></code></pre></td></tr></table></div></figure>


<p>这个实现输入hive，hive service就会自动相应，而不用输入hive所在的绝对路径。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">export </span><span class="nv">HIVE_LIB</span><span class="o">=</span><span class="nv">$HIVE_HOME</span>/lib
</span></code></pre></td></tr></table></div></figure>


<p>记得用source让profile生效</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">source</span> ~/.profile
</span></code></pre></td></tr></table></div></figure>


<p>然后是进行hive配置文件的配置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> /u01/app/hive/conf
</span><span class='line'>cp hive-env.sh.template hive-env.sh
</span><span class='line'>vim hive-env.sh
</span></code></pre></td></tr></table></div></figure>


<h4>安装依赖软件</h4>

<p>发现有2种安装方式，一种是derby,另一种是mysql，这里先介绍mysql方式</p>

<blockquote><p>关于什么是derby: 这是一个apache DB的子项目，是一个完全用java实现的开源关系型数据库。这里就不使用了，我们采用mysql。</p></blockquote>

<h4>安装mysql</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>//卸载老版本的mysql软件包
</span><span class='line'>yum remove mysql mysql-*
</span><span class='line'>//安装mysql5.5的源
</span><span class='line'>rpm -Uvh http://repo.webtatic.com/yum/centos/5/latest.rpm
</span><span class='line'>//安装MySQL客户端的支持包
</span><span class='line'>yum install libmysqlclient15 --enablerepo<span class="o">=</span>webtatic
</span><span class='line'>//安装MySQL 5.5的客户端和服务端
</span><span class='line'>yum install mysql55 mysql55-server --enablerepo<span class="o">=</span>webtatic
</span><span class='line'>//启动MySQL系统服务，更新数据库
</span><span class='line'>/etc/init.d/mysqld restart
</span><span class='line'>mysql_upgrade
</span></code></pre></td></tr></table></div></figure>


<h4>修改mysql用户密码</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># mysql -u root mysql   //默认的没有密码直接进去的</span>
</span><span class='line'>mysql&gt;use mysql;
</span><span class='line'>mysql&gt;desc user;
</span><span class='line'>mysql&gt; GRANT ALL PRIVILEGES ON *.* TO root@<span class="s2">&quot;%&quot;</span> IDENTIFIED BY <span class="s2">&quot;root&quot;</span>;　　//为root添加远程连接的能力。
</span><span class='line'>mysql&gt;update user <span class="nb">set </span><span class="nv">Password</span> <span class="o">=</span> password<span class="o">(</span><span class="s1">&#39;xxxxxx&#39;</span><span class="o">)</span> where <span class="nv">User</span><span class="o">=</span><span class="s1">&#39;root&#39;</span>;
</span><span class='line'>mysql&gt;select Host,User,Password  from user where <span class="nv">User</span><span class="o">=</span><span class="s1">&#39;root&#39;</span>;
</span><span class='line'>mysql&gt;flush privileges;
</span><span class='line'>mysql&gt;exit
</span></code></pre></td></tr></table></div></figure>


<h4>设置mysql为开机自动启动</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo /sbin/chkconfig --add mysqld
</span><span class='line'>sudo /sbin/chkconfig mysqld on
</span></code></pre></td></tr></table></div></figure>


<h4>开始配置</h4>

<p>在conf目录下创建hive-site.xml</p>

<p>创建hive数据库给hive做元数据表</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>create database hive;
</span><span class='line'>grant all privileges on *.* to hive@localhost identified by <span class="s1">&#39;hive&#39;</span>;
</span><span class='line'>flush privileges;
</span></code></pre></td></tr></table></div></figure>


<p>运行hive</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> /u01/app/hive
</span><span class='line'>/bin/hive
</span><span class='line'>Exception in thread <span class="s2">&quot;main&quot;</span> java.lang.NoClassDefFoundError: jline/ArgumentCompletor<span class="nv">$ArgumentDelimiter</span>
</span><span class='line'>        at java.lang.Class.forName0<span class="o">(</span>Native Method<span class="o">)</span>
</span><span class='line'>        at java.lang.Class.forName<span class="o">(</span>Class.java:247<span class="o">)</span>
</span><span class='line'>        at org.apache.hadoop.util.RunJar.main<span class="o">(</span>RunJar.java:149<span class="o">)</span>
</span><span class='line'>Caused by: java.lang.ClassNotFoundException: jline.ArgumentCompletor<span class="nv">$ArgumentDelimiter</span>
</span><span class='line'>        at java.net.URLClassLoader<span class="nv">$1</span>.run<span class="o">(</span>URLClassLoader.java:202<span class="o">)</span>
</span><span class='line'>        at java.security.AccessController.doPrivileged<span class="o">(</span>Native Method<span class="o">)</span>
</span><span class='line'>        at java.net.URLClassLoader.findClass<span class="o">(</span>URLClassLoader.java:190<span class="o">)</span>
</span><span class='line'>        at java.lang.ClassLoader.loadClass<span class="o">(</span>ClassLoader.java:306<span class="o">)</span>
</span><span class='line'>        at java.lang.ClassLoader.loadClass<span class="o">(</span>ClassLoader.java:247<span class="o">)</span>
</span><span class='line'>        ... 3 more
</span></code></pre></td></tr></table></div></figure>


<p>这个只需要把hive/lib下的jline-0.9.94.jar复制到$HADOOP/lib下即可。</p>

<p>再次启动</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bin/hive
</span><span class='line'>Exception in thread <span class="s2">&quot;main&quot;</span> java.lang.NoClassDefFoundError: org/apache/hadoop/hive/conf/HiveConf
</span><span class='line'>        at java.lang.Class.forName0<span class="o">(</span>Native Method<span class="o">)</span>
</span><span class='line'>        at java.lang.Class.forName<span class="o">(</span>Class.java:247<span class="o">)</span>
</span><span class='line'>        at org.apache.hadoop.util.RunJar.main<span class="o">(</span>RunJar.java:149<span class="o">)</span>
</span><span class='line'>Caused by: java.lang.ClassNotFoundException: org.apache.hadoop.hive.conf.HiveConf
</span><span class='line'>        at java.net.URLClassLoader<span class="nv">$1</span>.run<span class="o">(</span>URLClassLoader.java:202<span class="o">)</span>
</span><span class='line'>        at java.security.AccessController.doPrivileged<span class="o">(</span>Native Method<span class="o">)</span>
</span><span class='line'>        at java.net.URLClassLoader.findClass<span class="o">(</span>URLClassLoader.java:190<span class="o">)</span>
</span><span class='line'>        at java.lang.ClassLoader.loadClass<span class="o">(</span>ClassLoader.java:306<span class="o">)</span>
</span><span class='line'>        at java.lang.ClassLoader.loadClass<span class="o">(</span>ClassLoader.java:247<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>需要修改$HADOOP/conf/的hadoop-env.sh中的</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">export </span><span class="nv">HADOOP_CLASSPATH</span><span class="o">=</span><span class="nv">$HBASE_HOME</span>/hbase-0.90.3.jar:<span class="nv">$HBASE_HOME</span>:<span class="nv">$HBASE_HOME</span>/lib/zookeeper-3.2.2.jar:<span class="nv">$HBASE_HOME</span>/conf
</span></code></pre></td></tr></table></div></figure>


<p>改成</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">export </span><span class="nv">HADOOP_CLASSPATH</span><span class="o">=</span><span class="nv">$HADOOP_CLASSPATH</span>:<span class="nv">$HBASE_HOME</span>/hbase-0.90.3.jar:<span class="nv">$HBASE_HOME</span>:<span class="nv">$HBASE_HOME</span>/lib/zookeeper-3.2.2.jar:<span class="nv">$HBASE_HOME</span>/conf
</span></code></pre></td></tr></table></div></figure>


<p>然后可以启动hive了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bin/hive
</span><span class='line'>WARNING: org.apache.hadoop.metrics.jvm.EventCounter is deprecated. Please use org.apache.hadoop.log.metrics.EventCounter in all the log4j.properties files.
</span><span class='line'>Hive <span class="nb">history </span><span class="nv">file</span><span class="o">=</span>/tmp/hadoop/hive_job_log_hadoop_201402170220_1889385824.txt
</span><span class='line'>hive&gt;
</span></code></pre></td></tr></table></div></figure>


<p>有警告，估计是jdk我用的1.7导致的，可以先不管，接下来可以试试hive的操作了。</p>

<p>•建立测试表test</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&gt; create table <span class="nb">test</span> <span class="o">(</span>key string<span class="o">)</span>;
</span><span class='line'>&gt; show tables;
</span><span class='line'>FAILED: Error in metadata: javax.jdo.JDOFatalInternalException: Error creating transactional connection factory
</span><span class='line'>NestedThrowables:
</span><span class='line'>java.lang.reflect.InvocationTargetException
</span><span class='line'>FAILED: Execution Error, <span class="k">return </span>code 1 from org.apache.hadoop.hive.ql.exec.DDLTask
</span></code></pre></td></tr></table></div></figure>


<p>原来如果mysql用rpm安装，还需要一个jar包mysql-connector-java-5.15-bin.jar，然后拷贝到hive的lib目录下可以。</p>

<p>&#8220;sh</p>

<blockquote><p>show tables;
OK
Time taken: 0.082 seconds</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>一个表也没有，创建表吧
</span><span class='line'>···sh
</span><span class='line'>&gt; create table <span class="nb">test</span> <span class="o">(</span>key string<span class="o">)</span>;
</span><span class='line'>FAILED: Error in metadata: MetaException<span class="o">(</span>message:Got exception: org.apache.hadoop.ipc.RemoteException org.apache.hadoop.hdfs.server.namenode.SafeModeException: Cannot create directory /user/hive/warehouse/test. Name node is in safe mode.
</span></code></pre></td></tr></table></div></figure>


<p>namenode为什么是安全模式？
hadoop启动的时候是在安全模式，查看一下现在的模式状态</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bin/hadoop dfsadmin –safemode get
</span><span class='line'>ON
</span></code></pre></td></tr></table></div></figure>


<p>那就关了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bin/hadoop dfsadmin -safemode leave
</span></code></pre></td></tr></table></div></figure>


<p>再次查看</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bin/hadoop dfsadmin –safemode get
</span><span class='line'>OFF
</span></code></pre></td></tr></table></div></figure>


<p>已经关了，再次建表测试</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bin/hive
</span><span class='line'>hive&gt; create table <span class="nb">test</span> <span class="o">(</span>key string<span class="o">)</span>;
</span><span class='line'>OK
</span><span class='line'>Time taken: 0.521 seconds
</span><span class='line'>hive&gt; show tables;
</span><span class='line'>OK
</span><span class='line'><span class="nb">test</span>
</span><span class='line'>Time taken: 0.14 seconds
</span></code></pre></td></tr></table></div></figure>


<h3>参考文章</h3>

<p><a href="http://blog.163.com/huang_zhong_yuan/blog/static/174975283201181371146365/">http://blog.163.com/huang_zhong_yuan/blog/static/174975283201181371146365/</a></p>

<p><a href="http://hi.baidu.com/allense7en/item/db8e5b4fb177aae81e19bcb4">http://hi.baidu.com/allense7en/item/db8e5b4fb177aae81e19bcb4</a></p>

<p><a href="http://www.cnblogs.com/zhanghuijunjava/archive/2013/04/22/hadoop_HDFS.html">http://www.cnblogs.com/zhanghuijunjava/archive/2013/04/22/hadoop_HDFS.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[64位freebsd8.1下安装ffmpeg和php扩展]]></title>
    <link href="http://evoupsight.com/blog/2014/02/12/freebsd8-dot-1amd64-install-ffmpeg-and-php-extension/"/>
    <updated>2014-02-12T17:27:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/02/12/freebsd8-dot-1amd64-install-ffmpeg-and-php-extension</id>
    <content type="html"><![CDATA[<p>帮同事解决一个开源音视频转换处理软件ffmpeg在freebsd8.1下安装的问题，我也是装了2个下午，绕了个圈子下载了个没用的扩展浪费时间。</p>

<!-- more -->


<h3>环境freebsd8.1 amd64</h3>

<p>我拿个了干净的系统做试验，安装的时候选择了develop模式和customize，customize里只选择了ports,然后php是装在了/usr/local/php53目录下。</p>

<h3>安装过程描述</h3>

<h4>ffmpeg的安装</h4>

<p>主要采用pkg_add ffmpeg.tbz的方式来安装。
然后看报错的依赖缺少啥一个一个装上去，途中需要的包可以通过下面的命令来获取：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>fetch ftp://ftp.fi.freebsd.org/pub/FreeBSD/ports/amd64/packages-8.1-release/Latest/ffmpeg.tbz
</span><span class='line'>fetch ftp://ftp.fi.freebsd.org/pub/FreeBSD/ports/amd64/packages-8.1-release/Latest/x264.tbz
</span></code></pre></td></tr></table></div></figure>


<p>采用pkg_add快速安装包
安装的时候反正就是不断用下面的语句试探</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo pkg_add ffmpeg.tbz
</span></code></pre></td></tr></table></div></figure>


<p>用pkg_add一个一个装，直到ffmpeg安装完成。</p>

<p>如果你也是这么装，那么全部东西下完，大概有这么多依赖OMG</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&gt;ls
</span><span class='line'>damageproto.tbz  gpac-libgpac.tbz  libXau.tbz      libdrm.tbz            libvorbis.tbz   png.tbz               xvid.tbz
</span><span class='line'>dri2proto.tbz    jpeg.tbz          libXdamage.tbz  libiconv.tbz          libxcb.tbz      schroedinger.tbz
</span><span class='line'>expat.tbz        kbproto.tbz       libXdmcp.tbz    libogg.tbz            libxml.tbz      x264.tbz
</span><span class='line'>faad2.tbz        libGL.tbz         libXext.tbz     libpthread-stubs.tbz  libxml2.tbz     xextproto.tbz
</span><span class='line'>ffmpeg.tbz       libGLU.tbz        libXfixes.tbz   libtheora.tbz         orc.tbz         xf86vidmodeproto.tbz
</span><span class='line'>fixesproto.tbz   libX11.tbz        libXxf86vm.tbz  libtool.tbz           pkg-config.tbz  xproto.tbz
</span></code></pre></td></tr></table></div></figure>


<p>嫌麻烦的可以先下好软件然后批量装</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>find . -name <span class="s2">&quot;*.tbz&quot;</span> -exec pkg_add <span class="o">{}</span> <span class="se">\;</span>
</span></code></pre></td></tr></table></div></figure>


<p>当然也免不了部分手动来部分包，窃喜~</p>

<hr />

<h4>ffmpeg-php的安装</h4>

<p>装php，./configure的时候出现出错，查看config.log
<code>/usr/bin/ld: cannot find -liconv</code>
需要再用pkg_add安装libxml，重新安装libiconv，用port安装，谈到要安装libtool213,再用pkg_add去装，卸掉libiconv，重新用port安装，下载php5.3编译通过，再去下载ffmpeg-php，用phpize的方式编译成动态库，会报告少autoconf，此时在到port里安装autoconf213，会让安装perl，等待安装完成就是。</p>

<p>下载正确的扩展,不要用sf那个2005年的扩展，不能用。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>fetch http://downloads.sourceforge.net/project/ffmpeg-php/ffmpeg-php/0.6.0/ffmpeg-php-0.6.0.tbz2
</span><span class='line'>tar xjf ffmpeg-php-0.6.0.tbz2
</span><span class='line'><span class="nb">cd </span>ffmpeg-php
</span><span class='line'>phpize
</span></code></pre></td></tr></table></div></figure>


<p>在phpize的时候可能出现</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="o">[</span>evoup@freebsd81amd64 ffmpeg<span class="o">]</span>&gt;/usr/local/php53/bin/phpize
</span><span class='line'>Configuring <span class="k">for</span>:
</span><span class='line'>PHP Api Version:         20090626
</span><span class='line'>Zend Module Api No:      20090626
</span><span class='line'>Zend Extension Api No:   220090626
</span><span class='line'>Cannot find autoconf. Please check your autoconf installation and the
</span><span class='line'><span class="nv">$PHP_AUTOCONF</span> environment variable. Then, rerun this script.
</span></code></pre></td></tr></table></div></figure>


<p>此时需要在环境变量中指定好autoconf和autoheader的路径，我是加载.cshrc文件中</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>setenv PHP_AUTOCONF <span class="s2">&quot;/usr/local/bin/autoconf&quot;</span>
</span><span class='line'>setenv PHP_AUTOHEADER <span class="s2">&quot;/usr/local/bin/autoheader&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>完事之后不要忘记重载~/.cshrc</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">source</span> ~/.cshrc
</span></code></pre></td></tr></table></div></figure>


<p>phpize完了之后可以开始configure了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>./configure --with-php-cofig<span class="o">=</span>/usr/local/php53/bin/php-config
</span><span class='line'>/usr/local/include/ffmpeg/avcodec.h:30:30: error: libavutil/avutil.h: No such file or directory
</span></code></pre></td></tr></table></div></figure>


<p>其实这个是ffmpeg安装好应该有的库</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>locate avutil.h
</span><span class='line'>/usr/home/evoup/software/libavutil/avutil.h
</span><span class='line'>/usr/local/include/ffmpeg/avutil.h
</span><span class='line'>/usr/local/include/libavutil/avutil.h
</span></code></pre></td></tr></table></div></figure>


<p>怎么装上去？嘿嘿，直接把相关的路径做软连接</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo ln -s /usr/local/include/libavcodec/ /usr/include/libavcodec/
</span><span class='line'>sudo ln -s /usr/local/include/libavcodec/ /usr/include/libavcodec
</span><span class='line'>sudo ln -s /usr/local/include/libavdevice/ /usr/include/libavdevice
</span><span class='line'>sudo ln -s /usr/local/include/libavfilter/ /usr/include/libavfilter
</span><span class='line'>sudo ln -s /usr/local/include/libavformat/ /usr/include/libavformat
</span><span class='line'>sudo ln -s /usr/local/include/libavutil/ /usr/include/libavutil
</span></code></pre></td></tr></table></div></figure>


<p>然后再次</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>make
</span><span class='line'>sudo make install
</span><span class='line'>Installing shared extensions:     /usr/local/php53/lib/php/extensions/no-debug-non-zts-20090626/
</span></code></pre></td></tr></table></div></figure>


<p>安装ok,接下来加载到php,要做的是看下php的ini位置，放进去就是</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>/usr/local/php53/bin/php -i | grep Conf
</span><span class='line'>Configure <span class="nv">Command</span> <span class="o">=</span>&gt;  <span class="s1">&#39;./configure&#39;</span>  <span class="s1">&#39;--prefix=/usr/local/php53&#39;</span>
</span><span class='line'>Configuration File <span class="o">(</span>php.ini<span class="o">)</span> <span class="nv">Path</span> <span class="o">=</span>&gt; /usr/local/php53/lib
</span><span class='line'>Loaded Configuration <span class="nv">File</span> <span class="o">=</span>&gt; /usr/local/php53/lib/php.ini
</span><span class='line'>Configuration
</span></code></pre></td></tr></table></div></figure>


<p>说明在/usr/local/php53/lib下，于是把编译好的so移到该目录下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo mv /usr/local/php53/lib/php/extensions/no-debug-non-zts-20090626/ffmpeg.so /usr/local/php53/lib
</span></code></pre></td></tr></table></div></figure>


<p>最后在php.ini中指定</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">extension</span><span class="o">=</span>ffmpeg.so
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>观察劳动成果</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>/usr/local/php53/bin/php -i | grep ffmpeg
</span><span class='line'>ffmpeg
</span><span class='line'>ffmpeg-php <span class="nv">version</span> <span class="o">=</span>&gt; 0.6.0-svn
</span><span class='line'>ffmpeg-php built <span class="nv">on</span> <span class="o">=</span>&gt; Feb 12 2014 17:10:47
</span><span class='line'>ffmpeg-php gd <span class="nv">support</span>  <span class="o">=</span>&gt; disabled
</span><span class='line'>ffmpeg libavcodec <span class="nv">version</span> <span class="o">=</span>&gt; Lavc52.20.1
</span><span class='line'>ffmpeg libavformat <span class="nv">version</span> <span class="o">=</span>&gt; Lavf52.31.0
</span><span class='line'>ffmpeg <span class="nv">swscaler</span> <span class="o">=</span>&gt; disabled
</span><span class='line'>ffmpeg.allow_persistent <span class="o">=</span>&gt; <span class="nv">0</span> <span class="o">=</span>&gt; 0
</span><span class='line'>ffmpeg.show_warnings <span class="o">=</span>&gt; <span class="nv">0</span> <span class="o">=</span>&gt; 0
</span></code></pre></td></tr></table></div></figure>


<p>没问题收工。</p>

<p>参考互联网文章《编译FFMpeg和FFMpeg-php》linux版的</p>
]]></content>
  </entry>
  
</feed>
