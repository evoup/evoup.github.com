<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Evoup`s Blog]]></title>
  <link href="http://evoupsight.com/atom.xml" rel="self"/>
  <link href="http://evoupsight.com/"/>
  <updated>2013-12-01T23:24:05+08:00</updated>
  <id>http://evoupsight.com/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[克隆你的octopress博客到win7]]></title>
    <link href="http://evoupsight.com/blog/2013/12/01/deploy-another-octopress-environment-in-win7/"/>
    <updated>2013-12-01T18:25:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/12/01/deploy-another-octopress-environment-in-win7</id>
    <content type="html"><![CDATA[<p>由于之前octopress博客是在公司的机器上搭的，想到在家里笔记本上的win7也搞一个环境，方便及时写写技术博客。参考网文《【像黑客一样写博客之五】博客克隆》进行摸索，终于实践成功。</p>

<p>但我的方法稍微有点区别,这里采用clone的方式比较快，主要省去一个remote add环节：）只要主要注意几个问题，就可以轻松搞定，顺序看就行。</p>

<!-- more -->


<h2>环境篇：</h2>

<p>这个可以参考大多数搭建octopress博客的文章了，这里一笔带过，之把出现的问题记一笔方便日后查阅。</p>

<h3>问题1（ruby的版本）</h3>

<p>当我装到bundle install的时候，出现了如下问题</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>An error occurred while installing rdiscount (2.0.7.3), and Bundler cannot
</span><span class='line'>continue.</span></code></pre></td></tr></table></div></figure>


<p>查阅README.markdown
<strong>Note</strong>: Octopress requires a minimum Ruby version of <code>1.9.3-p0</code>.
原来需要安装ruby1.9.3。</p>

<h3>问题2 （在装完devkit之前utf-8环境变量不要设置）</h3>

<p>而安装ruby1.9.3,相应需要安装DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe
直接解压到e:\devkit
然后再</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cd</span> <span class="ss">e</span><span class="p">:\</span><span class="n">devkit</span>
</span><span class='line'><span class="n">ruby</span> <span class="n">dk</span><span class="o">.</span><span class="n">rb</span> <span class="n">init</span>
</span><span class='line'><span class="ss">C</span><span class="p">:</span><span class="sr">/Ruby193/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">1</span><span class="o">/</span><span class="n">win32</span><span class="o">/</span><span class="n">registry</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span><span class="mi">173</span><span class="ss">:in</span> <span class="sb">`tr&#39;: invalid byte sequence in UTF-8 (ArgumentError)</span>
</span></code></pre></td></tr></table></div></figure>


<p>原来是环境变量不能先设置为UTF-8，这个是要特别注意的。</p>

<p>然后就可以执行devkit的安装了：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ruby</span> <span class="n">dk</span><span class="o">.</span><span class="n">rb</span> <span class="n">init</span>
</span><span class='line'><span class="n">ruby</span> <span class="n">dk</span><span class="o">.</span><span class="n">rb</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>


<p>接着设置环境变量（win7可以用开始搜索程序和文件，输入编辑系统环境变量）：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">LANG</span><span class="o">=</span>zh_CN.UTF-8
</span><span class='line'><span class="nv">LC_ALL</span><span class="o">=</span>zh_CN.UTF-8
</span></code></pre></td></tr></table></div></figure>


<p>继续安装2个必要的gem</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="n">install</span> <span class="n">rdoc</span> <span class="n">bundler</span>
</span><span class='line'><span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样开发环境就算和之前一致了，这里没有说git的安装，和网上说的没有特别之处，反正装完了需要把git/bin目录加到环境变量PATH中去。</p>

<h2>博客恢复篇</h2>

<p>签出自己的octopress项目,我的放在e:\octopress</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd </span>e:<span class="se">\o</span>ctopress<span class="se">\</span>
</span><span class='line'>git clone https://github.com/you/you.github.com.git
</span><span class='line'>git config --global user.email <span class="s2">&quot;you@example.com&quot;</span>
</span><span class='line'>git config --global user.name <span class="s2">&quot;Your Name&quot;</span>
</span><span class='line'><span class="nb">cd </span>you.github.com
</span><span class='line'>git checkout <span class="nb">source</span>
</span><span class='line'>rake setup_github_pages
</span><span class='line'><span class="nb">cd </span>_deploy
</span><span class='line'>git pull origin master
</span></code></pre></td></tr></table></div></figure>


<p>所有的资料都从远程origin仓库的master分支取回来了！
然后切记切换回source分支，因为master分支的是octopress通过rake部署自动提交进行维护的。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> ..
</span><span class='line'>git checkout <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure>


<p>再次rake generate和rake preview以及rake deploy发现已经可以发布了，最后还需要把相关的提交了，git add . 和git commit -a以及git push origin source</p>

<p>最后注意游走在不同的octopress博客环境处理博客之前，需要同步github仓库的数据</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd </span>e:<span class="se">\o</span>ctopress<span class="se">\y</span>ou.github.com
</span><span class='line'>git pull origin <span class="nb">source </span>
</span><span class='line'><span class="nb">cd </span>_deploy
</span><span class='line'>git pull origin master
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[完美解决phpmyadmin4.1.0访问缓慢]]></title>
    <link href="http://evoupsight.com/blog/2013/11/29/phpmyadmin4-dot-1-0-access-slow/"/>
    <updated>2013-11-29T10:52:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/29/phpmyadmin4-dot-1-0-access-slow</id>
    <content type="html"><![CDATA[<p>安装最新版phpmyadmin4.1.0出现了访问非常缓慢的问题，记录一下</p>

<!-- more -->


<h3>第一步</h3>

<p>文件名./libraries/Util.class.php文件
查找</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">return</span> <span class="nb">strftime</span><span class="p">(</span><span class="nv">$date</span><span class="p">,</span> <span class="nv">$timestamp</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>替换为</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">if</span><span class="p">(</span><span class="nb">extension_loaded</span><span class="p">(</span><span class="s1">&#39;gettext&#39;</span><span class="p">))</span>
</span><span class='line'>  <span class="k">return</span> <span class="nb">strftime</span><span class="p">(</span><span class="nv">$date</span><span class="p">,</span> <span class="nv">$timestamp</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>第二步</h3>

<p>文件名./version_check.php文件
注释掉以下代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$version</span> <span class="o">=</span> <span class="nx">PMA_Util</span><span class="o">::</span><span class="na">getLatestVersion</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="k">echo</span> <span class="nb">json_encode</span><span class="p">(</span>
</span><span class='line'>    <span class="k">array</span><span class="p">(</span>
</span><span class='line'>        <span class="s1">&#39;version&#39;</span> <span class="o">=&gt;</span> <span class="nv">$version</span><span class="o">-&gt;</span><span class="na">version</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;date&#39;</span> <span class="o">=&gt;</span> <span class="nv">$version</span><span class="o">-&gt;</span><span class="na">date</span><span class="p">,</span>
</span><span class='line'>        <span class="p">)</span>
</span><span class='line'>    <span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>第三步</h3>

<p>直接浏览器访问/setup路径，进行设置</p>

<h3>第四步</h3>

<p>应该可以登录了，如果不行清除cookie应该也可以访问了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[部分机器netstat运行结果缓慢的原因]]></title>
    <link href="http://evoupsight.com/blog/2013/11/26/netstat-resolv-dns/"/>
    <updated>2013-11-26T14:17:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/26/netstat-resolv-dns</id>
    <content type="html"><![CDATA[<p>今天看了下客户端运行状况，发现流量图断断续续的。直觉反应到可能是自己按照netstat源码修改的erlang的NIF扩展存在BUG，会奔溃。但查了下似乎没有这个问题。</p>

<p><img src="http://evoupsight.com/images/evoup/netstat1.png" alt="Alt text" /></p>

<!-- more -->


<p>该机器执行netstat本身就很慢，top看了下CPU占用也无异常，该机器基本OK，就是netstat执行起来很慢。
后来发现使用-n参数就快了。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> -n    Show network addresses and ports as numbers.  Normally netstat
</span><span class='line'>       attempts to resolve addresses and ports, and display them symboli‐
</span><span class='line'>       cally.</span></code></pre></td></tr></table></div></figure>


<p>这个参数是说netstat以数字的方式展现网络地址和端口。而不加该参数时netstat会尝试去解析地址和端口，然后采用象征方式呈现。至于究竟啥叫象征方式，其实就是如果你的hostname是localhost,它就会显示localhost，而不是127.0.0.1的方式。
最后判断应该是本机的出站通讯没有加上dns协议的53端口导致的，经过参数修改，netstat调用正常了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何正确地把带参数的C语言main程序改成so]]></title>
    <link href="http://evoupsight.com/blog/2013/11/19/change-c-program-to-so/"/>
    <updated>2013-11-19T18:17:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/19/change-c-program-to-so</id>
    <content type="html"><![CDATA[<p>首先有些标题党吧，不过个人体会修改程序的过程中遇到未知的坑还是比较阴险的，所以整理一下写个博客。</p>

<p>之前尝试把C语言的带参数执行的main程序改成动态链接库，发生了一个问题，主程序调用动态链接库最后获取的结果保持不变，跑了一会儿之后还是和第一次调用的一样。把几乎可能导致问题的static变量全部给改为非静态变量和重置后居然还是无效。最后在痛苦的查询资料之后，终于找到了问题所在。</p>

<p>话说回来，先看怎么把带参main程序改成动态链接库。</p>

<!-- more -->


<p>先看准备被改成动态库的原代码</p>

<figure class='code'><figcaption><span>test.c </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">ch</span><span class="p">;</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">opts</span><span class="o">=</span><span class="s">&quot;a:b::cd&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">while</span> <span class="p">((</span><span class="n">ch</span> <span class="o">=</span> <span class="n">getopt</span><span class="p">(</span><span class="n">argc</span><span class="p">,</span> <span class="n">argv</span><span class="p">,</span> <span class="n">opts</span><span class="p">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="p">(</span><span class="n">ch</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;a&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option a:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;b&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option b:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;c&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option c:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;d&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option d:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="nl">default:</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;other option:%c</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">ch</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='makefile'><span class='line'><span class="err">gcc</span> <span class="err">-Wall</span> <span class="err">test.c</span> <span class="err">-o</span> <span class="err">test</span>
</span></code></pre></td></tr></table></div></figure>


<p>测试：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>./test -a1 -b1 -c -d
</span><span class='line'>option a:<span class="s1">&#39;1&#39;</span>
</span><span class='line'>option b:<span class="s1">&#39;1&#39;</span>
</span><span class='line'>option c:<span class="s1">&#39;(null)&#39;</span>
</span><span class='line'>option d:<span class="s1">&#39;(null)&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>稍微讲下getopt的用法，这个命令是提供命令行执行可执行程序带不同参数的功能实现。以上程序根据所数入的参数，执行相应的操作。
其中opts的a:b::cd，“:”表示必须该选项带有额外的参数，全局变量optarg会指向此额外参数，“::”标识该额外的参数可选(有些Uinx可能不支持“::”）。</p>

<p>接下来把它给改成SO，然后再主调程序中直接指定参数进行调用。</p>

<figure class='code'><figcaption><span>plug.c </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">dlmain</span><span class="p">(</span><span class="kt">int</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="p">);</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">char</span> <span class="o">*</span><span class="n">cmdStr</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="s">&quot;&quot;</span><span class="p">,</span><span class="s">&quot;-a1&quot;</span><span class="p">,</span><span class="s">&quot;-b1&quot;</span><span class="p">,</span><span class="s">&quot;-c&quot;</span><span class="p">,</span><span class="s">&quot;-d</span><span class="se">\0</span><span class="s">&quot;</span><span class="p">};</span>
</span><span class='line'>    <span class="n">dlmain</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="n">cmdStr</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">dlmain</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">ch</span><span class="p">;</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">opts</span><span class="o">=</span><span class="s">&quot;a:b::cd&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">while</span> <span class="p">((</span><span class="n">ch</span> <span class="o">=</span> <span class="n">getopt</span><span class="p">(</span><span class="n">argc</span><span class="p">,</span> <span class="n">argv</span><span class="p">,</span> <span class="n">opts</span><span class="p">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="p">(</span><span class="n">ch</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;a&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option a:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;b&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option b:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;c&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option c:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;d&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option d:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="nl">default:</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;other option:%c</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">ch</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;in dll</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>测试一下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='makefile'><span class='line'><span class="err">gcc</span> <span class="err">-Wall</span> <span class="err">plug.c</span> <span class="err">-o</span> <span class="err">plug</span>
</span><span class='line'><span class="err">./plug</span>
</span><span class='line'><span class="nf">option a</span><span class="o">:</span><span class="m">&#39;1&#39;</span>
</span><span class='line'><span class="nf">option b</span><span class="o">:</span><span class="m">&#39;1&#39;</span>
</span><span class='line'><span class="nf">option c</span><span class="o">:</span><span class="m">&#39;(null)&#39;</span>
</span><span class='line'><span class="nf">option d</span><span class="o">:</span><span class="m">&#39;(null)&#39;</span>
</span><span class='line'><span class="err">in</span> <span class="err">dll</span>
</span></code></pre></td></tr></table></div></figure>


<p>ok，没有问题，直接转换成动态库</p>

<figure class='code'><figcaption><span>plug.c </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">d_plug</span> <span class="p">();</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">dlmain</span><span class="p">(</span><span class="kt">int</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="p">);</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">d_plug</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">char</span> <span class="o">*</span><span class="n">cmdStr</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="s">&quot;&quot;</span><span class="p">,</span><span class="s">&quot;-a1&quot;</span><span class="p">,</span><span class="s">&quot;-b1&quot;</span><span class="p">,</span><span class="s">&quot;-c&quot;</span><span class="p">,</span><span class="s">&quot;-d</span><span class="se">\0</span><span class="s">&quot;</span><span class="p">};</span>
</span><span class='line'>    <span class="n">dlmain</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="n">cmdStr</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">dlmain</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">ch</span><span class="p">;</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">opts</span><span class="o">=</span><span class="s">&quot;a:b::cd&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">while</span> <span class="p">((</span><span class="n">ch</span> <span class="o">=</span> <span class="n">getopt</span><span class="p">(</span><span class="n">argc</span><span class="p">,</span> <span class="n">argv</span><span class="p">,</span> <span class="n">opts</span><span class="p">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="p">(</span><span class="n">ch</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;a&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option a:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;b&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option b:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;c&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option c:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="sc">&#39;d&#39;</span>:
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;option d:&#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="nl">default:</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;other option:%c</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">ch</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;in dll</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>编译动态连接库</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='makefile'><span class='line'><span class="err">gcc</span> <span class="err">-shared</span> <span class="err">-o</span> <span class="err">plug.so</span> <span class="err">plug.c</span> <span class="err">-fpic</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样就得到了plug.so</p>

<p>接下来写主调程序，用它直接调用已经封装好的plug.so动态库。</p>

<figure class='code'><figcaption><span>main.c </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;dlfcn.h&gt;</span>
</span><span class='line'><span class="kt">int</span> <span class="p">(</span><span class="o">*</span><span class="n">d_plug</span><span class="p">)</span> <span class="p">();</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span><span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">void</span> <span class="o">*</span><span class="n">dp</span><span class="p">;</span>
</span><span class='line'>    <span class="n">dp</span><span class="o">=</span><span class="n">dlopen</span><span class="p">(</span><span class="s">&quot;./plug.so&quot;</span><span class="p">,</span><span class="n">RTLD_LAZY</span><span class="p">);</span>
</span><span class='line'>    <span class="n">d_plug</span><span class="o">=</span><span class="n">dlsym</span><span class="p">(</span><span class="n">dp</span><span class="p">,</span><span class="s">&quot;d_plug&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">d_plug</span><span class="p">();</span>
</span><span class='line'>    <span class="n">dlclose</span><span class="p">(</span><span class="n">dp</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>编译执行看结果</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='makefile'><span class='line'><span class="err">gcc</span> <span class="err">main.c</span> <span class="err">-lc</span> <span class="err">-fpic</span> <span class="err">-o</span> <span class="err">main</span>
</span><span class='line'><span class="err">./main</span>
</span><span class='line'><span class="nf">option a</span><span class="o">:</span><span class="m">&#39;1&#39;</span>
</span><span class='line'><span class="nf">option b</span><span class="o">:</span><span class="m">&#39;1&#39;</span>
</span><span class='line'><span class="nf">option c</span><span class="o">:</span><span class="m">&#39;(null)&#39;</span>
</span><span class='line'><span class="nf">option d</span><span class="o">:</span><span class="m">&#39;(null)&#39;</span>
</span><span class='line'><span class="err">in</span> <span class="err">dll</span>
</span></code></pre></td></tr></table></div></figure>


<h3>其他注意事项：</h3>

<p>其实除了optarg，还存在全局变量optind、opterror和optopt。三者的作用</p>

<p>optarg：非常明了，就是指程序的参数，是个字符串指针</p>

<p>optind：是下一次调用getopt的时，从optind存储的位置处重新开始检查选项</p>

<p>opterr：当opterr=0时，getopt不向stderr输出错误信息</p>

<p>optopt: 当命令行选项字符不包括在optstring中或者选项缺少必要的参数时，该选项存储在optopt 中，getopt返回&#8217;？’</p>

<h3>问题解决:</h3>

<p>写erlang的NIF扩展时optind需要重置为0，否则就导致了每次结果不变，因为就我所知erlang目前版本的NIF是没有unload功能的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gvim无法打开交换文件]]></title>
    <link href="http://evoupsight.com/blog/2013/11/12/gvim-unable-to-open-swap-file/"/>
    <updated>2013-11-12T12:21:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/12/gvim-unable-to-open-swap-file</id>
    <content type="html"><![CDATA[<p>最近在windows下使用gvim，直接按照之前在freebsd上的配置搬回来，发现问题多多。每次打开文件都会报错E303，非常碍事。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="p">:</span>help E303
</span><span class='line'>Unable <span class="k">to</span> open <span class="k">swap</span> <span class="k">file</span> <span class="k">for</span> <span class="s2">&quot;{filename}&quot;</span><span class="p">,</span> recovery impossible
</span><span class='line'>
</span><span class='line'>Vim was not able <span class="k">to</span> create <span class="k">a</span> <span class="k">swap</span> <span class="k">file</span>.  You can still edit the <span class="k">file</span><span class="p">,</span> but <span class="k">if</span>
</span><span class='line'>Vim unexpected exits the <span class="k">changes</span> will be lost.  And Vim may consume <span class="k">a</span> lot of
</span><span class='line'>memory when editing <span class="k">a</span> big <span class="k">file</span>.  You may want <span class="k">to</span> change the <span class="s1">&#39;directory&#39;</span> <span class="k">option</span>
</span><span class='line'><span class="k">to</span> avoid this error.  See <span class="p">|</span><span class="k">swap</span><span class="p">-</span><span class="k">file</span><span class="p">|</span>.
</span></code></pre></td></tr></table></div></figure>


<p>说是无法创建交换文件。
其实只要这么解决：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="p">:</span><span class="k">set</span> <span class="nb">directory</span><span class="p">=</span>.<span class="p">,</span>$TEMP
</span></code></pre></td></tr></table></div></figure>


<p>或者指定一个实际存在路径。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[centos下CVS服务器的配置]]></title>
    <link href="http://evoupsight.com/blog/2013/11/08/centos-install-cvs/"/>
    <updated>2013-11-08T13:20:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/08/centos-install-cvs</id>
    <content type="html"><![CDATA[<p>由于需要回顾以前在自己的cvs上建设的一些项目,把其中有用的项目直接放到github上方便调用，现在需要重拾cvs这个历史悠久的版本管理工具了。</p>

<!-- more -->


<p>在centos6上建设cvs服务器是比较方便的。大体分为几个步骤，xinetd->cvs->配置帐号->配置xinetd下pcvsserver文件->启动cvs服务端</p>

<h4>1.安装xinetd</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rpm -q xinetd
</span></code></pre></td></tr></table></div></figure>


<p>没有安装的话</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>yum install xinetd
</span></code></pre></td></tr></table></div></figure>


<h4>2.安装cvs</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rpm -q cvs
</span></code></pre></td></tr></table></div></figure>


<p>我的系统显示
cvs-1.11.23-15.el6.x86_64
如果没有安装的话可以</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>yum install cvs
</span></code></pre></td></tr></table></div></figure>


<h4>3.配置帐号</h4>

<p>切换到root，执行：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>groupadd cvs
</span><span class='line'>useradd -g cvs cvsroot
</span><span class='line'>passwd cvsroot
</span></code></pre></td></tr></table></div></figure>


<p>这样帐号就配置好了。</p>

<h4>4.修改cvs的配置文件/etc/xinetd.d/pcvsserver</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># default: off</span>
</span><span class='line'><span class="c"># description: The CVS service can record the history of your source \</span>
</span><span class='line'><span class="c">#              files. CVS stores all the versions of a file in a single \</span>
</span><span class='line'><span class="c">#              file in a clever way that only stores the differences \</span>
</span><span class='line'><span class="c">#              between versions.</span>
</span><span class='line'>service cvspserver
</span><span class='line'><span class="o">{</span>
</span><span class='line'>        <span class="nv">disable</span>                 <span class="o">=</span> no
</span><span class='line'>        <span class="nv">port</span>                    <span class="o">=</span> 2401
</span><span class='line'>        <span class="nv">socket_type</span>             <span class="o">=</span> stream
</span><span class='line'>        <span class="nv">protocol</span>                <span class="o">=</span> tcp
</span><span class='line'>        <span class="nb">wait</span>                    <span class="o">=</span> no
</span><span class='line'>        <span class="nv">user</span>                    <span class="o">=</span> root
</span><span class='line'>        <span class="nv">passenv</span>                 <span class="o">=</span> PATH
</span><span class='line'>        <span class="nv">server</span>                  <span class="o">=</span> /usr/bin/cvs
</span><span class='line'>        <span class="nv">env</span>                     <span class="o">=</span> <span class="nv">HOME</span><span class="o">=</span>/home/cvsroot
</span><span class='line'>        <span class="nv">server_args</span>             <span class="o">=</span> -f --allow-root<span class="o">=</span>/home/cvsroot pserver
</span><span class='line'><span class="c">#       bind                    = 127.0.0.1</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中env为cvs的环境变量地址，server_args指定你项目的源代码的保存路径和认证方式，这里pserver为基于密码的认证方式。</p>

<h4>5.初始化和启动</h4>

<p>初始化项目仓库的命令为</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cvs -d /home/cvsroot init
</span></code></pre></td></tr></table></div></figure>


<p>就是在刚才配置的env = HOME=/home/cvsroot目录长噢乖创建代码仓库</p>

<p>接下来重启xinetd</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/etc/rc.d/init.d/xinetd restart
</span></code></pre></td></tr></table></div></figure>


<p>测试cvs是否存在
lsof -p 2401
或者
netstat -l | grep csv
不能使用ps aux | grep cvs，因为这是在xinetd下！</p>

<p>安装就完成了。</p>

<p>接下来还要提一下客户端tortoise cvs使用的问题，需要把cvs.exe的路径加到环境变量PATH中方可使用或者把cvsnt这款软件的cvs.exe拷贝到tortoise cvs安装目录中，否则会报句柄错误。</p>

<h4>参考链接：</h4>

<p><a href="http://blog.csdn.net/lidongtang/article/details/8165574">http://blog.csdn.net/lidongtang/article/details/8165574</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rebar生成发布包后找不到noodtool]]></title>
    <link href="http://evoupsight.com/blog/2013/11/07/erlang-rebar-notool-not-found/"/>
    <updated>2013-11-07T15:08:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/07/erlang-rebar-notool-not-found</id>
    <content type="html"><![CDATA[<p>今天用rebar编译出目标文件准备直接部署到目标服务器上，结果报告</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">[</span><span class="n">evoup</span><span class="p">@</span><span class="n">host63i386</span> <span class="n">erlang</span><span class="p">]</span><span class="o">&gt;</span><span class="n">sudo</span> <span class="n">rel</span><span class="o">/</span><span class="n">madmonitor2</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">madmonitor2</span> <span class="n">start</span>
</span><span class='line'><span class="n">current</span> <span class="nb">node</span><span class="p">:</span> <span class="n">madmonitor2</span><span class="p">@</span><span class="mi">192</span><span class="p">.</span><span class="mi">168</span><span class="p">.</span><span class="mi">216</span><span class="p">.</span><span class="mi">165</span>
</span><span class='line'><span class="n">release</span> <span class="n">vm</span><span class="p">.</span><span class="n">args</span> <span class="n">file</span> <span class="n">empty</span><span class="p">,</span><span class="n">recopy</span>
</span><span class='line'><span class="nn">escript</span><span class="p">:</span> <span class="nv">Failed</span> <span class="n">to</span> <span class="n">open</span> <span class="nn">file</span><span class="p">:</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">evoup</span><span class="o">/</span><span class="n">project</span><span class="o">/</span><span class="n">madmonitor2</span><span class="o">/</span><span class="n">erlang</span><span class="o">/</span><span class="n">rel</span><span class="o">/</span><span class="n">madmonitor2</span><span class="o">/</span><span class="n">erts</span><span class="o">-</span>
</span><span class='line'>
</span><span class='line'><span class="mi">5</span><span class="p">.</span><span class="mi">9</span><span class="p">.</span><span class="mi">3</span><span class="p">.</span><span class="mi">1</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">nodetool</span>
</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<p>原来是少一个nodetool文件，进到目录一看发现有2个erts
一个是5.9.1，一个是5.9.3.1，分别代表R15B01和R15B03，想起之前系统装过2个版本的erlang，R15B03的没有删除干净就装了R15B01,看来是rebar自作主张读取了2个erlang运行时库。
删除之前的剩余文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="n">sudo</span> <span class="n">rm</span> <span class="o">-</span><span class="n">rf</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">erlang</span><span class="o">/</span><span class="n">erts</span><span class="o">-</span><span class="mi">5</span><span class="p">.</span><span class="mi">9</span><span class="p">.</span><span class="mi">3</span><span class="p">.</span><span class="mi">1</span><span class="o">/</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">rm</span> <span class="o">-</span><span class="n">rf</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">erlang</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">erts</span><span class="o">-</span><span class="mi">5</span><span class="p">.</span><span class="mi">9</span><span class="p">.</span><span class="mi">3</span><span class="p">.</span><span class="mi">1</span><span class="o">/</span>
</span></code></pre></td></tr></table></div></figure>


<p>仔细一看还有其他版本的erlang，rebar还没有这么傻:)
都给删除了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="n">sudo</span> <span class="n">rm</span> <span class="o">-</span><span class="n">rf</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">erlang</span><span class="o">/</span><span class="n">erts</span><span class="o">-</span><span class="mi">5</span><span class="p">.</span><span class="mi">5</span><span class="p">.</span><span class="mi">1</span><span class="o">/</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">rm</span> <span class="o">-</span><span class="n">rf</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">erlang</span><span class="o">/</span><span class="n">erts</span><span class="o">-</span><span class="mi">5</span><span class="p">.</span><span class="mi">6</span><span class="p">.</span><span class="mi">5</span><span class="o">/</span>
</span></code></pre></td></tr></table></div></figure>


<p>再次编译，问题解决,收工:)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用webtool查看erl_crash.dump]]></title>
    <link href="http://evoupsight.com/blog/2013/11/05/erl-crash-webtool-usage/"/>
    <updated>2013-11-05T14:17:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/05/erl-crash-webtool-usage</id>
    <content type="html"><![CDATA[<p>运行erlang程序崩溃，按照许多人推荐的webtool方式找问题，这里记录一下启动的过程。</p>

<!-- more -->


<p>首先开一个erl shell，然后按如下参数启动webtool
webtool:start(standard_path,[{port,8888},{bind_address,{192,168,216,145}},{server_name,&ldquo;monitorserver2&rdquo;}] ).</p>

<p>然后访问浏览器可以调试到erl.crash的具体信息。</p>

<p><img src="http://evoupsight.com/images/evoup/webtool_watch__erlcrash.png" alt="Alt text" /></p>

<p>最后发现虽然没有找到什么有价值的信息，总算不是竹篮打水，最后通过记录日志的方式解决了问题。在这里先记录一下了……</p>

<p>参考链接：</p>

<p><a href="http://www.erlang.org/doc/man/webtool.html#start-2">http://www.erlang.org/doc/man/webtool.html#start-2</a>
<a href="http://hi.baidu.com/ah__fu/item/86c65e8b88ecf453e73d1962">http://hi.baidu.com/ah__fu/item/86c65e8b88ecf453e73d1962</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[freebsd下安装vmware-tool]]></title>
    <link href="http://evoupsight.com/blog/2013/11/05/freebsd-install-vmware-tool/"/>
    <updated>2013-11-05T13:22:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/05/freebsd-install-vmware-tool</id>
    <content type="html"><![CDATA[<p>公司自建的vmware虚拟机，每当中餐回来后，由于系统处理待机状态莫名其妙地会比当前时间慢一段时间，导致server端保存数据的时间戳滞后。怎么解决呢？</p>

<!-- more -->


<h3>消极的方法</h3>

<p>首先可以尝试加上ntpdate自动来同步，不过这个方法比较死。</p>

<p>在crontab内加入</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>*/15  *   *   *   *   *   root   ntpdate 210.72.145.44
</span></code></pre></td></tr></table></div></figure>


<p>以及在/etc/rc.conf中</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">ntpdate_enable</span><span class="o">=</span><span class="s2">&quot;YES&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>积极的方法</h3>

<p>通过安装vmware-tool来一劳永逸的解决。那么我们如何在freebsd中安装vmware-tool呢？</br>
首先需要点击vmware的菜单VM &ndash;> Install VMware Tools</br>
vmware-tool是一个perl脚本，先要安装好perl。然后要准备好compat6x-amd64安装包才能继续。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /usr/port/dist
</span><span class='line'>sudo fetch ftp://ftp5.tw.freebsd.org/BSD/FreeBSD/ports/amd64/packages-8-current/Latest/compat6x-amd64.tbz
</span><span class='line'>sudo pkg_add compat6x-amd64.tbz
</span><span class='line'>*******************************************************************************
</span><span class='line'>*                                                                             *
</span><span class='line'>* Do not forget to add COMPAT_FREEBSD6 into                                   *
</span><span class='line'>* your kernel configuration <span class="o">(</span>enabled by default<span class="o">)</span>.                             *
</span><span class='line'>*                                                                             *
</span><span class='line'>* To configure and recompile your kernel see:                                 *
</span><span class='line'>* http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/kernelconfig.html *
</span><span class='line'>*                                                                             *
</span><span class='line'>*******************************************************************************
</span></code></pre></td></tr></table></div></figure>


<p>安装依赖库后，切换到root后，执行如下指令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mount /cdrom
</span><span class='line'><span class="nb">cd</span> /tmp
</span><span class='line'>tar xzpf /cdrom/vmware-freebsd-tools.tar.gz
</span><span class='line'><span class="nb">cd </span>vmware-tools-distrib
</span><span class='line'>./vmware-install.pl
</span></code></pre></td></tr></table></div></figure>


<p>这样vmware-tool就搞定了。
最后为了保险起先，关闭系统后，编辑.vmx文件
加上下面的时间同步的代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>tools.syncTime <span class="o">=</span> <span class="s2">&quot;TRUE&quot;</span>
</span><span class='line'>time.synchronize.continue <span class="o">=</span> <span class="s2">&quot;TRUE&quot;</span>
</span><span class='line'>time.synchronize.restore <span class="o">=</span> <span class="s2">&quot;TRUE&quot;</span>
</span><span class='line'>time.synchronize.resume.disk <span class="o">=</span> <span class="s2">&quot;TRUE&quot;</span>
</span><span class='line'>time.synchronize.shrink <span class="o">=</span> <span class="s2">&quot;TRUE&quot;</span>
</span><span class='line'>time.synchronize.tools.startup <span class="o">=</span> <span class="s2">&quot;TRUE&quot;</span>
</span><span class='line'>time.synchronize.tools.enable <span class="o">=</span> <span class="s2">&quot;TRUE&quot;</span>
</span><span class='line'>time.synchronize.resume.host <span class="o">=</span> <span class="s2">&quot;TRUE&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>参考链接</p>

<p><a href="http://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;cmd=displayKC&amp;externalId=1189">http://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;cmd=displayKC&amp;externalId=1189</a>
<a href="http://www.neko6.tk/archives/1067">http://www.neko6.tk/archives/1067</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HBASE完全分布式搭建(VMware版)]]></title>
    <link href="http://evoupsight.com/blog/2013/11/04/hbase-full-distributed-case/"/>
    <updated>2013-11-04T16:28:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/04/hbase-full-distributed-case</id>
    <content type="html"><![CDATA[<p>接上一篇<a href="http://evoupsight.com/blog/2013/11/04/hadoop-full-distributed-case/">《HADOOP完全分布式搭建(VMware版)》</a></p>

<p>参考 <a href="http://www.cnblogs.com/flyoung2008/archive/2011/12/02/2272761.html">http://www.cnblogs.com/flyoung2008/archive/2011/12/02/2272761.html</a></p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /u01/app
</span><span class='line'>tar xzf hbase-0.90.6.tgz
</span><span class='line'>ln -s hbase-0.90.6 hbase
</span><span class='line'><span class="nb">cd </span>hbase/conf
</span></code></pre></td></tr></table></div></figure>


<p>编辑hbase-env.sh</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">HBASE_OPTS</span><span class="o">=</span><span class="s2">&quot;-ea -XX:+UseConcMarkSweepGC -XX:+CMSIncrementalMode&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">JAVA_HOME</span><span class="o">=</span>/usr/java/jdk1.6.0_29
</span><span class='line'><span class="nb">export </span><span class="nv">HBASE_MANAGES_ZK</span><span class="o">=</span><span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意HADOOP_HOME和HBASE_HOME已经在~/.profile中指定，不需要再设置了。</p>

<p>编辑hbase-site.xml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="cp">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span>
</span><span class='line'><span class="c">&lt;!--</span>
</span><span class='line'><span class="c">/**</span>
</span><span class='line'><span class="c"> * Copyright 2010 The Apache Software Foundation</span>
</span><span class='line'><span class="c"> *</span>
</span><span class='line'><span class="c"> * Licensed to the Apache Software Foundation (ASF) under one</span>
</span><span class='line'><span class="c"> * or more contributor license agreements.  See the NOTICE file</span>
</span><span class='line'><span class="c"> * distributed with this work for additional information</span>
</span><span class='line'><span class="c"> * regarding copyright ownership.  The ASF licenses this file</span>
</span><span class='line'><span class="c"> * to you under the Apache License, Version 2.0 (the</span>
</span><span class='line'><span class="c"> * &quot;License&quot;); you may not use this file except in compliance</span>
</span><span class='line'><span class="c"> * with the License.  You may obtain a copy of the License at</span>
</span><span class='line'><span class="c"> *</span>
</span><span class='line'><span class="c"> *     http://www.apache.org/licenses/LICENSE-2.0</span>
</span><span class='line'><span class="c"> *</span>
</span><span class='line'><span class="c"> * Unless required by applicable law or agreed to in writing, software</span>
</span><span class='line'><span class="c"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span>
</span><span class='line'><span class="c"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
</span><span class='line'><span class="c"> * See the License for the specific language governing permissions and</span>
</span><span class='line'><span class="c"> * limitations under the License.</span>
</span><span class='line'><span class="c"> */</span>
</span><span class='line'><span class="c">--&gt;</span>
</span><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>hbase.rootdir<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>hdfs://mdn2.net:9024/hbase<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>hbase.cluster.distributed<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>true<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>hbase.master<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>mdn2.net:60000<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>hbase.zookeeper.quorum<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>mdn2.net,mdn2_datanode1.net,mdn2_datanode2.net<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意点：
 1.其中首先需要注意hdfs://mdn2.net:9024/hbase这里，必须与你的Hadoop集群的core-site.xml文件配置保持完全一致才行，如果你Hadoop的hdfs使用了其它端口，请在这里也修改。再者就是Hbase该项并不识别机器IP，只能使用机器hostname才可行，即若使用IP是会抛出java错误。
 2.hbase.zookeeper.quorum 的个数必须是奇数。</p>

<p>修改regionservers文件（同hadoop的slaves文件）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mdn2_datanode1.net
</span><span class='line'>mdn2_datanode2.net
</span></code></pre></td></tr></table></div></figure>


<p>然后分发到各点，就可以启动了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bin/start hbase
</span><span class='line'>bin/hbase shell
</span></code></pre></td></tr></table></div></figure>


<p>报错
ERROR: org.apache.hadoop.hbase.ZooKeeperConnectionException: HBase is able to connect to ZooKeeper but the connection closes immediately. This could be a sign that the server has too many connections (30 is the default). Consider inspecting your ZK server logs for that error and then make sure you are reusing HBaseConfiguration as often as you can. See HTable&rsquo;s javadoc for more information.
看来不要使用hbase托管的zookeeper转而再装一个试试。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wget http://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.4.4/zookeeper-3.4.4.tar.gz
</span></code></pre></td></tr></table></div></figure>


<p>编辑~/.profile,加入关于zk环境变量的设置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">ZOOKEEPER_HOME</span><span class="o">=</span><span class="s2">&quot;/u01/app/zookeeper/&quot;</span>
</span><span class='line'><span class="nv">PATH</span><span class="o">=</span><span class="nv">$ZOOKEEPER_HOME</span>/bin:<span class="nv">$PATH</span>
</span><span class='line'><span class="nb">export </span>PATH
</span><span class='line'><span class="nb">cd</span> /u01/app/zookeeper/conf
</span><span class='line'>cp zoo_sample.cfg zoo.cfg
</span><span class='line'><span class="nb">cd</span> ../bin
</span><span class='line'>./zkServer.sh start
</span></code></pre></td></tr></table></div></figure>


<p>最后重启整个hadoop/hbase搞定，jps看下跑的进程。收工。</p>

<p><img src="http://evoupsight.com/images/evoup/hbase_vmware.png" alt="Alt text" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HADOOP完全分布式搭建(VMware版)]]></title>
    <link href="http://evoupsight.com/blog/2013/11/04/hadoop-full-distributed-case/"/>
    <updated>2013-11-04T15:28:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/04/hadoop-full-distributed-case</id>
    <content type="html"><![CDATA[<p>vmware版本8.0.4 build-744019
首先准备3台虚拟机</p>

<p><img src="http://evoupsight.com/images/evoup/hadoop_vmware.png" alt="Alt text" /></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> ,''''''''''''':'''''''''''''''''':'''''''''''''''''''''''''''''''''''|
</span><span class='line'> |    usage    |        IP        |             Hostname              |
</span><span class='line'> |             |                  |                                   |
</span><span class='line'> |'''''''''''''|''''''''''''''''''|'''''''''''''''''''''''''''''''''''|
</span><span class='line'> | namenode    | 192.168.174.132  |           mdn2.net                |
</span><span class='line'> |             |                  |                                   |
</span><span class='line'> |'''''''''''''|''''''''''''''''''|'''''''''''''''''''''''''''''''''''|
</span><span class='line'> | datanode01  | 192.168.174.135  |        mdn2_datanode1.net         |
</span><span class='line'> |             |                  |                                   |
</span><span class='line'> |'''''''''''''|''''''''''''''''''|'''''''''''''''''''''''''''''''''''|
</span><span class='line'> | datanode02  | 192.168.174.136  |        mdn2_datanode2.net         |
</span><span class='line'> |             |                  |                                   |
</span><span class='line'>  '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''</span></code></pre></td></tr></table></div></figure>


<p> <!-- more --></p>

<p>Ps:
为节省资源关闭点不必要的服务</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="k">for </span>SERVICES in abrtd acpid auditd avahi-daemon cpuspeed haldaemon mdmonitor messagebus udev-post;
</span><span class='line'><span class="k">do</span> /sbin/chkconfig <span class="k">${</span><span class="nv">SERVICES</span><span class="k">}</span> off;
</span><span class='line'><span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>


<h3>准备工作</h3>

<p>先安装JDK1.6
linux:先把已经安装的openjdk卸载,安装sun jdk1.6 （j2se就够了）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#rpm -qa | grep jdk</span>
</span><span class='line'>java-1.6.0-openjdk-1.6.0.0-1.28.1.10.9.el5_8
</span><span class='line'><span class="c">#rpm -e java-1.6.0-openjdk-1.6.0.0-1.28.1.10.9.el5_8</span>
</span><span class='line'><span class="c">#sudo chmod +x jdk-6u35-linux-x64-rpm.bin</span>
</span><span class='line'><span class="c">#./jdk-6u35-linux-x64-rpm.bin</span>
</span></code></pre></td></tr></table></div></figure>


<p>freebsd:直接在/usr/port/java/diablo-jdk16，不要装jdk16，打好几个补丁还编译通不过，浪费时间！）</p>

<p>hadoop所有操作都是用hadoop帐号，下面添加</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>linux:# groupadd hadoop
</span><span class='line'>freebsd:# pw groupadd hadoop
</span><span class='line'>linux:# useradd -r -g hadoop -d /home/hadoop -m -s /bin/bash hadoop
</span><span class='line'>freebsd:# pw adduser hadoop -g hadoop -d /home/hadoop -m -s /bin/bash
</span><span class='line'>
</span><span class='line'>all:# mkdir -p /u01/app
</span><span class='line'>all:# chgrp -R hadoop /u01/app
</span><span class='line'>all:# chown -R hadoop /u01/app
</span></code></pre></td></tr></table></div></figure>


<p>环境变量</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>all:<span class="nv">$ </span>vi ~/.profile
</span><span class='line'>all:export <span class="nv">HADOOP_HOME</span><span class="o">=</span>/u01/app/hadoop
</span><span class='line'>all:export <span class="nv">HBASE_HOME</span><span class="o">=</span>/u01/app/hbase
</span></code></pre></td></tr></table></div></figure>


<p>进行免密码的ssh登录设置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ssh-keygen -t dsa -P <span class="s1">&#39;&#39;</span> -f ~/.ssh/id_dsa
</span><span class='line'>cat ~/.ssh/id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys
</span><span class='line'>chmod 600 ~/.ssh/authorized_keys
</span></code></pre></td></tr></table></div></figure>


<p>到此准备工作完成</p>

<p>安装Hadoop</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>all:<span class="nv">$ </span><span class="nb">cd</span> /u01/app
</span><span class='line'>all:<span class="nv">$ </span>tar zxf hadoop-0.20.203.0rc1.tar.gz
</span><span class='line'>all:<span class="nv">$ </span>ln -s hadoop-0.20.203.0 hadoop
</span></code></pre></td></tr></table></div></figure>


<h3>正式开始</h3>

<p>编辑所有机器的/etc/hosts文件（host的centos下为/etc/sysconfig/network，bsd的要设置/etc/rc.conf）
(PS:也可以选择现在namenode上编辑好了，分发到其他机器上去)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Do not remove the following line, or various programs</span>
</span><span class='line'><span class="c"># that require network functionality will fail.</span>
</span><span class='line'>
</span><span class='line'>127.0.0.1       localhost.localdomain localhost
</span><span class='line'>::1             localhost6.localdomain6 localhost6
</span><span class='line'>192.168.174.132 mdn2.net
</span><span class='line'>192.168.174.135 mdn2_datanode1.net
</span><span class='line'>192.168.174.136 mdn2_datanode2.net
</span></code></pre></td></tr></table></div></figure>


<p>假定已经安装好了JAVA，编辑hadoop帐号的profile文件加入如下代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">HADOOP_HOME</span><span class="o">=</span>/u01/app/hadoop
</span><span class='line'><span class="nb">export </span><span class="nv">HBASE_HOME</span><span class="o">=</span>/u01/app/hbase
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">&quot;/usr/java/jdk1.6.0_37/bin/:$PATH&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">JAVA_HOME</span><span class="o">=</span><span class="s2">&quot;/usr/java/jdk1.6.0_37/bin/&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>下载hadoop解压之后，在hadoop-env.sh指定java的目录</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">JAVA_HOME</span><span class="o">=</span>/usr/java/jdk1.6.0_37/
</span></code></pre></td></tr></table></div></figure>


<p>再编辑core-site.xml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="cp">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- Put site-specific property overrides in this file. --&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>fs.default.name<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>hdfs://mdn2.net:9024<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>hadoop.tmp.dir<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>/u01/app/hadoopTmp<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意：hadoop.tmp.dir是hadoop文件系统依赖的基础配置，很多路径都依赖它。它默认的位置是在/tmp/{$user}下面，在local和hdfs都会建有相同的目录，但是在/tmp路径下的存储是不安全的，因为linux一次重启，文件就可能被删除。导致namenode启动不起来。</p>

<p>再编辑hdfs-site.xml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="cp">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- Put site-specific property overrides in this file. --&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>dfs.replication<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>1<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>dfs.data.dir<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>/u01/app/hdfsdata<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意：dfs.data.dir为hdfs实际存放数据的路径，这个配置只对本地有效，中间可以用,连接多个目录</p>

<p>master里</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mdn2.net
</span></code></pre></td></tr></table></div></figure>


<p>slaves里</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mdn2_datanode1.net
</span><span class='line'>mdn2_datanode2.net
</span></code></pre></td></tr></table></div></figure>


<p>注意点：
修改hadoop-0.20.203.0/bin下的hadoop.
vi  hadoop
查找 –jvm . vi 下的命令模式： :/-jvm
将-jvm server改成 –server .
因为JDK1.6已经废除了一个参数-jvm,如果不修改的话，无法启动数据节点。</p>

<p>到namenode上格式化hdfs</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/bin/hadoop namenode -format
</span></code></pre></td></tr></table></div></figure>


<p>注意9024为hdfs通讯端口，完全分布式环境下，可以直接将防火墙关闭</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo /etc/init.d/iptables stop
</span><span class='line'>sudo /sbin/chkconfig iptables off
</span></code></pre></td></tr></table></div></figure>


<p>启动：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bin/start-all.sh
</span></code></pre></td></tr></table></div></figure>


<p>或者只启动dfs和mapreduce</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bin/start-dfs.sh
</span><span class='line'>bin/start-mapred.sh
</span></code></pre></td></tr></table></div></figure>


<p>最后发一个jps的进程图</p>

<p><img src="http://evoupsight.com/images/evoup/hadoop_vmware01.png" alt="Alt text" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[erlang open_port 错误之error enoent]]></title>
    <link href="http://evoupsight.com/blog/2013/11/04/erlang-open-port-error-enoent/"/>
    <updated>2013-11-04T11:04:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/04/erlang-open-port-error-enoent</id>
    <content type="html"><![CDATA[<p>今天在另外一台机器上部署新写的服务端，运行后程序崩溃，最后发现erlang的find_executable的没有找到程序。</p>

<h3>问题重现：</h3>

<!-- more -->


<p>在open_port处，查看日志报错如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">[</span><span class="n">rrddir</span> <span class="n">ok</span><span class="p">]</span><span class="err">^</span>
</span><span class='line'><span class="p">[</span><span class="nv">ResRrd</span><span class="p">:{</span><span class="n">error</span><span class="p">,{</span><span class="n">enoent</span><span class="p">,[{</span><span class="n">erlang</span><span class="p">,</span><span class="nb">open_port</span><span class="p">,</span>
</span><span class='line'>                                <span class="p">[{</span><span class="n">spawn_executable</span><span class="p">,</span><span class="s">&quot;/usr/local/bin/rrdtool&quot;</span><span class="p">},</span><span class="err">^</span>
</span><span class='line'>                                 <span class="p">[{</span><span class="n">line</span><span class="p">,</span><span class="mi">1024</span><span class="p">},{</span><span class="n">args</span><span class="p">,[</span><span class="s">&quot;-&quot;</span><span class="p">]}]],</span><span class="err">^</span>
</span><span class='line'>                                <span class="p">[]},</span><span class="err">^</span><span class="nv">M</span>
</span><span class='line'>                        <span class="p">{</span><span class="n">rrdtool</span><span class="p">,</span><span class="n">init</span><span class="p">,</span><span class="mi">1</span><span class="p">,[{</span><span class="n">file</span><span class="p">,</span><span class="s">&quot;src/rrdtool.erl&quot;</span><span class="p">},{</span><span class="n">line</span><span class="p">,</span><span class="mi">83</span><span class="p">}]},</span>
</span><span class='line'>                        <span class="p">{</span><span class="n">gen_server</span><span class="p">,</span><span class="n">init_it</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="err">^</span><span class="nv">M</span>
</span><span class='line'>                                    <span class="p">[{</span><span class="n">file</span><span class="p">,</span><span class="s">&quot;gen_server.erl&quot;</span><span class="p">},{</span><span class="n">line</span><span class="p">,</span><span class="mi">304</span><span class="p">}]},</span>
</span><span class='line'>                        <span class="p">{</span><span class="n">proc_lib</span><span class="p">,</span><span class="n">init_p_do_apply</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span>
</span><span class='line'>                                  <span class="p">[{</span><span class="n">file</span><span class="p">,</span><span class="s">&quot;proc_lib.erl&quot;</span><span class="p">},{</span><span class="n">line</span><span class="p">,</span><span class="mi">227</span><span class="p">}]}]}}]</span>
</span></code></pre></td></tr></table></div></figure>


<p>怀疑rrdtool-erlang这个库存在bug，移到rrdtool.erl代码处调查问题</p>

<figure class='code'><figcaption><span>rrdtool.erl start:81 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="c">%% @hidden</span>
</span><span class='line'><span class="nf">init</span><span class="p">([</span><span class="nv">RRDTool</span><span class="p">])</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="nv">Port</span> <span class="o">=</span> <span class="nb">open_port</span><span class="p">({</span><span class="n">spawn_executable</span><span class="p">,</span> <span class="nv">RRDTool</span><span class="p">},</span> <span class="p">[{</span><span class="n">line</span><span class="p">,</span> <span class="mi">1024</span><span class="p">},</span> <span class="p">{</span><span class="n">args</span><span class="p">,</span> <span class="p">[</span><span class="s">&quot;-&quot;</span><span class="p">]}]),</span>
</span><span class='line'>    <span class="p">{</span><span class="n">ok</span><span class="p">,</span> <span class="nv">Port</span><span class="p">}.</span>
</span></code></pre></td></tr></table></div></figure>


<p>再定位到上层看gen_server的start函数</p>

<figure class='code'><figcaption><span>rrdtool.erl start:55 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="nf">start</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="nn">gen_server</span><span class="p">:</span><span class="nf">start</span><span class="p">(</span><span class="o">?</span><span class="nv">MODULE</span><span class="p">,</span> <span class="p">[</span><span class="nn">os</span><span class="p">:</span><span class="nf">find_executable</span><span class="p">(</span><span class="s">&quot;rrdtool&quot;</span><span class="p">)],</span> <span class="p">[]).</span>
</span></code></pre></td></tr></table></div></figure>


<p>os:find_executable(&ldquo;rrdtool&rdquo;),这个是用直接找到rrdtool可执行程序的调用，回到系统了输入rrdtool返回</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>RRDtool 1.4.7  Copyright 1997-2012 by Tobias Oetiker &lt;tobi@oetiker.ch&gt;
</span><span class='line'>               Compiled Oct 22 2012 11:33:26
</span><span class='line'>
</span><span class='line'>Usage: rrdtool <span class="o">[</span>options<span class="o">]</span> <span class="nb">command </span>command_options
</span><span class='line'>Valid commands: create, update, updatev, graph, graphv,  dump, restore,
</span><span class='line'>                last, lastupdate, first, info, fetch, tune,
</span><span class='line'>                resize, xport, flushcached
</span><span class='line'>
</span><span class='line'>RRDtool is distributed under the Terms of the GNU General
</span><span class='line'>Public License Version 2. <span class="o">(</span>www.gnu.org/copyleft/gpl.html<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>For more information <span class="nb">read </span>the RRD manpages
</span></code></pre></td></tr></table></div></figure>


<p>已经装好了啊？那为什么还要报错，难道是做了alias</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>yin@yin-arch monitorserver2<span class="o">]</span>&gt;alias rrdtool
</span><span class='line'>/usr/lib64/rrdtool/bin/rrdtool
</span></code></pre></td></tr></table></div></figure>


<p>果不其然</p>

<h3>解决方法</h3>

<p>在/usr/local/bin/目录下做一个软连接</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo ln -s /usr/lib64/rrdtool/bin/rrdtool /usr/local/bin/rrdtool
</span></code></pre></td></tr></table></div></figure>


<p>再次运行，enoent问题解决。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用haproxy分单个端口到多个应用]]></title>
    <link href="http://evoupsight.com/blog/2013/10/31/use-haproxy-split-one-port-to-two-servers/"/>
    <updated>2013-10-31T10:57:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/10/31/use-haproxy-split-one-port-to-two-servers</id>
    <content type="html"><![CDATA[<p>今天实验了一下鼎鼎大名号称七层负载均衡的haproxy软件，果然是强得五体投地。如果要对多种协议进行负载均衡的路由到不同的server，haproxy非常合适了。</p>

<!-- more -->


<h3>haproxy的安装</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wget http://haproxy.1wt.eu/download/1.4/src/haproxy-1.4.24.tar.gz
</span><span class='line'>tar xzf haproxy-1.4.24.tar.gz
</span><span class='line'><span class="nb">cd </span>haproxy-1.4.24
</span><span class='line'>gmake <span class="nv">TARGET</span><span class="o">=</span>freebsd
</span><span class='line'>sudo gmake install
</span></code></pre></td></tr></table></div></figure>


<p>配置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>global
</span><span class='line'>    maxconn 5120
</span><span class='line'>    chroot /usr/local/haproxy14
</span><span class='line'>    daemon
</span><span class='line'>    quiet
</span><span class='line'>    nbproc 2
</span><span class='line'>    pidfile /usr/local/haproxy14/run/haproxy.pid
</span><span class='line'>
</span><span class='line'>defaults
</span><span class='line'>    timeout connect 5s
</span><span class='line'>    timeout client 50s
</span><span class='line'>    timeout server 20s
</span><span class='line'>    log 127.0.0.1 local3 err <span class="c">#日志级别[err warning info debug]</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>listen http
</span><span class='line'>    <span class="nb">bind</span> :8080
</span><span class='line'>    timeout client 1h
</span><span class='line'>    tcp-request inspect-delay 2s
</span><span class='line'>    acl is_http req_proto_http
</span><span class='line'>    tcp-request content accept <span class="k">if </span>is_http
</span><span class='line'>    server server-http :8081
</span><span class='line'>    use_backend tcpserver <span class="k">if</span> !is_http
</span><span class='line'>
</span><span class='line'>backend tcpserver
</span><span class='line'>    mode tcp
</span><span class='line'>    timeout server 1h
</span><span class='line'>    server server-tcp :13081
</span></code></pre></td></tr></table></div></figure>


<p>实现的功能是对8080端口的socket请求，如果判断协议为http则路由到8081，如果为其他未知的tcp协议则路由到13081所在的socket服务器端口。</p>

<h3>参考链接</h3>

<p><a href="http://cbonte.github.io/haproxy-dconv/configuration-1.4.html">http://cbonte.github.io/haproxy-dconv/configuration-1.4.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Freebsd版linux下free指令实现]]></title>
    <link href="http://evoupsight.com/blog/2013/10/30/freebsd-memory-free-c/"/>
    <updated>2013-10-30T16:41:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/10/30/freebsd-memory-free-c</id>
    <content type="html"><![CDATA[<p>监控客户端开发时候用到的代码，github上一个哥么的，发现有处bug我给贡献了，呵呵。</p>

<!-- more -->


<p>直接贴代码了，除了mem_total之外基本都正确。total的部分，先用sysctl -a | grep realmem解决</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * free.c - Display FreeBSD memory information</span>
</span><span class='line'><span class="cm"> * Wed Nov 26 19:34:54 IST 2008 vinod &lt;vinod@segfault.in&gt;</span>
</span><span class='line'><span class="cm"> * License: http://opensource.org/licenses/BSD-2-Clause</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;sys/types.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/sysctl.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">version</span> <span class="o">=</span> <span class="s">&quot;$Id: free,v 0.1.3 2008/11/26 19:34:54 IST vinod $&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span>
</span><span class='line'><span class="nf">get_sysctl</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">mib</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span> <span class="n">value</span><span class="p">,</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">size_t</span> <span class="n">len</span><span class="p">,</span> <span class="n">miblen</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">name</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">!=</span> <span class="sc">&#39;\0&#39;</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span><span class="n">name</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;.&#39;</span><span class="p">)</span>
</span><span class='line'>                        <span class="n">miblen</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>        <span class="n">len</span> <span class="o">=</span> <span class="n">miblen</span><span class="p">;</span>
</span><span class='line'>        <span class="n">sysctlnametomib</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">mib</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">len</span><span class="p">);</span>
</span><span class='line'>        <span class="n">len</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>        <span class="n">sysctl</span><span class="p">(</span><span class="n">mib</span><span class="p">,</span> <span class="n">miblen</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">value</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">len</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">value</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span>
</span><span class='line'><span class="nf">usage</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>        <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;usage: free [-b|-k|-m|-g] [-t] [-v]</span><span class="se">\n</span><span class="s">&quot;</span> \
</span><span class='line'>        <span class="s">&quot;  -b,-k,-m,-g show output in bytes, KB, MB, or GB</span><span class="se">\n</span><span class="s">&quot;</span> \
</span><span class='line'>        <span class="s">&quot;  -t display logical summary for RAM</span><span class="se">\n</span><span class="s">&quot;</span> \
</span><span class='line'>        <span class="s">&quot;  -v display version information and exit</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span>
</span><span class='line'><span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">c</span><span class="p">,</span> <span class="n">vflag</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">tflag</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">factor</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">long</span> <span class="kt">int</span> <span class="n">physmem</span><span class="p">,</span> <span class="n">realmem</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">long</span> <span class="kt">int</span> <span class="n">vmactive</span><span class="p">,</span> <span class="n">vminactive</span><span class="p">,</span> <span class="n">vmfree</span><span class="p">,</span> <span class="n">vmcache</span><span class="p">,</span> <span class="n">vmpage</span><span class="p">,</span> <span class="n">vmwire</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">long</span> <span class="kt">int</span> <span class="n">memfree</span><span class="p">,</span> <span class="n">memused</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">long</span> <span class="kt">int</span> <span class="n">pagesize</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">opterr</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">while</span> <span class="p">((</span><span class="n">c</span> <span class="o">=</span> <span class="n">getopt</span><span class="p">(</span><span class="n">argc</span><span class="p">,</span> <span class="n">argv</span><span class="p">,</span> <span class="s">&quot;bghkmtv&quot;</span><span class="p">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">switch</span> <span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                        <span class="k">case</span> <span class="sc">&#39;b&#39;</span>:
</span><span class='line'>                                <span class="n">factor</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>                                <span class="k">break</span><span class="p">;</span>
</span><span class='line'>                        <span class="k">case</span> <span class="sc">&#39;g&#39;</span>:
</span><span class='line'>                                <span class="n">factor</span> <span class="o">=</span> <span class="mi">1024</span><span class="o">*</span><span class="mi">1024</span><span class="o">*</span><span class="mi">1024</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                        <span class="k">case</span> <span class="sc">&#39;h&#39;</span>:
</span><span class='line'>                                <span class="n">usage</span><span class="p">();</span>
</span><span class='line'>                                <span class="n">exit</span><span class="p">(</span><span class="n">EXIT_SUCCESS</span><span class="p">);</span>
</span><span class='line'>                        <span class="k">case</span> <span class="sc">&#39;k&#39;</span>:
</span><span class='line'>                                <span class="n">factor</span> <span class="o">=</span> <span class="mi">1024</span><span class="p">;</span>
</span><span class='line'>                                <span class="k">break</span><span class="p">;</span>
</span><span class='line'>                        <span class="k">case</span> <span class="sc">&#39;m&#39;</span>:
</span><span class='line'>                                <span class="n">factor</span> <span class="o">=</span> <span class="mi">1024</span><span class="o">*</span><span class="mi">1024</span><span class="p">;</span>
</span><span class='line'>                                <span class="k">break</span><span class="p">;</span>
</span><span class='line'>                        <span class="k">case</span> <span class="sc">&#39;t&#39;</span>:
</span><span class='line'>                                <span class="n">tflag</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>                                <span class="k">break</span><span class="p">;</span>
</span><span class='line'>                        <span class="k">case</span> <span class="sc">&#39;v&#39;</span>:
</span><span class='line'>                                <span class="n">vflag</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>                                <span class="k">break</span><span class="p">;</span>
</span><span class='line'>                        <span class="k">case</span> <span class="sc">&#39;?&#39;</span>:
</span><span class='line'>                        <span class="nl">default:</span>
</span><span class='line'>                                <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;%s: invalid option -- %c</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">optopt</span><span class="p">);</span>
</span><span class='line'>                                <span class="n">usage</span><span class="p">();</span>
</span><span class='line'>                                <span class="n">exit</span><span class="p">(</span><span class="n">EXIT_FAILURE</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">argc</span> <span class="o">-=</span> <span class="n">optind</span><span class="p">;</span>
</span><span class='line'>        <span class="n">argv</span> <span class="o">+=</span> <span class="n">optind</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">vflag</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;%s</span><span class="se">\n</span><span class="s">built %s %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">version</span><span class="p">,</span>
</span><span class='line'>                                <span class="n">__DATE__</span><span class="p">,</span> <span class="n">__TIME__</span><span class="p">);</span>
</span><span class='line'>                <span class="n">exit</span><span class="p">(</span><span class="n">EXIT_SUCCESS</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">physmem</span>    <span class="o">=</span> <span class="n">labs</span><span class="p">(</span><span class="n">get_sysctl</span><span class="p">(</span><span class="s">&quot;hw.physmem&quot;</span><span class="p">));</span>
</span><span class='line'>        <span class="n">realmem</span>    <span class="o">=</span> <span class="n">labs</span><span class="p">(</span><span class="n">get_sysctl</span><span class="p">(</span><span class="s">&quot;hw.realmem&quot;</span><span class="p">));</span>
</span><span class='line'>        <span class="n">pagesize</span>   <span class="o">=</span> <span class="n">labs</span><span class="p">(</span><span class="n">get_sysctl</span><span class="p">(</span><span class="s">&quot;hw.pagesize&quot;</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">vmpage</span>     <span class="o">=</span> <span class="n">labs</span><span class="p">(</span><span class="n">get_sysctl</span><span class="p">(</span><span class="s">&quot;vm.stats.vm.v_page_count&quot;</span><span class="p">)</span> <span class="o">*</span> <span class="n">pagesize</span><span class="p">);</span>
</span><span class='line'>        <span class="n">vmwire</span>     <span class="o">=</span> <span class="n">labs</span><span class="p">(</span><span class="n">get_sysctl</span><span class="p">(</span><span class="s">&quot;vm.stats.vm.v_wire_count&quot;</span><span class="p">)</span> <span class="o">*</span> <span class="n">pagesize</span><span class="p">);</span>
</span><span class='line'>        <span class="n">vmactive</span>   <span class="o">=</span> <span class="n">labs</span><span class="p">(</span><span class="n">get_sysctl</span><span class="p">(</span><span class="s">&quot;vm.stats.vm.v_active_count&quot;</span><span class="p">)</span> <span class="o">*</span> <span class="n">pagesize</span><span class="p">);</span>
</span><span class='line'>        <span class="n">vminactive</span> <span class="o">=</span> <span class="n">labs</span><span class="p">(</span><span class="n">get_sysctl</span><span class="p">(</span><span class="s">&quot;vm.stats.vm.v_inactive_count&quot;</span><span class="p">)</span> <span class="o">*</span> <span class="n">pagesize</span><span class="p">);</span>
</span><span class='line'>        <span class="n">vmcache</span>    <span class="o">=</span> <span class="n">labs</span><span class="p">(</span><span class="n">get_sysctl</span><span class="p">(</span><span class="s">&quot;vm.stats.vm.v_cache_count&quot;</span><span class="p">)</span> <span class="o">*</span> <span class="n">pagesize</span><span class="p">);</span>
</span><span class='line'>        <span class="n">vmfree</span>     <span class="o">=</span> <span class="n">labs</span><span class="p">(</span><span class="n">get_sysctl</span><span class="p">(</span><span class="s">&quot;vm.stats.vm.v_free_count&quot;</span><span class="p">)</span> <span class="o">*</span> <span class="n">pagesize</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;         %15s %15s %15s %15s %15s %15s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="s">&quot;total&quot;</span><span class="p">,</span> <span class="s">&quot;active&quot;</span><span class="p">,</span> <span class="s">&quot;free&quot;</span><span class="p">,</span> <span class="s">&quot;inactive&quot;</span><span class="p">,</span> <span class="s">&quot;wire&quot;</span><span class="p">,</span> <span class="s">&quot;cached&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Memory:  %15ld %15ld %15ld %15ld %15ld %15ld</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span>
</span><span class='line'>                        <span class="n">realmem</span><span class="o">/</span><span class="n">factor</span><span class="p">,</span>
</span><span class='line'>                        <span class="n">vmactive</span><span class="o">/</span><span class="n">factor</span><span class="p">,</span>
</span><span class='line'>                        <span class="n">vmfree</span><span class="o">/</span><span class="n">factor</span><span class="p">,</span>
</span><span class='line'>                        <span class="n">vminactive</span><span class="o">/</span><span class="n">factor</span><span class="p">,</span>
</span><span class='line'>                        <span class="n">vmwire</span><span class="o">/</span><span class="n">factor</span><span class="p">,</span>
</span><span class='line'>                        <span class="n">vmcache</span><span class="o">/</span><span class="n">factor</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="cm">/*</span>
</span><span class='line'><span class="cm">         * logical summary</span>
</span><span class='line'><span class="cm">         */</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">tflag</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">memfree</span> <span class="o">=</span> <span class="n">vminactive</span> <span class="o">+</span> <span class="n">vmfree</span> <span class="o">+</span> <span class="n">vmcache</span><span class="p">;</span>
</span><span class='line'>                <span class="n">memused</span>        <span class="o">=</span> <span class="n">realmem</span> <span class="o">-</span> <span class="n">memfree</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Summary: %15ld %15ld %15ld</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span>
</span><span class='line'>                                <span class="n">realmem</span><span class="o">/</span><span class="n">factor</span><span class="p">,</span>
</span><span class='line'>                                <span class="n">memused</span><span class="o">/</span><span class="n">factor</span><span class="p">,</span>
</span><span class='line'>                                <span class="n">memfree</span><span class="o">/</span><span class="n">factor</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="p">(</span><span class="n">EXIT_SUCCESS</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>项目位置</h3>

<p><a href="https://github.com/evoup/free">https://github.com/evoup/free</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mochiweb下调用rrdtool graph命令绘制类似ganglia的load的图表]]></title>
    <link href="http://evoupsight.com/blog/2013/10/28/mochiweb-write-pretty-rrdtool-graphic/"/>
    <updated>2013-10-28T16:41:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/10/28/mochiweb-write-pretty-rrdtool-graphic</id>
    <content type="html"><![CDATA[<p>今天做rrdtool图表，发现ganglia的图表还是不错的，我就一个一个来模仿，先从one minute load开始。通过mochiweb在restful接口直接出图。</p>

<!-- more -->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">webapi_func_graph</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">include</span><span class="p">(</span><span class="s">&quot;include/inc.hrl&quot;</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">compile</span><span class="p">(</span><span class="n">export_all</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nb">get</span><span class="p">(</span><span class="nv">Selector</span><span class="p">,</span><span class="nv">Req</span><span class="p">,</span><span class="nv">Key</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="nv">Method</span><span class="o">=</span><span class="nv">Req</span><span class="p">:</span><span class="nb">get</span><span class="p">(</span><span class="n">method</span><span class="p">),</span>
</span><span class='line'>    <span class="nv">QueryStringData</span> <span class="o">=</span> <span class="nv">Req</span><span class="p">:</span><span class="nf">parse_qs</span><span class="p">(),</span>
</span><span class='line'>    <span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;[req:</span><span class="si">~p</span><span class="s">][qsd:</span><span class="si">~p</span><span class="s">]</span><span class="si">~n</span><span class="s">&quot;</span><span class="p">,[</span><span class="nv">Req</span><span class="p">,</span><span class="nv">QueryStringData</span><span class="p">]),</span>
</span><span class='line'>    <span class="nv">StartTs</span> <span class="o">=</span> <span class="nn">proplists</span><span class="p">:</span><span class="nf">get_value</span><span class="p">(</span><span class="s">&quot;start&quot;</span><span class="p">,</span> <span class="nv">QueryStringData</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">),</span>
</span><span class='line'>    <span class="nv">EndTs</span> <span class="o">=</span> <span class="nn">proplists</span><span class="p">:</span><span class="nf">get_value</span><span class="p">(</span><span class="s">&quot;end&quot;</span><span class="p">,</span> <span class="nv">QueryStringData</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">),</span>
</span><span class='line'>    <span class="nv">Width</span> <span class="o">=</span> <span class="nn">proplists</span><span class="p">:</span><span class="nf">get_value</span><span class="p">(</span><span class="s">&quot;w&quot;</span><span class="p">,</span> <span class="nv">QueryStringData</span><span class="p">,</span> <span class="s">&quot;705&quot;</span><span class="p">),</span>
</span><span class='line'>    <span class="nv">Height</span> <span class="o">=</span> <span class="nn">proplists</span><span class="p">:</span><span class="nf">get_value</span><span class="p">(</span><span class="s">&quot;h&quot;</span><span class="p">,</span> <span class="nv">QueryStringData</span><span class="p">,</span> <span class="s">&quot;245&quot;</span><span class="p">),</span>
</span><span class='line'>    <span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;[M:</span><span class="si">~p</span><span class="s">][F:get][A:</span><span class="si">~p</span><span class="s">][M:</span><span class="si">~p</span><span class="s">][K:</span><span class="si">~p</span><span class="s">][start:</span><span class="si">~p</span><span class="s">][end:</span><span class="si">~p</span><span class="s">][width:</span><span class="si">~p</span><span class="s">][height:</span><span class="si">~p</span><span class="s">]</span><span class="si">~n</span><span class="s">&quot;</span><span class="p">,[</span><span class="o">?</span><span class="nv">MODULE</span><span class="p">,</span><span class="nv">Selector</span><span class="p">,</span><span class="nv">Method</span><span class="p">,</span><span class="nv">Key</span><span class="p">,</span><span class="nv">StartTs</span><span class="p">,</span><span class="nv">EndTs</span><span class="p">,</span><span class="nv">Width</span><span class="p">,</span><span class="nv">Height</span><span class="p">]),</span>
</span><span class='line'>    <span class="k">case</span> <span class="nv">Selector</span> <span class="k">of</span>
</span><span class='line'>        <span class="s">&quot;@self&quot;</span> <span class="o">-&gt;</span>
</span><span class='line'>            <span class="nv">FileName</span><span class="o">=</span><span class="s">&quot;/tmp/myLoad_&quot;</span><span class="o">++</span><span class="nb">integer_to_list</span><span class="p">(</span><span class="nn">erlang</span><span class="p">:</span><span class="nb">phash2</span><span class="p">(</span><span class="n">make_ref</span><span class="p">()))</span><span class="o">++</span><span class="s">&quot;.png&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nv">AvgLoad</span><span class="o">=</span> <span class="nn">os</span><span class="p">:</span><span class="nf">cmd</span><span class="p">(</span><span class="s">&quot;/usr/local/bin/rrdtool fetch /services/rrds/&quot;</span><span class="o">++</span><span class="nv">Key</span><span class="o">++</span><span class="s">&quot;/load.rrd AVERAGE --start &quot;</span><span class="o">++</span><span class="nv">StartTs</span><span class="o">++</span><span class="s">&quot; --end &quot;</span><span class="o">++</span>
</span><span class='line'>                <span class="nv">EndTs</span><span class="o">++</span><span class="s">&quot; | awk &#39;BEGIN {ORS=</span><span class="se">\&quot;\&quot;</span><span class="s">} {sum+=$2} END {print sum/NR}&#39;&quot;</span><span class="p">),</span>
</span><span class='line'>            <span class="nv">AverageLoad</span><span class="o">=</span><span class="nb">list_to_float</span><span class="p">(</span><span class="nv">AvgLoad</span><span class="p">),</span>
</span><span class='line'>            <span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;[average load:</span><span class="si">~p</span><span class="s">]</span><span class="si">~n</span><span class="s">&quot;</span><span class="p">,[</span><span class="nv">AverageLoad</span><span class="p">]),</span>
</span><span class='line'>            <span class="k">case</span> <span class="nv">AverageLoad</span> <span class="o">&gt;</span> <span class="mi">2</span> <span class="k">of</span>
</span><span class='line'>                <span class="n">true</span> <span class="o">-&gt;</span>
</span><span class='line'>                    <span class="k">case</span> <span class="nv">AverageLoad</span> <span class="o">&gt;</span> <span class="mi">10</span> <span class="k">of</span>
</span><span class='line'>                        <span class="n">true</span> <span class="o">-&gt;</span>
</span><span class='line'>                            <span class="nv">BColor</span><span class="o">=</span><span class="s">&quot;FF9966&quot;</span><span class="p">;</span>
</span><span class='line'>                        <span class="n">false</span> <span class="o">-&gt;</span>
</span><span class='line'>                            <span class="nv">BColor</span><span class="o">=</span><span class="s">&quot;E2ECFF&quot;</span>
</span><span class='line'>                    <span class="k">end</span><span class="p">;</span>
</span><span class='line'>                <span class="p">_</span> <span class="o">-&gt;</span>
</span><span class='line'>                    <span class="nv">BColor</span><span class="o">=</span><span class="s">&quot;CCFF99&quot;</span>
</span><span class='line'>            <span class="k">end</span><span class="p">,</span>
</span><span class='line'>            <span class="nn">os</span><span class="p">:</span><span class="nf">cmd</span><span class="p">(</span><span class="s">&quot;/usr/local/bin/rrdtool graph &quot;</span><span class="o">++</span><span class="nv">FileName</span><span class="o">++</span><span class="s">&quot; --lazy --start &quot;</span><span class="o">++</span><span class="nv">StartTs</span><span class="o">++</span><span class="s">&quot; --end &quot;</span><span class="o">++</span><span class="nv">EndTs</span><span class="o">++</span><span class="s">&quot;  --title </span><span class="se">\&quot;</span><span class="s">One Minute Load Average &quot;</span><span class="o">++</span><span class="nv">Key</span><span class="o">++</span><span class="s">&quot; last hour</span><span class="se">\&quot;</span><span class="s"> --width &quot;</span><span class="o">++</span><span class="nv">Width</span><span class="o">++</span><span class="s">&quot; --height &quot;</span><span class="o">++</span><span class="nv">Height</span><span class="o">++</span><span class="s">&quot; DEF:load=/services/rrds/&quot;</span><span class="o">++</span><span class="nv">Key</span><span class="o">++</span><span class="s">&quot;/load.rrd:load:AVERAGE AREA:load#4A4A4A:load GPRINT:load:LAST:</span><span class="se">\&quot;</span><span class="s"> Current</span><span class="se">\\</span><span class="s">:%8.2lf %s</span><span class="se">\&quot;</span><span class="s">  GPRINT:load:AVERAGE:</span><span class="se">\&quot;</span><span class="s">Average</span><span class="se">\\</span><span class="s">:%8.2lf %s</span><span class="se">\\</span><span class="s">n</span><span class="se">\&quot;</span><span class="s">  GPRINT:load:MAX:</span><span class="se">\&quot;</span><span class="s">Maximum</span><span class="se">\\</span><span class="s">:%8.2lf %s</span><span class="se">\&quot;</span><span class="s"> GPRINT:load:MIN:</span><span class="se">\&quot;</span><span class="s">Minimum</span><span class="se">\\</span><span class="s">:%8.2lf %s</span><span class="se">\&quot;</span><span class="s"> -c BACK#&quot;</span><span class="o">++</span><span class="nv">BColor</span><span class="p">),</span>
</span><span class='line'>            <span class="p">{</span><span class="n">ok</span><span class="p">,</span> <span class="nv">Data</span><span class="p">}</span> <span class="o">=</span> <span class="nn">file</span><span class="p">:</span><span class="nf">read_file</span><span class="p">(</span><span class="nv">FileName</span><span class="p">),</span>
</span><span class='line'>            <span class="nn">file</span><span class="p">:</span><span class="nf">delete</span><span class="p">(</span><span class="nv">FileName</span><span class="p">),</span>
</span><span class='line'>            <span class="p">{</span><span class="s">&quot;Content-type: image/png&quot;</span><span class="p">,</span><span class="nv">Data</span><span class="p">};</span>
</span><span class='line'>        <span class="p">_</span> <span class="o">-&gt;</span>
</span><span class='line'>            <span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">&quot;[other]</span><span class="si">~n</span><span class="s">&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意点，我没有使用rrdcgi这个东西是因为，手册上没有说可以直接输出二进制文件流，第二即使可以用，mochiweb也没有cgi的接口可以对接。
访问我的restful接口<a href="http://192.168.216.145/mmsapi2.0beta/get/graph/@self/yin-arch_ac101eb8?start=1382927568&amp;end=1382944644&amp;w=395&amp;h=141">http://192.168.216.145/mmsapi2.0beta/get/graph/@self/yin-arch_ac101eb8?start=1382927568&amp;end=1382944644&amp;w=395&amp;h=141</a></p>

<p>最后出图像下面一样的图了。当平均load大于10背景呈现红色（代表严重），大于2为蓝色，其余绿色。计算平均load我使用了rrdtoo fetch这个指令，此外还要注意在/tmp目录生成好随机名图片，用完了之后得删除，这个也是惯用方法。其余的请参阅rrdtool graph和rrdtool fetch命令的说明。
<img src="http://evoupsight.com/images/evoup/yin-arch_ac101eb8_load.png" alt="Alt text" /></p>

<p>参考链接：
<a href="http://man.lupaworld.com/content/manage/ringkee/awk.htm">http://man.lupaworld.com/content/manage/ringkee/awk.htm</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[配置nginx支持rrdcgi]]></title>
    <link href="http://evoupsight.com/blog/2013/10/25/nginx-with-rrdcgi/"/>
    <updated>2013-10-25T17:27:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/10/25/nginx-with-rrdcgi</id>
    <content type="html"><![CDATA[<p>开始在web界面上加载监控图表了，用rrdrool graph生成图，但是发现只能够生成。于是想当然地试了一下rrdcgi，本以为能够出图，结果还是创建图片，html来加载图片。最后发现ganglia的图表中居然也是先提取在临时目录生成好的图片，然后用php来生成头，最后再删除图片。不过顺便把nginx下配置CGI程序的知识学会了，权且记一笔。</p>

<!-- more -->


<h3>RRDCGI的使用</h3>

<p>首先是编写graph.cgi</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/usr/local/bin/rrdcgi</span>
</span><span class='line'> &lt;RRD::GRAPH
</span><span class='line'>      /services/cgi-bin/load.png
</span><span class='line'>      --imginfo <span class="s1">&#39;&lt;IMG SRC=/rrdgraph/%s WIDTH=%lu HEIGHT=%lu &gt;&#39;</span>
</span><span class='line'>      --lazy --title<span class="o">=</span><span class="s2">&quot;load&quot;</span>
</span><span class='line'>      --start 1382666836 --end 1382677047
</span><span class='line'>      --width 705 --height 245
</span><span class='line'>      --alt-autoscale
</span><span class='line'>          DEF:load<span class="o">=</span>/services/rrds/yin-arch_ac101eb8/load.rrd:load:AVERAGE
</span><span class='line'>          HRULE:1#ff0000:<span class="s2">&quot;warning value&quot;</span>
</span><span class='line'>      AREA:load#3d3d3d:load&gt;
</span></code></pre></td></tr></table></div></figure>


<p>语法基本和rrdgraph的差不多，没什么好说的，这样等等会生成出来一个html代码叫做</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;IMG</span> <span class="na">SRC=</span><span class="s">/rrdgraph/load.png</span> <span class="na">WIDTH=</span><span class="s">786</span> <span class="na">HEIGHT=</span><span class="s">324</span> <span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>首先在webroot下创建一个软连接rrdgraph，成的图片的src所指向rrdgraph文件夹，其实是个软连接，指向路径为/services/cgi-bin/
这么做是为了在nginx配置方便。</p>

<p>要怎么在shell中直接验证能出图呢？</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo rrdcgi graph.cgi &lt; /dev/null
</span><span class='line'><span class="o">(</span>offline mode: enter <span class="nv">name</span><span class="o">=</span>value pairs on standard input<span class="o">)</span>
</span><span class='line'>Content-Type: text/html
</span><span class='line'>Content-Length: 53
</span><span class='line'>
</span><span class='line'> &lt;IMG <span class="nv">SRC</span><span class="o">=</span>/rrdgraph/load.png <span class="nv">WIDTH</span><span class="o">=</span>786 <span class="nv">HEIGHT</span><span class="o">=</span>324 &gt;
</span></code></pre></td></tr></table></div></figure>


<p>很明显这样子是得到了load.png这个图片文件。然后把这个cgi文件移到/services/cgi-bin/目录下待机。</p>

<h3>nginx的对rrdcgi支持的配置</h3>

<p>首先需要安装好perl，还需要用到以下库：（以下版本可能过旧，直接到CPAN的网站搜索安装）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wget http://www.cpan.org/modules/by-module/FCGI/FCGI-0.67.tar.gz
</span><span class='line'>tar -zxf FCGI-0.67.tar.gz
</span><span class='line'><span class="nb">cd </span>FCGI-0.67
</span><span class='line'>perl Makefile.PL
</span><span class='line'>make <span class="o">&amp;&amp;</span> make install
</span><span class='line'><span class="nb">cd</span> ..
</span><span class='line'>
</span><span class='line'>wget http://search.cpan.org/CPAN/authors/id/G/GB/GBJK/FCGI-ProcManager-0.18.tar.gz
</span><span class='line'>tar -zxf FCGI-ProcManager-0.18.tar.gz
</span><span class='line'><span class="nb">cd </span>FCGI-ProcManager-0.18
</span><span class='line'>perl Makefile.PL
</span><span class='line'>make <span class="o">&amp;&amp;</span> make install
</span><span class='line'><span class="nb">cd</span> ..
</span><span class='line'>
</span><span class='line'>wget http://search.cpan.org/CPAN/authors/id/I/IN/INGY/IO-All-0.39.tar.gz
</span><span class='line'>tar zxf IO-All-0.39.tar.gz
</span><span class='line'><span class="nb">cd </span>IO-All-0.39
</span><span class='line'>perl Makefile.PL
</span><span class='line'>make <span class="o">&amp;&amp;</span> make install
</span></code></pre></td></tr></table></div></figure>


<p>安装 nginx-fcgi 脚本：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wget http://hily.me/blog/wp-content/uploads/2010/01/nginx-fcgi.txt
</span><span class='line'>
</span><span class='line'>mv nginx-fcgi.txt /usr/sbin/nginx-fcgi
</span><span class='line'>
</span><span class='line'>chmod +x /usr/sbin/nginx-fcgi
</span></code></pre></td></tr></table></div></figure>


<p>如果不用 sudo 方式运行 nginx-fcgi，请注释掉 nginx-fcgi 脚本中的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="k">if</span> <span class="o">(</span> <span class="nv">$&gt;</span> <span class="o">==</span> “0″ <span class="o">)</span> <span class="o">{</span>
</span><span class='line'>print “<span class="se">\n\t</span>ERROR<span class="se">\t</span>Running as a root!<span class="se">\n</span>”;
</span><span class='line'>print “<span class="se">\t</span>Suggested not to <span class="k">do </span>so !!!<span class="se">\n\n</span>”;
</span><span class='line'><span class="nb">exit </span>1;
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>启动 nginx-fcgi：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo nginx-fcgi -l /var/log/nginx/nginx-fcgi.log -pid /var/run/nginx-fcgi.pid -S /var/run/nginx-fcgi.sock
</span></code></pre></td></tr></table></div></figure>


<p>注意一定要为 socket 添加 nginx 帐户的权限，否则 cgi 会执行失败。
新建 nginx-fcgi 脚本指令配置，直接从 fastcgi_params 复制模板：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cp /etc/nginx/fastcgi_params /etc/nginx/nginx_fcgi_params
</span></code></pre></td></tr></table></div></figure>


<p>去除尾部的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># PHP only, required if PHP was built with –enable-force-cgi-redirect</span>
</span><span class='line'>fastcgi_param  REDIRECT_STATUS    200;
</span></code></pre></td></tr></table></div></figure>


<p>最后的cgi站点配置：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>    location / <span class="o">{</span>
</span><span class='line'>        root   /webroot;
</span><span class='line'>        index  index.html index.htm;
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    location ~ ^/cgi-bin/.*<span class="se">\.</span>cgi<span class="err">$</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>        fastcgi_index  index.cgi;
</span><span class='line'>        fastcgi_param  SCRIPT_FILENAME    /services<span class="nv">$fastcgi_script_name</span>;
</span><span class='line'>        include        nginx_fcgi_params;
</span><span class='line'>        fastcgi_read_timeout    5m;
</span><span class='line'>        fastcgi_pass   unix:/var/run/nginx-fcgi.sock;
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>重启nginx，访问地址<a href="http://192.168.216.145/cgi-bin/graph.cgi">http://192.168.216.145/cgi-bin/graph.cgi</a></p>

<p>看到已经有图了
<img src="http://evoupsight.com/images/evoup/rrdtool_load_graph2.png" alt="Alt text" /></p>

<h3>参考链接</h3>

<p><a href="http://oss.oetiker.ch/rrdtool/doc/rrdcgi.en.html">http://oss.oetiker.ch/rrdtool/doc/rrdcgi.en.html</a></p>

<p><a href="http://wiki.qpsmtpd.org/doku.php?id=resources:statistics:rrdcgi-sample">http://wiki.qpsmtpd.org/doku.php?id=resources:statistics:rrdcgi-sample</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[编译rebar项目中单个erlang源文件的vim脚本]]></title>
    <link href="http://evoupsight.com/blog/2013/10/24/erlang-rebar-single-file-compile-with-vim/"/>
    <updated>2013-10-24T12:41:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/10/24/erlang-rebar-single-file-compile-with-vim</id>
    <content type="html"><![CDATA[<p>本人用rebar写程序总免不了rebar complie和rebar generate一番，项目关联比较多整个过程非常慢，这是很令人沮丧的。有没有什么方法能像C语言的makefile一样，只编译需要的文件呢？答案是没有现成的，就我所知rebar没有这么高端的功能去判断哪些文件是变化过的。那就通过其他方式提高生产效率，想到了erlc，单个文件编译是没有什么问题。</p>

<!-- more -->


<p>方法也很EZ</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>erlc -o ./ebin foo.erl
</span></code></pre></td></tr></table></div></figure>


<h3>小试牛刀</h3>

<p>于是我如法炮制，初步写出了如下vim脚本。（我的是cshell，如果是bash请把对应的set变量部分改成bash的风格）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="s2">&quot;编译当前erlang文件且部署到rebar项目的rel目录的对应位置</span>
</span><span class='line'><span class="s2">map bd :call CompileErlDeploy()&lt;CR&gt;</span>
</span><span class='line'><span class="s2">func! CompileErlDeploy()</span>
</span><span class='line'><span class="s2">  exec &quot;</span>w<span class="s2">&quot;</span>
</span><span class='line'><span class="s2">  exec &quot;</span>!erlc -o /tmp %<span class="s2">&quot;</span>
</span><span class='line'><span class="s2">  exec &quot;</span>!set <span class="nv">bar</span> <span class="o">=</span> <span class="se">\&quot;</span><span class="sb">`</span>ls apps/<span class="sb">`</span><span class="se">\&quot;</span><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">  exec &quot;</span>!mv /tmp/<span class="sb">`</span>basename %&lt;.beam<span class="sb">`</span> rel/<span class="sb">`</span>ls apps/<span class="sb">`</span>/lib/<span class="sb">`</span>ls apps/<span class="sb">`</span>-<span class="sb">`</span>grep vsn apps/<span class="sb">`</span>ls apps/<span class="sb">`</span>/src/<span class="sb">`</span>ls apps/<span class="sb">`</span>.app.src | sed <span class="s1">&#39;s/{vsn, \&quot;//g&#39;</span> | sed <span class="s1">&#39;s/\&quot;},//g&#39;</span><span class="sb">`</span>/ebin/<span class="s2">&quot;</span>
</span><span class='line'><span class="s2">  exec &quot;</span>!<span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/rel/<span class="sb">`</span>ls apps/<span class="sb">`</span>/bin/<span class="sb">`</span>ls apps/<span class="sb">`</span> stop<span class="s2">&quot;</span>
</span><span class='line'><span class="s2">endfunc</span>
</span><span class='line'>
</span><span class='line'><span class="s2">map bf :call RunErl()&lt;CR&gt;</span>
</span><span class='line'><span class="s2">func! RunErl()</span>
</span><span class='line'><span class="s2">  exec &quot;</span>!<span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/rel/<span class="sb">`</span>ls apps/<span class="sb">`</span>/bin/<span class="sb">`</span>ls apps/<span class="sb">`</span> start<span class="err">&quot;</span>
</span><span class='line'>endfunct
</span></code></pre></td></tr></table></div></figure>


<p>基本思路是先找到当前文件所在的路径，然后使用erlang的独立编译器erlc直接编译出该文件的beam字节码，最后拷贝到部署目录rel所在的位置，当然部署是有版本的，版本的信息到apps目录下的.app.src的vsn中提取。</p>

<h3>进一步优化</h3>

<p>对CompileErlDeploy合并有：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="s2">&quot;编译当前erlang文件且部署到rebar项目的rel目录的对应位置</span>
</span><span class='line'><span class="s2">map bd :call CompileErlDeploy()&lt;CR&gt;</span>
</span><span class='line'><span class="s2">func! CompileErlDeploy()</span>
</span><span class='line'><span class="s2">  exec &quot;</span>w<span class="s2">&quot;</span>
</span><span class='line'><span class="s2">  exec &quot;</span>!erlc -o /tmp % <span class="o">&amp;&amp;</span> <span class="nb">set </span><span class="nv">bar</span> <span class="o">=</span> <span class="se">\&quot;</span><span class="sb">`</span>ls apps/<span class="sb">`</span><span class="se">\&quot;</span> <span class="o">&amp;&amp;</span> mv /tmp/<span class="sb">`</span>basename %&lt;.beam<span class="sb">`</span> rel/<span class="sb">`</span>ls apps/<span class="sb">`</span>/lib/<span class="sb">`</span>ls apps/<span class="sb">`</span>-<span class="sb">`</span>grep vsn apps/<span class="o">{</span><span class="nv">$bar</span><span class="o">}</span>/src/<span class="o">{</span><span class="nv">$bar</span><span class="o">}</span>.app.src | sed <span class="s1">&#39;s/{vsn, \&quot;//g&#39;</span> | sed <span class="s1">&#39;s/\&quot;},//g&#39;</span><span class="sb">`</span>/ebin/ <span class="o">&amp;&amp;</span> <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/rel/<span class="sb">`</span>ls apps/<span class="sb">`</span>/bin/<span class="sb">`</span>ls apps/<span class="sb">`</span> stop<span class="s2">&quot;</span>
</span><span class='line'><span class="s2">endfunc</span>
</span><span class='line'>
</span><span class='line'><span class="s2">map bf :call RunErl()&lt;CR&gt;</span>
</span><span class='line'><span class="s2">func! RunErl()</span>
</span><span class='line'><span class="s2">  exec &quot;</span>!<span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/rel/<span class="sb">`</span>ls apps/<span class="sb">`</span>/bin/<span class="sb">`</span>ls apps/<span class="sb">`</span> start<span class="err">&quot;</span>
</span><span class='line'>endfunct
</span></code></pre></td></tr></table></div></figure>


<h3>使用的方法</h3>

<p>进入rebar项目的根目录，sudo vim apps/项目名/src/源码.erl
随后使用bd即可编译出源码.beam,并且移到rel目录下beam应该的位置,而bf则可以启动该rebar应用程序。
需要注意的是，至少要rebar generate成功生成一次rel目录的文件，对于新建文件时尤其要做这一步，否则替换啥呢：）</p>

<h3>后续</h3>

<p>如果能再加入热部署，整个过程就更加轻松了</p>

<h3>参考链接</h3>

<p><a href="http://www.ibm.com/developerworks/cn/linux/l-vim-script-1/"><a href="http://www.ibm.com/developerworks/cn/linux/l-vim-script-1/">http://www.ibm.com/developerworks/cn/linux/l-vim-script-1/</a></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[How to]在erlang中使用rrdtool进行监控数据的保存]]></title>
    <link href="http://evoupsight.com/blog/2013/10/23/erlang-with-rrdtool/"/>
    <updated>2013-10-23T15:12:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/10/23/erlang-with-rrdtool</id>
    <content type="html"><![CDATA[<h2>概述</h2>

<p>项目需要保存监控数据，之前用hbase存然后再出图的方式，虽然数据量可以，但整个方式比较落后。</p>

<p>rrdtool是专门为了保存和出图设计的数据库。它的全称为round robin database，我们通常叫它为环状数据库。</p>

<p>关于如何创建rrd数据库的文章可以看这里<a href="http://www.cuddletech.com/articles/rrd/ar01s02.html">http://www.cuddletech.com/articles/rrd/ar01s02.html</a></p>

<h2>准备工作</h2>

<p>在freebsd上安装rrdtool1.2以上的版本</p>

<!-- more -->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /usr/port/databases/rrdtool12
</span><span class='line'>sudo make install clean
</span></code></pre></td></tr></table></div></figure>


<p>erlang对应接口的安装</p>

<p>在项目中rebar.conf对应位置中加入8-11行的内容</p>

<figure class='code'><figcaption><span>rebar.conf start:0 mark:8-11 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">{</span><span class="n">deps</span><span class="p">,</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span><span class="n">mochiweb</span><span class="p">,</span> <span class="s">&quot;1.5.1&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="p">{</span><span class="n">git</span><span class="p">,</span> <span class="s">&quot;git://github.com/mochi/mochiweb.git&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="p">{</span><span class="n">tag</span><span class="p">,</span> <span class="s">&quot;1.5.1&quot;</span><span class="p">}</span> <span class="p">}},</span>
</span><span class='line'>        <span class="p">{</span><span class="n">&#39;log4erl&#39;</span><span class="p">,</span> <span class="s">&quot;.*&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="p">{</span><span class="n">git</span><span class="p">,</span> <span class="s">&quot;git://github.com/ahmednawras/log4erl.git&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&quot;master&quot;</span><span class="p">}</span> <span class="p">},</span>
</span><span class='line'>        <span class="p">{</span><span class="n">&#39;rrdtool&#39;</span><span class="p">,</span> <span class="s">&quot;.*&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="p">{</span><span class="n">git</span><span class="p">,</span> <span class="s">&quot;git://github.com/Vagabond/erlang-rrdtool.git&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&quot;master&quot;</span><span class="p">}</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">]}.</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span><span class="n">sub_dirs</span><span class="p">,</span> <span class="p">[</span><span class="s">&quot;apps/monitorserver2&quot;</span><span class="p">,</span> <span class="s">&quot;rel&quot;</span><span class="p">]}.</span>
</span></code></pre></td></tr></table></div></figure>


<p>以及
rel/reltool.config对应位置中加入第13、30行的内容</p>

<figure class='code'><figcaption><span>rebar.conf start:0 mark:13,30 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">{</span><span class="n">sys</span><span class="p">,</span> <span class="p">[</span>
</span><span class='line'>       <span class="p">{</span><span class="n">lib_dirs</span><span class="p">,</span> <span class="p">[</span><span class="s">&quot;../apps&quot;</span><span class="p">,</span> <span class="s">&quot;../deps&quot;</span><span class="p">]},</span>
</span><span class='line'>       <span class="p">{</span><span class="n">erts</span><span class="p">,</span> <span class="p">[{</span><span class="n">mod_cond</span><span class="p">,</span> <span class="n">derived</span><span class="p">},</span> <span class="p">{</span><span class="n">app_file</span><span class="p">,</span> <span class="n">strip</span><span class="p">}]},</span>
</span><span class='line'>       <span class="p">{</span><span class="n">app_file</span><span class="p">,</span> <span class="n">strip</span><span class="p">},</span>
</span><span class='line'>       <span class="p">{</span><span class="n">rel</span><span class="p">,</span> <span class="s">&quot;monitorserver2&quot;</span><span class="p">,</span> <span class="s">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="p">[</span>
</span><span class='line'>         <span class="n">kernel</span><span class="p">,</span>
</span><span class='line'>         <span class="n">stdlib</span><span class="p">,</span>
</span><span class='line'>         <span class="n">sasl</span><span class="p">,</span>
</span><span class='line'>         <span class="n">inets</span><span class="p">,</span>
</span><span class='line'>         <span class="n">crypto</span><span class="p">,</span>
</span><span class='line'>         <span class="n">mochiweb</span><span class="p">,</span>
</span><span class='line'>         <span class="n">rrdtool</span><span class="p">,</span>
</span><span class='line'>         <span class="n">monitorserver2</span>
</span><span class='line'>        <span class="p">]},</span>
</span><span class='line'>       <span class="p">{</span><span class="n">rel</span><span class="p">,</span> <span class="s">&quot;start_clean&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="p">[</span>
</span><span class='line'>         <span class="n">kernel</span><span class="p">,</span>
</span><span class='line'>         <span class="n">stdlib</span>
</span><span class='line'>        <span class="p">]},</span>
</span><span class='line'>       <span class="p">{</span><span class="n">boot_rel</span><span class="p">,</span> <span class="s">&quot;monitorserver2&quot;</span><span class="p">},</span>
</span><span class='line'>       <span class="p">{</span><span class="n">profile</span><span class="p">,</span> <span class="n">embedded</span><span class="p">},</span>
</span><span class='line'>       <span class="p">{</span><span class="n">incl_cond</span><span class="p">,</span> <span class="n">exclude</span><span class="p">},</span>
</span><span class='line'>       <span class="p">{</span><span class="n">excl_archive_filters</span><span class="p">,</span> <span class="p">[</span><span class="s">&quot;.*&quot;</span><span class="p">]},</span> <span class="c">%% Do not archive built libs</span>
</span><span class='line'>       <span class="p">{</span><span class="n">excl_sys_filters</span><span class="p">,</span> <span class="p">[</span><span class="s">&quot;^bin/.*&quot;</span><span class="p">,</span> <span class="s">&quot;^erts.*/bin/(dialyzer|typer)&quot;</span><span class="p">,</span>
</span><span class='line'>                           <span class="s">&quot;^erts.*/(doc|info|include|lib|man|src)&quot;</span><span class="p">]},</span>
</span><span class='line'>       <span class="p">{</span><span class="n">excl_app_filters</span><span class="p">,</span> <span class="p">[</span><span class="s">&quot;</span><span class="err">\</span><span class="s">.gitignore&quot;</span><span class="p">]},</span>
</span><span class='line'>       <span class="p">{</span><span class="n">app</span><span class="p">,</span> <span class="n">sasl</span><span class="p">,</span>   <span class="p">[{</span><span class="n">incl_cond</span><span class="p">,</span> <span class="n">include</span><span class="p">}]},</span>
</span><span class='line'>       <span class="p">{</span><span class="n">app</span><span class="p">,</span> <span class="n">mochiweb</span><span class="p">,</span>   <span class="p">[{</span><span class="n">incl_cond</span><span class="p">,</span> <span class="n">include</span><span class="p">}]},</span>
</span><span class='line'>       <span class="p">{</span><span class="n">app</span><span class="p">,</span> <span class="n">rrdtool</span><span class="p">,</span>   <span class="p">[{</span><span class="n">incl_cond</span><span class="p">,</span> <span class="n">include</span><span class="p">}]},</span>
</span><span class='line'>       <span class="p">{</span><span class="n">app</span><span class="p">,</span> <span class="n">crypto</span><span class="p">,</span>   <span class="p">[{</span><span class="n">incl_cond</span><span class="p">,</span> <span class="n">include</span><span class="p">}]},</span>
</span><span class='line'>       <span class="p">{</span><span class="n">app</span><span class="p">,</span> <span class="n">inets</span><span class="p">,</span>   <span class="p">[{</span><span class="n">incl_cond</span><span class="p">,</span> <span class="n">include</span><span class="p">}]},</span>
</span><span class='line'>       <span class="p">{</span><span class="n">app</span><span class="p">,</span> <span class="n">stdlib</span><span class="p">,</span> <span class="p">[{</span><span class="n">incl_cond</span><span class="p">,</span> <span class="n">include</span><span class="p">}]},</span>
</span><span class='line'>       <span class="p">{</span><span class="n">app</span><span class="p">,</span> <span class="n">kernel</span><span class="p">,</span> <span class="p">[{</span><span class="n">incl_cond</span><span class="p">,</span> <span class="n">include</span><span class="p">}]},</span>
</span><span class='line'>       <span class="p">{</span><span class="n">app</span><span class="p">,</span> <span class="n">mnesia</span><span class="p">,</span> <span class="p">[{</span><span class="n">incl_cond</span><span class="p">,</span> <span class="n">include</span><span class="p">}]},</span>
</span><span class='line'>       <span class="p">{</span><span class="n">app</span><span class="p">,</span> <span class="n">xmerl</span><span class="p">,</span> <span class="p">[{</span><span class="n">incl_cond</span><span class="p">,</span> <span class="n">include</span><span class="p">}]},</span>
</span><span class='line'>       <span class="p">{</span><span class="n">app</span><span class="p">,</span> <span class="n">monitorserver2</span><span class="p">,</span> <span class="p">[{</span><span class="n">incl_cond</span><span class="p">,</span> <span class="n">include</span><span class="p">}]}</span>
</span><span class='line'>      <span class="p">]}.</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span><span class="n">target_dir</span><span class="p">,</span> <span class="s">&quot;monitorserver2&quot;</span><span class="p">}.</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span><span class="n">overlay</span><span class="p">,</span> <span class="p">[</span>
</span><span class='line'>           <span class="p">{</span><span class="n">mkdir</span><span class="p">,</span> <span class="s">&quot;log/sasl&quot;</span><span class="p">},</span>
</span><span class='line'>           <span class="p">{</span><span class="n">copy</span><span class="p">,</span> <span class="s">&quot;files/erl&quot;</span><span class="p">,</span> <span class="s">&quot;</span><span class="err">\</span><span class="s">{</span><span class="err">\</span><span class="s">{erts_vsn</span><span class="err">\</span><span class="s">}</span><span class="err">\</span><span class="s">}/bin/erl&quot;</span><span class="p">},</span>
</span><span class='line'>           <span class="p">{</span><span class="n">copy</span><span class="p">,</span> <span class="s">&quot;files/nodetool&quot;</span><span class="p">,</span> <span class="s">&quot;</span><span class="err">\</span><span class="s">{</span><span class="err">\</span><span class="s">{erts_vsn</span><span class="err">\</span><span class="s">}</span><span class="err">\</span><span class="s">}/bin/nodetool&quot;</span><span class="p">},</span>
</span><span class='line'>           <span class="p">{</span><span class="n">copy</span><span class="p">,</span> <span class="s">&quot;files/monitorserver2&quot;</span><span class="p">,</span> <span class="s">&quot;bin/monitorserver2&quot;</span><span class="p">},</span>
</span><span class='line'>           <span class="p">{</span><span class="n">copy</span><span class="p">,</span> <span class="s">&quot;files/monitorserver2.cmd&quot;</span><span class="p">,</span> <span class="s">&quot;bin/monitorserver2.cmd&quot;</span><span class="p">},</span>
</span><span class='line'>           <span class="p">{</span><span class="n">copy</span><span class="p">,</span> <span class="s">&quot;files/start_erl.cmd&quot;</span><span class="p">,</span> <span class="s">&quot;bin/start_erl.cmd&quot;</span><span class="p">},</span>
</span><span class='line'>           <span class="p">{</span><span class="n">copy</span><span class="p">,</span> <span class="s">&quot;files/install_upgrade.escript&quot;</span><span class="p">,</span> <span class="s">&quot;bin/install_upgrade.escript&quot;</span><span class="p">},</span>
</span><span class='line'>           <span class="p">{</span><span class="n">copy</span><span class="p">,</span> <span class="s">&quot;files/sys.config&quot;</span><span class="p">,</span> <span class="s">&quot;releases/</span><span class="err">\</span><span class="s">{</span><span class="err">\</span><span class="s">{rel_vsn</span><span class="err">\</span><span class="s">}</span><span class="err">\</span><span class="s">}/sys.config&quot;</span><span class="p">},</span>
</span><span class='line'>           <span class="p">{</span><span class="n">copy</span><span class="p">,</span> <span class="s">&quot;files/vm.args&quot;</span><span class="p">,</span> <span class="s">&quot;releases/</span><span class="err">\</span><span class="s">{</span><span class="err">\</span><span class="s">{rel_vsn</span><span class="err">\</span><span class="s">}</span><span class="err">\</span><span class="s">}/vm.args&quot;</span><span class="p">}</span>
</span><span class='line'>          <span class="p">]}.</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样就算安装完成了（需要注意项目使用了rebar）</p>

<h2>创建RRD数据库</h2>

<p>然后我们参考下开源监控软件ganglia的load_one数据库结构：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rrdtool info load_one.rrd
</span><span class='line'>
</span><span class='line'><span class="nv">filename</span> <span class="o">=</span> <span class="s2">&quot;load_one.rrd&quot;</span>
</span><span class='line'><span class="nv">rrd_version</span> <span class="o">=</span> <span class="s2">&quot;0003&quot;</span>
</span><span class='line'><span class="nv">step</span> <span class="o">=</span> 15
</span><span class='line'><span class="nv">last_update</span> <span class="o">=</span> 1382507991
</span><span class='line'>ds<span class="o">[</span>sum<span class="o">]</span>.type <span class="o">=</span> <span class="s2">&quot;GAUGE&quot;</span>
</span><span class='line'>ds<span class="o">[</span>sum<span class="o">]</span>.minimal_heartbeat <span class="o">=</span> 120
</span><span class='line'>ds<span class="o">[</span>sum<span class="o">]</span>.min <span class="o">=</span> NaN
</span><span class='line'>ds<span class="o">[</span>sum<span class="o">]</span>.max <span class="o">=</span> NaN
</span><span class='line'>ds<span class="o">[</span>sum<span class="o">]</span>.last_ds <span class="o">=</span> <span class="s2">&quot;0.10&quot;</span>
</span><span class='line'>ds<span class="o">[</span>sum<span class="o">]</span>.value <span class="o">=</span> 6.0000000000e-01
</span><span class='line'>ds<span class="o">[</span>sum<span class="o">]</span>.unknown_sec <span class="o">=</span> 0
</span><span class='line'>rra<span class="o">[</span>0<span class="o">]</span>.cf <span class="o">=</span> <span class="s2">&quot;AVERAGE&quot;</span>
</span><span class='line'>rra<span class="o">[</span>0<span class="o">]</span>.rows <span class="o">=</span> 5856
</span><span class='line'>rra<span class="o">[</span>0<span class="o">]</span>.pdp_per_row <span class="o">=</span> 1
</span><span class='line'>rra<span class="o">[</span>0<span class="o">]</span>.xff <span class="o">=</span> 5.0000000000e-01
</span><span class='line'>rra<span class="o">[</span>0<span class="o">]</span>.cdp_prep<span class="o">[</span>0<span class="o">]</span>.value <span class="o">=</span> NaN
</span><span class='line'>rra<span class="o">[</span>0<span class="o">]</span>.cdp_prep<span class="o">[</span>0<span class="o">]</span>.unknown_datapoints <span class="o">=</span> 0
</span><span class='line'>rra<span class="o">[</span>1<span class="o">]</span>.cf <span class="o">=</span> <span class="s2">&quot;AVERAGE&quot;</span>
</span><span class='line'>rra<span class="o">[</span>1<span class="o">]</span>.rows <span class="o">=</span> 20160
</span><span class='line'>rra<span class="o">[</span>1<span class="o">]</span>.pdp_per_row <span class="o">=</span> 4
</span><span class='line'>rra<span class="o">[</span>1<span class="o">]</span>.xff <span class="o">=</span> 5.0000000000e-01
</span><span class='line'>rra<span class="o">[</span>1<span class="o">]</span>.cdp_prep<span class="o">[</span>0<span class="o">]</span>.value <span class="o">=</span> 3.3266666667e-01
</span><span class='line'>rra<span class="o">[</span>1<span class="o">]</span>.cdp_prep<span class="o">[</span>0<span class="o">]</span>.unknown_datapoints <span class="o">=</span> 0
</span><span class='line'>rra<span class="o">[</span>2<span class="o">]</span>.cf <span class="o">=</span> <span class="s2">&quot;AVERAGE&quot;</span>
</span><span class='line'>rra<span class="o">[</span>2<span class="o">]</span>.rows <span class="o">=</span> 52704
</span><span class='line'>rra<span class="o">[</span>2<span class="o">]</span>.pdp_per_row <span class="o">=</span> 40
</span><span class='line'>rra<span class="o">[</span>2<span class="o">]</span>.xff <span class="o">=</span> 5.0000000000e-01
</span><span class='line'>rra<span class="o">[</span>2<span class="o">]</span>.cdp_prep<span class="o">[</span>0<span class="o">]</span>.value <span class="o">=</span> 2.2742000000e+01
</span><span class='line'>rra<span class="o">[</span>2<span class="o">]</span>.cdp_prep<span class="o">[</span>0<span class="o">]</span>.unknown_datapoints <span class="o">=</span> 14
</span></code></pre></td></tr></table></div></figure>


<p>熟悉一下它的结构，数据库的名字叫做load_one.rrd，rrd的版本为3，步长step为15秒，即15秒之内的数据不能再次被写入，为一个最小单位。
然后last_update为最后一次更新的时间戳，数据类型为GAUGE，这是一种直接写入不做平均计算的数据类型。minimal_heartbeat为120秒，意思是120秒内没有数据被更新，系统认为状态未知。
min max为最大和最小。last_ds最后的ds为0.10，最后被写入的数据为6.0000000000e-01，就是0.6，未知的时间为0。
接下来CF的第一个AVERAGE的每行（row）有1个pdp（ Primary Data Point），共有5856个pdp,我们算下代表的时间跨度，15<em>1</em>5856=87840秒，为24.4小时。为啥有0.4小时，估计是出图的时候，为了更好看吧，可以不去管它。这里废话一句：也可以通过如下命令查看实际的时间跨度：
rrdtool dump load_one.rrd > load_one.xml
进去可以看一下是不是时间跨度规划正确。
<img src="http://evoupsight.com/images/evoup/rrdtool_dump.png" alt="Alt text" /></p>

<p>于是我有了我的load数据库</p>

<figure class='code'><figcaption><span>foo.erl </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">{</span><span class="n">ok</span><span class="p">,</span><span class="nv">PidRrdtool</span><span class="p">}</span><span class="o">=</span><span class="nn">rrdtool</span><span class="p">:</span><span class="nf">start</span><span class="p">(),</span>
</span><span class='line'><span class="nn">rrdtool</span><span class="p">:</span><span class="nf">create</span><span class="p">(</span><span class="nv">PidRrdtool</span><span class="p">,</span> <span class="s">&quot;load.rrd&quot;</span><span class="p">,</span> <span class="p">[{</span><span class="s">&quot;load&quot;</span><span class="p">,</span> <span class="n">&#39;GAUGE&#39;</span><span class="p">,</span> <span class="p">[</span><span class="mi">120</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">100</span><span class="p">]}],</span>
</span><span class='line'>    <span class="p">[{</span><span class="n">&#39;AVERAGE&#39;</span><span class="p">,</span> <span class="mi">0</span><span class="p">.</span><span class="mi">5</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">5856</span><span class="p">},</span> <span class="p">{</span><span class="n">&#39;AVERAGE&#39;</span><span class="p">,</span> <span class="mi">0</span><span class="p">.</span><span class="mi">5</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">20160</span><span class="p">},</span> <span class="p">{</span><span class="n">&#39;AVERAGE&#39;</span><span class="p">,</span> <span class="mi">0</span><span class="p">.</span><span class="mi">5</span><span class="p">,</span> <span class="mi">40</span><span class="p">,</span> <span class="mi">52704</span><span class="p">}</span>
</span><span class='line'>    <span class="p">],[{</span><span class="n">step</span><span class="p">,</span><span class="mi">15</span><span class="p">}]).</span>
</span></code></pre></td></tr></table></div></figure>


<p> 需要注意的是这个create会无条件重建数据库，所以每次运行要先判断是否存在，如果不存在
 才调用rrdtool:create函数创建数据库。</p>

<p> 其中最后一个参数为创建选项，可以传{step,15}，代表创建步长为15的数据库。</p>

<h2>更新数据库</h2>

<p>这个比较简单了，就是update</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="c">%%写入rrd数据库</span>
</span><span class='line'><span class="c">%%Load为客户端上传的监控到的load数值</span>
</span><span class='line'><span class="nn">rrdtool</span><span class="p">:</span><span class="nf">update</span><span class="p">(</span><span class="nv">PidRrdtool</span><span class="p">,</span> <span class="s">&quot;load.rrd&quot;</span><span class="p">,</span> <span class="p">[{</span><span class="s">&quot;load&quot;</span><span class="p">,</span> <span class="nb">list_to_float</span><span class="p">(</span><span class="nv">Load</span><span class="p">)}],</span> <span class="n">now</span><span class="p">()).</span>
</span></code></pre></td></tr></table></div></figure>


<h2>简单的绘图</h2>

<p>这里用最原始的方法，rrdtool graph来画图</p>

<figure class='code'><figcaption><span>make_graph.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'>rrdtool graph  myLoad.png                    <span class="se">\</span>
</span><span class='line'>      --start 1382508875 --end 1382512874         <span class="se">\</span>
</span><span class='line'>      --title <span class="s2">&quot;Load Average yin-arch_ac101eb8&quot;</span>   <span class="se">\</span>
</span><span class='line'>      --v <span class="s2">&quot;Load Average&quot;</span>                          <span class="se">\</span>
</span><span class='line'>      DEF:load<span class="o">=</span>load.rrd:load:AVERAGE              <span class="se">\</span>
</span><span class='line'>      HRULE:1#ff0000:<span class="s2">&quot;warning value&quot;</span>             <span class="se">\</span>
</span><span class='line'>      AREA:load#4A4A4A:load<span class="se">\ </span>average<span class="se">\</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行该脚本，最后绘图效果见此:</p>

<p><img src="http://evoupsight.com/images/evoup/rrdtool_load_graph.png" alt="Alt text" /></p>

<p>其他参考资料：
<a href="http://oss.oetiker.ch/rrdtool/">http://oss.oetiker.ch/rrdtool/</a></p>

<p><a href="https://github.com/Vagabond/erlang-rrdtool">https://github.com/Vagabond/erlang-rrdtool</a></p>

<p><a href="http://blog.sina.com.cn/s/blog_79d1f5e00100test.html">http://blog.sina.com.cn/s/blog_79d1f5e00100test.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[局域网计算机和vmware虚拟机互ping]]></title>
    <link href="http://evoupsight.com/blog/2013/10/22/vmware-ping-in-lan/"/>
    <updated>2013-10-22T13:35:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/10/22/vmware-ping-in-lan</id>
    <content type="html"><![CDATA[<h2>情景描述</h2>

<p>在公司的WIN7电脑上装了vmware进行服务端的开发，通过socket和client端进行通信。现在局域网中有若干台服务器安装了客户端要与vmware虚拟机上的server端进行通讯。由于不是处于一个网段，无法互相ping得地址，进而不能交互，以下为解决问题的过程笔录。</p>

<!-- more -->


<h2>我的环境</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  ,____________________
</span><span class='line'>  |                   |  ,''''''''''''''''''|   ,------------------Y
</span><span class='line'>  |   gateway         |  |   gateway        |   |   gateway        |
</span><span class='line'>  |                   |__|                  |   |                  |
</span><span class='line'>      172.16.27.38    |  |  172.16.27.1     |   |  172.16.30.254   |
</span><span class='line'>  |                   |  |                  |   |                  |
</span><span class='line'>  `.................../  L__________________|   |__________________J
</span><span class='line'>           |                                              |
</span><span class='line'>           |                                              |
</span><span class='line'>           |                                              |
</span><span class='line'>           |                                              |
</span><span class='line'>           |                                              |
</span><span class='line'>           |                                              |
</span><span class='line'>   ,_______|______                                        |
</span><span class='line'>   |             |        ,''''''''''''''`.        ,'''''''''''''`.
</span><span class='line'>   |             |        |               |        |              |
</span><span class='line'>   | WIN7        |        |   freebsd8    |        |   freebsd9   |
</span><span class='line'>   |             |        |               |        |              |
</span><span class='line'>   | VMWARE Host |        | VMWARE client |        |              |
</span><span class='line'>   |             |'''''''''               |        |              |
</span><span class='line'>   |             |        |     server    |        |    client    |
</span><span class='line'>   | 172.16.27.37|        |192.168.216.145|        |172.16.30.184 |
</span><span class='line'>   |             |        |               |        |              |
</span><span class='line'>   |             |        |               |        |              |
</span><span class='line'>   |             |        |               |        |              |
</span><span class='line'>   '`'''''''''''''        `---------------'        '`''''''''''''''</span></code></pre></td></tr></table></div></figure>


<p>A）WIN7所在vmware宿主机的网卡，地址为172.16.27.37/24(24代表子网掩码为255.255.255.0),默认网关172.16.27.38</p>

<p>B）Freebsd8 服务器所在的vmware虚拟机上原有一块NAT网卡em0，地址为192.168.216.145,一开始采用DHCP配置</p>

<p>C）Freebsd9 客户端上只有一块网卡epair38b,地址为172.16.30.184,默认网关为172.16.30.254</p>

<p>记录：</p>

<h2>实现A和B互通</h2>

<p>A到B，VMWARE直接就实现了。
B到A，需要添加一块bridge方式的网卡em0。使用sysinstall添加后，配置为172.16.27.59/24,默认网关172.16.27.38,注意在/etc/resolv.conf中加上这块网卡的dns，这里是172.16.27.38</p>

<h2>实现A和C互通</h2>

<p>A到C，网络规划的时候直接就通了，不在同一网关，在win7的网卡属性TCP/IPv4属性的高级TCP/IP设置中，选IP设置选项卡，然后在默认网关中添加C所在的网关172.16.30.254
C到A，网络规划的时候指定了，/etc/resolv.conf中nameserver 172.16.27.1，另一个网关也直接能通到A，只需要打开WIN7的ping防火墙即可，可以google之。</p>

<h2>实现B和C互通</h2>

<p>B到C，经过以上操作已经可以了。
C到B，同上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[非常便捷的ssh信任制作脚本ssh-copy-id]]></title>
    <link href="http://evoupsight.com/blog/2013/10/17/ssh-copy-id/"/>
    <updated>2013-10-17T17:29:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/10/17/ssh-copy-id</id>
    <content type="html"><![CDATA[<p>手册一把原来这个工具就是shell脚本，ssh-copy-id这个工具可以方便的把公钥直接拷贝到对方服务器信任列表。比起来回切换服务器拷贝公钥方便多了。</p>

<!-- more -->


<p>实验：hostA: 172.16.30.184:22  hostB:211.136.104.189:9999</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt;ssh-keygen -t rsa
</span><span class='line'>
</span><span class='line'>Generating public/private rsa key pair.
</span><span class='line'>
</span><span class='line'>Enter file in which to save the key <span class="o">(</span>/home/user/.ssh/id_rsa<span class="o">)</span>:
</span><span class='line'>
</span><span class='line'>/home/user/.ssh/id_rsa already exists.
</span><span class='line'>
</span><span class='line'>Overwrite <span class="o">(</span>y/n<span class="o">)</span>? y
</span><span class='line'>
</span><span class='line'>Enter passphrase <span class="o">(</span>empty <span class="k">for </span>no passphrase<span class="o">)</span>:
</span><span class='line'>
</span><span class='line'>Enter same passphrase again:
</span><span class='line'>
</span><span class='line'>Your identification has been saved in /home/user/.ssh/id_rsa.
</span><span class='line'>
</span><span class='line'>Your public key has been saved in /home/user/.ssh/id_rsa.pub.
</span><span class='line'>
</span><span class='line'>The key fingerprint is:
</span><span class='line'>
</span><span class='line'>74:59:16:2c:01:0c:2a:21:b4:49:8d:0e:51:2f:d9:a4 user@user-arch.madhouse.cn
</span><span class='line'>
</span><span class='line'>The key<span class="err">&#39;</span>s randomart image is:
</span><span class='line'>
</span><span class='line'>+--<span class="o">[</span> RSA 2048<span class="o">]</span>----+
</span><span class='line'>
</span><span class='line'>|+<span class="o">==</span> . .o...o+.   |
</span><span class='line'>
</span><span class='line'>|oooO .  . .+.    |
</span><span class='line'>
</span><span class='line'>|ooE +   . o.     |
</span><span class='line'>
</span><span class='line'>| . o   . .       |
</span><span class='line'>
</span><span class='line'>|        S        |
</span><span class='line'>
</span><span class='line'>|                 |
</span><span class='line'>
</span><span class='line'>|                 |
</span><span class='line'>
</span><span class='line'>|                 |
</span><span class='line'>
</span><span class='line'>|                 |
</span><span class='line'>
</span><span class='line'>+-----------------+
</span></code></pre></td></tr></table></div></figure>


<p>然后运行如下脚本，按照提示输入密码即可</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ssh-copy-id <span class="s1">&#39;-p 9999 -i /usr/home/user/.ssh/id_rsa.pub user@211.136.104.189&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>更加简单的使用方法，不带i参数，默认使用当前用户的id_rsa.pub公钥</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ssh-copy-id user@211.136.104.189
</span></code></pre></td></tr></table></div></figure>


<p>这样子就可以了。</p>

<p>如果要建立非22端口的信任。
例：建立到211.136.221.207的信任，ssh的端口为8887，用户名为user</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ssh-copy-id <span class="s2">&quot;-p8887 user@211.136.221.207&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>参考：</p>

<p><a href="http://mikegerwitz.com/ssh-copy-id-and-sshd-port/">http://mikegerwitz.com/ssh-copy-id-and-sshd-port/</a></p>

<p><a href="http://blogread.cn/it/article/6103">http://blogread.cn/it/article/6103</a></p>
]]></content>
  </entry>
  
</feed>
