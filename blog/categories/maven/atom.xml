<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: maven | Evoup`s Blog]]></title>
  <link href="http://evoupsight.com/blog/categories/maven/atom.xml" rel="self"/>
  <link href="http://evoupsight.com/"/>
  <updated>2016-08-03T15:39:48+08:00</updated>
  <id>http://evoupsight.com/</id>
  <author>
    <name><![CDATA[Evoup`s Blog]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[hiveserver2的maven配置，使用cdh版本]]></title>
    <link href="http://evoupsight.com/blog/2014/08/30/hiveserver2-maven-config/"/>
    <updated>2014-08-30T17:52:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/08/30/hiveserver2-maven-config</id>
    <content type="html"><![CDATA[<p>hadoop2.0下开发软件我目前主要采用maven做项目构建管理，但要注意要使生产环境的版本和开发的版本一致。可以做的就是先了解生产环境的版本，然后给自己的软件指定相同的版本，避免兼容问题的发生。以下是方法记录。
<!-- more --></p>

<h4 id="section">添加仓库</h4>
<p>首先在pom.xml文件中添加repository</p>

<p>{% codeblock lang:xml pom.xml %}</p>
<repositories>
    <repository>
        <id>cloudera</id>
        <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
    </repository>
</repositories>
<p>{% endcodeblock %}</p>

<h4 id="section-1">加入依赖</h4>
<p>然后改用cdh的依赖，提供的artifactId和version就可以了
主要是2个包的事情</p>

<p>{% codeblock lang:xml pom.xml %}</p>
<dependency>
    <groupid>org.apache.hive</groupid>
    <artifactid>hive-jdbc</artifactid>
    <version>0.10.0-cdh4.7.0</version>
</dependency>
<dependency>
    <groupid>org.apache.hadoop</groupid>
    <artifactid>hadoop-common</artifactid>
    <version>2.0.0-cdh4.7.0</version>
</dependency>
<p>{% endcodeblock %}</p>

<p>依赖的部分，也可以用以下的方式载入
{% codeblock lang:xml pom.xml %}</p>
<dependency>  
            <groupid>org.apache.hive</groupid>  
            <artifactid>htmlparser</artifactid>  
            <version>2.0</version>  
            <scope>system</scope>  
            <systempath>${project.basedir}/lib/xxx.jar</systempath>  
</dependency>
<p>{% endcodeblock %}</p>

<p>然后是hiveserver2使用和hiveserver1要注意的地方</p>

<p>hiveserver2</p>

<p><code>java
URLHIVE="jdbc:hive2://"+hive_host+":"+hive_port+"/smartmad;auth=noSasl";
Class.forName("org.apache.hive.jdbc.HiveDriver");
</code></p>

<p>hiveserver1</p>

<p><code>java
URLHIVE="jdbc:hive://"+hive_host+":"+hive_port+"/smartmad;auth=noSasl";
Class.forName("org.apache.hadoop.hive.jdbc.HiveDriver");
</code></p>

<p>这里我们从hive改进hiveserver2的包命名的角度不难看出，该版本已成为apache顶级项目。</p>

<h4 id="section-2">参考文章</h4>
<p>http://www.cloudera.com/content/cloudera-content/cloudera-docs/CDH4/4.2.0/CDH4-Installation-Guide/cdh4ig_topic_31.html</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[maven打包时候加入依赖]]></title>
    <link href="http://evoupsight.com/blog/2014/03/15/maven-add-dependency/"/>
    <updated>2014-03-15T14:52:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/03/15/maven-add-dependency</id>
    <content type="html"><![CDATA[<p>maven打包默认不加入依赖的jar包，需要改动pom.xml，加入以下内容：
<!-- more --></p>

<p>{% codeblock lang:xml pom.xml %}
    <build>
        <plugins>
            <plugin>
                <groupid>org.apache.maven.plugins</groupid>
                <artifactid>maven-jar-plugin</artifactid>
                <executions>
                    <execution>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <excludes>
                                <exclude>/conf/**</exclude>
                                <exclude>/fonts/**</exclude>
                                <exclude>/images/**</exclude>
                                <exclude>/sounds/**</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>     
                <groupid>org.apache.maven.plugins</groupid>
                <artifactid>maven-shade-plugin</artifactid>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainclass>com.company.mod.cls</mainclass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupid>org.apache.maven.plugins</groupid>
                <artifactid>maven-surefire-plugin</artifactid>
                <configuration>
                    <testfailureignore>true</testfailureignore>
                </configuration>
            </plugin>
       </plugins>
    </build>
{% endcodeblock %}</p>

]]></content>
  </entry>
  
</feed>
