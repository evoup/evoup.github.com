<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mysql | Evoup`s Blog]]></title>
  <link href="http://evoupsight.com/blog/categories/mysql/atom.xml" rel="self"/>
  <link href="http://evoupsight.com/"/>
  <updated>2014-01-09T10:34:02+08:00</updated>
  <id>http://evoupsight.com/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[完美解决phpmyadmin4.1.0访问缓慢]]></title>
    <link href="http://evoupsight.com/blog/2013/11/29/phpmyadmin4-dot-1-0-access-slow/"/>
    <updated>2013-11-29T10:52:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/29/phpmyadmin4-dot-1-0-access-slow</id>
    <content type="html"><![CDATA[<p>安装最新版phpmyadmin4.1.0出现了访问非常缓慢的问题，记录一下</p>

<!-- more -->


<h3>第一步</h3>

<p>文件名./libraries/Util.class.php文件
查找
<code>php
return strftime($date, $timestamp);
</code>
替换为
<code>php
if(extension_loaded('gettext'))
  return strftime($date, $timestamp);
</code></p>

<h3>第二步</h3>

<p>文件名./version_check.php文件
注释掉以下代码
```php
$version = PMA_Util::getLatestVersion();</p>

<p>echo json_encode(</p>

<pre><code>array(
    'version' =&gt; $version-&gt;version,
    'date' =&gt; $version-&gt;date,
    )
);
</code></pre>

<p>```</p>

<h3>第三步</h3>

<p>直接浏览器访问/setup路径，进行设置</p>

<h3>第四步</h3>

<p>应该可以登录了，如果不行清除cookie应该也可以访问了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[浅谈mysql导入导出csv的几种方法]]></title>
    <link href="http://evoupsight.com/blog/2012/11/26/mysql-import-output-csv/"/>
    <updated>2012-11-26T09:56:00+08:00</updated>
    <id>http://evoupsight.com/blog/2012/11/26/mysql-import-output-csv</id>
    <content type="html"><![CDATA[<p>有几种方法，这里一一列举：</p>

<h3>第一种：使用phpmyadmin选择文件上传</h3>

<p>此种方式很直观，只是要注意选择正确的换行符。假设我们在mysql的shell中采用如下方式先导出数据
<code>sql
select * from test_info
into outfile '/tmp/test_info.csv'
fields terminated by ',' optionally enclosed by '"' escaped by '"'
lines terminated by '\r\n';
</code>
则需要上传test_info.csv，点击CSV using LOAD DATA，然后按照如下设置进行导入
（其中fields terminated为分隔字段，optionally enclosed为可选包裹字段，escaped为转移字段，line terminated为行终止字段）
<img src="/images/evoup/phpmyadmin.png" alt="Alt text" /></p>

<h3>第二种：mysql shell</h3>

<p>其实就是刚刚导出的逆操作。在mysql的shell中操作：
```mysql
load data infile &lsquo;/tmp/test_info.csv&rsquo;</p>

<pre><code>into table test_info 
fields terminated by ','  optionally enclosed by '"' escaped by '"'
lines terminated by '\r\n';
</code></pre>

<p>```</p>

<h3>第三种：php程序解析后插入</h3>

<p><code>``php
&lt;?php
echo "开始导入csv数据到工作表\n";
echo "导入test_info...\n";
$mysql_host="172.16.27.55";
$mysql_user="user";
$mysql_pass="pass";
$db="test_info";
$handle = fopen ('/tmp/test_info.csv','r');  
$link= mysqli_init();
$link-&gt;options(MYSQLI_OPT_CONNECT_TIMEOUT, 8);
$link-&gt;real_connect($mysql_host, $mysql_user, $mysql_pass, $db);
$link-&gt;query("SET NAMES utf8");
$query="insert into</code>test_info<code>(</code>字段1<code>,</code>字段2`) values (&ldquo;;<br/>
while ($data = fgetcsv ($handle)) {</p>

<pre><code>$num = count ($data);  
for ($i=0; $i&lt;$num; $i++) {  
    if($i == $num-1){  
        $query .= "\"".$data[$i]."\")";  
        break;  
    }  
    $query .= "\"".$data[$i]."\",";  
}  

if (!($result=$link-&gt;query($query))) {
    echo $query;
    echo ("[导入失败]\n");
    exit;
}
</code></pre>

<p>$query=&ldquo;insert into <code>test_info</code> (<code>字段1</code>,<code>字段2</code>) values (&rdquo;;</p>

<p>}
?>
```
需要注意如果fgetcsv出错和到了行尾都是会返回false的。</p>
]]></content>
  </entry>
  
</feed>
