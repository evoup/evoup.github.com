<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: freebsd | Evoup`s Blog]]></title>
  <link href="http://evoupsight.com/blog/categories/freebsd/atom.xml" rel="self"/>
  <link href="http://evoupsight.com/"/>
  <updated>2016-08-03T14:51:12+08:00</updated>
  <id>http://evoupsight.com/</id>
  <author>
    <name><![CDATA[Evoup`s Blog]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[freebsd和linux上安装中文字体]]></title>
    <link href="http://evoupsight.com/blog/2014/06/13/simplely-install-chinese-fonts-on-freebsd-and-linux/"/>
    <updated>2014-06-13T17:45:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/06/13/simplely-install-chinese-fonts-on-freebsd-and-linux</id>
    <content type="html"><![CDATA[<h3 id="section">使用中文字体及其安装</h3>
<p>首先说明，因为需要在不同的平台下让rrdtool显示的图片看起来舒服点，考虑安装中文字体。这里搜罗下方法。（这种方式仅仅是为了程序工作正常，需要使自己的KDE或者GNOME系统中文显示正常可以不用看本文了。）
<!-- more --></p>

<h3 id="freebsd">freebsd下</h3>
<p>直接把字体文件放到/usr/local/share/fonts下，然后刷新字体缓存</p>

<p><code>bash
sudo cp ukai.ttf /usr/local/share/fonts/
sudo fc-cache -f -v
</code></p>

<h3 id="centos">centos下</h3>
<p>把字体放到/usr/share/fonts/msfonts下，然后执行几个命令</p>

<p><code>bash
sudo mkdir /use/share/fonts/msfonts
sudo cp ukai.ttf /usr/share/fonts/msfonts/
cd /usr/share/fonts/msfonts/
sudo mkfontscale
sudo mkfontdir
sudo fc-cache -fv
</code></p>

<p>更EZ的方式有</p>

<p><code>bash
sudo yum  –y  install  fonts-chinese
</code></p>

<p>于是就可以在rrdtool里指定字体为ukai.ttf了，是不是各种简单:)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[64位freebsd8.1下安装ffmpeg和php扩展]]></title>
    <link href="http://evoupsight.com/blog/2014/02/12/freebsd8-dot-1amd64-install-ffmpeg-and-php-extension/"/>
    <updated>2014-02-12T17:27:00+08:00</updated>
    <id>http://evoupsight.com/blog/2014/02/12/freebsd8-dot-1amd64-install-ffmpeg-and-php-extension</id>
    <content type="html"><![CDATA[<p>帮同事解决一个开源音视频转换处理软件ffmpeg在freebsd8.1下安装的问题，我也是装了2个下午，绕了个圈子下载了个没用的扩展浪费时间。</p>

<!-- more -->

<h3 id="freebsd81-amd64">环境freebsd8.1 amd64</h3>
<p>我拿个了干净的系统做试验，安装的时候选择了develop模式和customize，customize里只选择了ports,然后php是装在了/usr/local/php53目录下。</p>

<h3 id="section">安装过程描述</h3>
<p>####ffmpeg的安装
主要采用pkg_add ffmpeg.tbz的方式来安装。
然后看报错的依赖缺少啥一个一个装上去，途中需要的包可以通过下面的命令来获取：</p>

<p><code>sh
fetch ftp://ftp.fi.freebsd.org/pub/FreeBSD/ports/amd64/packages-8.1-release/Latest/ffmpeg.tbz
fetch ftp://ftp.fi.freebsd.org/pub/FreeBSD/ports/amd64/packages-8.1-release/Latest/x264.tbz
</code></p>

<p>采用pkg_add快速安装包
安装的时候反正就是不断用下面的语句试探</p>

<p><code>sh
sudo pkg_add ffmpeg.tbz
</code></p>

<p>用pkg_add一个一个装，直到ffmpeg安装完成。</p>

<p>如果你也是这么装，那么全部东西下完，大概有这么多依赖OMG</p>

<p><code>sh
&gt;ls
damageproto.tbz  gpac-libgpac.tbz  libXau.tbz      libdrm.tbz            libvorbis.tbz   png.tbz               xvid.tbz
dri2proto.tbz    jpeg.tbz          libXdamage.tbz  libiconv.tbz          libxcb.tbz      schroedinger.tbz
expat.tbz        kbproto.tbz       libXdmcp.tbz    libogg.tbz            libxml.tbz      x264.tbz
faad2.tbz        libGL.tbz         libXext.tbz     libpthread-stubs.tbz  libxml2.tbz     xextproto.tbz
ffmpeg.tbz       libGLU.tbz        libXfixes.tbz   libtheora.tbz         orc.tbz         xf86vidmodeproto.tbz
fixesproto.tbz   libX11.tbz        libXxf86vm.tbz  libtool.tbz           pkg-config.tbz  xproto.tbz
</code></p>

<p>嫌麻烦的可以先下好软件然后批量装</p>

<p><code>sh
find . -name "*.tbz" -exec pkg_add {} \;
</code></p>

<p>当然也免不了部分手动来部分包，窃喜~</p>

<hr />

<h4 id="ffmpeg-php">ffmpeg-php的安装</h4>
<p>装php，./configure的时候出现出错，查看config.log</p>

<p><code> /usr/bin/ld: cannot find -liconv </code></p>

<p>需要再用pkg_add安装libxml，重新安装libiconv，用port安装，谈到要安装libtool213,再用pkg_add去装，卸掉libiconv，重新用port安装，下载php5.3编译通过，再去下载ffmpeg-php，用phpize的方式编译成动态库，会报告少autoconf，此时在到port里安装autoconf213，会让安装perl，等待安装完成就是。</p>

<p>下载正确的扩展,不要用sf那个2005年的扩展，不能用。</p>

<p><code>sh
fetch http://downloads.sourceforge.net/project/ffmpeg-php/ffmpeg-php/0.6.0/ffmpeg-php-0.6.0.tbz2
tar xjf ffmpeg-php-0.6.0.tbz2
cd ffmpeg-php
phpize
</code></p>

<p>在phpize的时候可能出现</p>

<p><code>sh
[evoup@freebsd81amd64 ffmpeg]&gt;/usr/local/php53/bin/phpize
Configuring for:
PHP Api Version:         20090626
Zend Module Api No:      20090626
Zend Extension Api No:   220090626
Cannot find autoconf. Please check your autoconf installation and the
$PHP_AUTOCONF environment variable. Then, rerun this script.
</code></p>

<p>此时需要在环境变量中指定好autoconf和autoheader的路径，我是加载.cshrc文件中</p>

<p><code>sh
setenv PHP_AUTOCONF "/usr/local/bin/autoconf"
setenv PHP_AUTOHEADER "/usr/local/bin/autoheader"
</code></p>

<p>完事之后不要忘记重载~/.cshrc</p>

<p><code>sh
source ~/.cshrc
</code></p>

<p>phpize完了之后可以开始configure了</p>

<p><code>sh
./configure --with-php-cofig=/usr/local/php53/bin/php-config
/usr/local/include/ffmpeg/avcodec.h:30:30: error: libavutil/avutil.h: No such file or directory
</code></p>

<p>其实这个是ffmpeg安装好应该有的库</p>

<p><code>sh
$ locate avutil.h
/usr/home/evoup/software/libavutil/avutil.h
/usr/local/include/ffmpeg/avutil.h
/usr/local/include/libavutil/avutil.h
</code></p>

<p>怎么装上去？嘿嘿，直接把相关的路径做软连接</p>

<p><code>sh
sudo ln -s /usr/local/include/libavcodec/ /usr/include/libavcodec/
sudo ln -s /usr/local/include/libavcodec/ /usr/include/libavcodec
sudo ln -s /usr/local/include/libavdevice/ /usr/include/libavdevice
sudo ln -s /usr/local/include/libavfilter/ /usr/include/libavfilter
sudo ln -s /usr/local/include/libavformat/ /usr/include/libavformat
sudo ln -s /usr/local/include/libavutil/ /usr/include/libavutil
</code></p>

<p>然后再次</p>

<p><code>sh
make 
sudo make install
Installing shared extensions:     /usr/local/php53/lib/php/extensions/no-debug-non-zts-20090626/
</code></p>

<p>安装ok,接下来加载到php,要做的是看下php的ini位置，放进去就是</p>

<p><code>sh
$ /usr/local/php53/bin/php -i | grep Conf
Configure Command =&gt;  './configure'  '--prefix=/usr/local/php53'
Configuration File (php.ini) Path =&gt; /usr/local/php53/lib
Loaded Configuration File =&gt; /usr/local/php53/lib/php.ini
Configuration
</code></p>

<p>说明在/usr/local/php53/lib下，于是把编译好的so移到该目录下</p>

<p><code>sh
$ sudo mv /usr/local/php53/lib/php/extensions/no-debug-non-zts-20090626/ffmpeg.so /usr/local/php53/lib
</code></p>

<p>最后在php.ini中指定</p>

<p><code>sh
extension=ffmpeg.so
</code></p>

<hr />

<p>观察劳动成果</p>

<p><code>sh
$ /usr/local/php53/bin/php -i | grep ffmpeg
ffmpeg
ffmpeg-php version =&gt; 0.6.0-svn
ffmpeg-php built on =&gt; Feb 12 2014 17:10:47
ffmpeg-php gd support  =&gt; disabled
ffmpeg libavcodec version =&gt; Lavc52.20.1
ffmpeg libavformat version =&gt; Lavf52.31.0
ffmpeg swscaler =&gt; disabled
ffmpeg.allow_persistent =&gt; 0 =&gt; 0
ffmpeg.show_warnings =&gt; 0 =&gt; 0
</code></p>

<p>没问题收工。</p>

<p>参考互联网文章《编译FFMpeg和FFMpeg-php》linux版的</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[freebsd下安装vmware-tool]]></title>
    <link href="http://evoupsight.com/blog/2013/11/05/freebsd-install-vmware-tool/"/>
    <updated>2013-11-05T13:22:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/11/05/freebsd-install-vmware-tool</id>
    <content type="html"><![CDATA[<p>公司自建的vmware虚拟机，每当中餐回来后，由于系统处理待机状态莫名其妙地会比当前时间慢一段时间，导致server端保存数据的时间戳滞后。怎么解决呢？</p>

<!-- more -->

<h3 id="section">消极的方法</h3>
<p>首先可以尝试加上ntpdate自动来同步，不过这个方法比较死。</p>

<p>在crontab内加入
<code>bash
*/15  *   *   *   *   *   root   ntpdate 210.72.145.44
</code>
以及在/etc/rc.conf中
<code>bash
ntpdate_enable="YES"
</code></p>

<h3 id="section-1">积极的方法</h3>
<p>通过安装vmware-tool来一劳永逸的解决。那么我们如何在freebsd中安装vmware-tool呢？&lt;/br&gt;
首先需要点击vmware的菜单VM -&gt; Install VMware Tools&lt;/br&gt;
vmware-tool是一个perl脚本，先要安装好perl。然后要准备好compat6x-amd64安装包才能继续。
<code>bash
cd /usr/port/dist
sudo fetch ftp://ftp5.tw.freebsd.org/BSD/FreeBSD/ports/amd64/packages-8-current/Latest/compat6x-amd64.tbz
sudo pkg_add compat6x-amd64.tbz
*******************************************************************************
*                                                                             *
* Do not forget to add COMPAT_FREEBSD6 into                                   *
* your kernel configuration (enabled by default).                             *
*                                                                             *
* To configure and recompile your kernel see:                                 *
* http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/kernelconfig.html *
*                                                                             *
*******************************************************************************
</code>
安装依赖库后，切换到root后，执行如下指令：
<code>bash
mount /cdrom
cd /tmp
tar xzpf /cdrom/vmware-freebsd-tools.tar.gz
cd vmware-tools-distrib
./vmware-install.pl
</code>
这样vmware-tool就搞定了。
最后为了保险起先，关闭系统后，编辑.vmx文件
加上下面的时间同步的代码
<code>bash
tools.syncTime = "TRUE"
time.synchronize.continue = "TRUE"
time.synchronize.restore = "TRUE"
time.synchronize.resume.disk = "TRUE"
time.synchronize.shrink = "TRUE"
time.synchronize.tools.startup = "TRUE"
time.synchronize.tools.enable = "TRUE"
time.synchronize.resume.host = "TRUE"
</code></p>

<p>参考链接</p>

<p>http://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;cmd=displayKC&amp;externalId=1189
http://www.neko6.tk/archives/1067</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[局域网计算机和vmware虚拟机互ping]]></title>
    <link href="http://evoupsight.com/blog/2013/10/22/vmware-ping-in-lan/"/>
    <updated>2013-10-22T13:35:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/10/22/vmware-ping-in-lan</id>
    <content type="html"><![CDATA[<h2 id="section">情景描述</h2>
<p>在公司的WIN7电脑上装了vmware进行服务端的开发，通过socket和client端进行通信。现在局域网中有若干台服务器安装了客户端要与vmware虚拟机上的server端进行通讯。由于不是处于一个网段，无法互相ping得地址，进而不能交互，以下为解决问题的过程笔录。
<!-- more --></p>

<h2 id="section-1">我的环境</h2>
<p><code>
  ,____________________
  |                   |  ,''''''''''''''''''|   ,------------------Y
  |   gateway         |  |   gateway        |   |   gateway        |
  |                   |__|                  |   |                  |
      172.16.27.38    |  |  172.16.27.1     |   |  172.16.30.254   |
  |                   |  |                  |   |                  |
  `.................../  L__________________|   |__________________J
           |                                              |
           |                                              |
           |                                              |
           |                                              |
           |                                              |
           |                                              |
   ,_______|______                                        |
   |             |        ,''''''''''''''`.        ,'''''''''''''`.
   |             |        |               |        |              |
   | WIN7        |        |   freebsd8    |        |   freebsd9   |
   |             |        |               |        |              |
   | VMWARE Host |        | VMWARE client |        |              |
   |             |'''''''''               |        |              |
   |             |        |     server    |        |    client    |
   | 172.16.27.37|        |192.168.216.145|        |172.16.30.184 |
   |             |        |               |        |              |
   |             |        |               |        |              |
   |             |        |               |        |              |
   '`'''''''''''''        `---------------'        '`''''''''''''''
</code>
A）WIN7所在vmware宿主机的网卡，地址为172.16.27.37/24(24代表子网掩码为255.255.255.0),默认网关172.16.27.38</p>

<p>B）Freebsd8 服务器所在的vmware虚拟机上原有一块NAT网卡em0，地址为192.168.216.145,一开始采用DHCP配置</p>

<p>C）Freebsd9 客户端上只有一块网卡epair38b,地址为172.16.30.184,默认网关为172.16.30.254</p>

<p>记录：</p>

<h2 id="ab">实现A和B互通</h2>
<p>A到B，VMWARE直接就实现了。
B到A，需要添加一块bridge方式的网卡em0。使用sysinstall添加后，配置为172.16.27.59/24,默认网关172.16.27.38,注意在/etc/resolv.conf中加上这块网卡的dns，这里是172.16.27.38</p>

<h2 id="ac">实现A和C互通</h2>
<p>A到C，网络规划的时候直接就通了，不在同一网关，在win7的网卡属性TCP/IPv4属性的高级TCP/IP设置中，选IP设置选项卡，然后在默认网关中添加C所在的网关172.16.30.254
C到A，网络规划的时候指定了，/etc/resolv.conf中nameserver 172.16.27.1，另一个网关也直接能通到A，只需要打开WIN7的ping防火墙即可，可以google之。</p>

<h2 id="bc">实现B和C互通</h2>
<p>B到C，经过以上操作已经可以了。
C到B，同上。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用ntpdate同步时间报错: step-systime: Operation not permitted]]></title>
    <link href="http://evoupsight.com/blog/2013/07/19/ntpdate-step-system-error/"/>
    <updated>2013-07-19T15:35:00+08:00</updated>
    <id>http://evoupsight.com/blog/2013/07/19/ntpdate-step-system-error</id>
    <content type="html"><![CDATA[<p>今天有台虚拟机进行时间的同步报错
```sh
ntpdate ntp.sjtu.edu.cn</p>

<p>19 Nov 15:38:54 ntpdate[93376]: step-systime: Operation not permitted
```</p>

<p>搜索一把，许多VPS分给用户的虚拟机也存在类似症状，原来是宿主机不允许修改时间，最后通知系统管理员修改搞定。</p>

]]></content>
  </entry>
  
</feed>
